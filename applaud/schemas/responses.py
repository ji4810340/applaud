# This file is autogenerated by `applaudgen` from `app_store_connect_api.json`.
# Do not modify this file -- YOUR CHANGES WILL BE ERASED!

import requests
from deprecated import deprecated
from typing import Union, Optional, Literal, Iterator
from .enums import *
from .models import *
from .requests import *
from pydantic import Field

class GzipResponse:

    def __init__(self, response: requests.Response):
        import zlib
        self.response = response

        self.default_gzip_filename = response.headers.get('x-reports-filename') or response.headers['Content-Disposition'].split('filename=')[1].strip('"')
            
        if self.default_gzip_filename.endswith('.gz'):
            self.default_extract_filename = self.default_gzip_filename[:-3]
        else:
            self.default_extract_filename = None

        self._decompressor = zlib.decompressobj(16+zlib.MAX_WBITS)

    def decompress(self) -> bytes:
        '''Decompresses the gzip content in response.'''
        return self._decompressor.decompress(self.response.content)

    def save(self, filename: Optional[str]=None, *, decompress: bool=False):
        '''Saves or extracts the gzip content to a file.

        :param filename: the filename to save to. If not specified, the filename will be the value of the  `x-reports-filename` or `Content-Disposition` header.
        :type filename: str = None
        :param decompress: if True, the content will be extracted to a file. If False, the content will be saved to a file.
        '''
        filename = filename or (self.default_extract_filename if decompress else self.default_gzip_filename)

        with open(filename, 'wb') as out:
            if decompress:
                out.write(self._decompressor.decompress(self.response.content))
            else:
                out.write(self.response.content)

class GzipStreamResponse(GzipResponse):

    CHUNKSIZE: int = 1024

    def iter_decompress(self, chunk_size: Optional[int]=None) -> Iterator[bytes]:
        '''Iterates over the response data and decompress it.

        :param chunk_size: the size of the chunks to yield. chunk_size must be of type int or None. If chunk_size is None, the default value of GzipStreamResponse.CHUNKSIZE will be used.
        :type chunk_size: int = None
        '''
        while True:
            data = self.response.raw.read(chunk_size or self.CHUNKSIZE)
            if not data:
                yield self._decompressor.flush()
                break

            yield self._decompressor.decompress(data)

    def save(self, filename: Optional[str]=None, *, decompress: bool=False):
        '''Saves or extracts the gzip content to a file.

        :param filename: the filename to save to. If not specified, the filename will be the value of the  `x-reports-filename` or `Content-Disposition` header.
        :type filename: str = None
        :param decompress: if True, the content will be extracted to a file. If False, the content will be saved to a file.
        '''
        filename = filename or (self.default_extract_filename if decompress else self.default_gzip_filename)

        with open(filename, 'wb') as out:
            if decompress:
                for decompressed in self.iter_decompress(self.CHUNKSIZE):
                    out.write(decompressed)
            else:
                for chunk in self.response.iter_content(self.CHUNKSIZE):
                    out.write(chunk)

class JSONResponse(ApplaudModel):
    pass

class AccessibilityDeclarationsResponse(JSONResponse):
    data: list[AccessibilityDeclaration]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AccessibilityDeclarationResponse(JSONResponse):
    data: AccessibilityDeclaration
    links: DocumentLinks

class ActorsResponse(JSONResponse):
    data: list[Actor]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class ActorResponse(JSONResponse):
    data: Actor
    links: DocumentLinks

class AgeRatingDeclarationResponse(JSONResponse):
    data: AgeRatingDeclaration
    links: DocumentLinks

class AlternativeDistributionDomainsResponse(JSONResponse):
    data: list[AlternativeDistributionDomain]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AlternativeDistributionDomainResponse(JSONResponse):
    data: AlternativeDistributionDomain
    links: DocumentLinks

class AlternativeDistributionKeysResponse(JSONResponse):
    data: list[AlternativeDistributionKey]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AlternativeDistributionKeyResponse(JSONResponse):
    data: AlternativeDistributionKey
    links: DocumentLinks

class AlternativeDistributionPackageDeltasResponse(JSONResponse):
    data: list[AlternativeDistributionPackageDelta]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AlternativeDistributionPackageDeltaResponse(JSONResponse):
    data: AlternativeDistributionPackageDelta
    links: DocumentLinks

class AlternativeDistributionPackageVariantsResponse(JSONResponse):
    data: list[AlternativeDistributionPackageVariant]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AlternativeDistributionPackageVariantResponse(JSONResponse):
    data: AlternativeDistributionPackageVariant
    links: DocumentLinks

class AlternativeDistributionPackageVersionsResponse(JSONResponse):
    data: list[AlternativeDistributionPackageVersion]
    links: PagedDocumentLinks
    included: Optional[list[Union[AlternativeDistributionPackageDelta, AlternativeDistributionPackageVariant, AlternativeDistributionPackage]]] = None
    meta: Optional[PagingInformation] = None

class AlternativeDistributionPackageVersionResponse(JSONResponse):
    data: AlternativeDistributionPackageVersion
    links: DocumentLinks
    included: Optional[list[Union[AlternativeDistributionPackageDelta, AlternativeDistributionPackageVariant, AlternativeDistributionPackage]]] = None

class AlternativeDistributionPackageResponse(JSONResponse):
    data: AlternativeDistributionPackage
    links: DocumentLinks
    included: Optional[list[AlternativeDistributionPackageVersion]] = None

class AnalyticsReportInstancesResponse(JSONResponse):
    data: list[AnalyticsReportInstance]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AnalyticsReportInstanceResponse(JSONResponse):
    data: AnalyticsReportInstance
    links: DocumentLinks

class AnalyticsReportRequestsResponse(JSONResponse):
    data: list[AnalyticsReportRequest]
    links: PagedDocumentLinks
    included: Optional[list[AnalyticsReport]] = None
    meta: Optional[PagingInformation] = None

class AnalyticsReportRequestResponse(JSONResponse):
    data: AnalyticsReportRequest
    links: DocumentLinks
    included: Optional[list[AnalyticsReport]] = None

class AnalyticsReportSegmentsResponse(JSONResponse):
    data: list[AnalyticsReportSegment]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AnalyticsReportSegmentResponse(JSONResponse):
    data: AnalyticsReportSegment
    links: DocumentLinks

class AnalyticsReportsResponse(JSONResponse):
    data: list[AnalyticsReport]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AnalyticsReportResponse(JSONResponse):
    data: AnalyticsReport
    links: DocumentLinks

class AppAvailabilityV2Response(JSONResponse):
    data: AppAvailabilityV2
    links: DocumentLinks
    included: Optional[list[TerritoryAvailability]] = None

class AppCategoriesResponse(JSONResponse):
    data: list[AppCategory]
    links: PagedDocumentLinks
    included: Optional[list[AppCategory]] = None
    meta: Optional[PagingInformation] = None

class AppCategoryResponse(JSONResponse):
    data: AppCategory
    links: DocumentLinks
    included: Optional[list[AppCategory]] = None

class AppClipAdvancedExperienceImageResponse(JSONResponse):
    data: AppClipAdvancedExperienceImage
    links: DocumentLinks

class AppClipAdvancedExperiencesResponse(JSONResponse):
    data: list[AppClipAdvancedExperience]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppClipAdvancedExperienceImage, AppClipAdvancedExperienceLocalization, AppClip]]] = None
    meta: Optional[PagingInformation] = None

class AppClipAdvancedExperienceResponse(JSONResponse):
    data: AppClipAdvancedExperience
    links: DocumentLinks
    included: Optional[list[Union[AppClipAdvancedExperienceImage, AppClipAdvancedExperienceLocalization, AppClip]]] = None

class AppClipAppStoreReviewDetailResponse(JSONResponse):
    data: AppClipAppStoreReviewDetail
    links: DocumentLinks
    included: Optional[list[AppClipDefaultExperience]] = None

class AppClipDefaultExperienceLocalizationsResponse(JSONResponse):
    data: list[AppClipDefaultExperienceLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppClipDefaultExperience, AppClipHeaderImage]]] = None
    meta: Optional[PagingInformation] = None

class AppClipDefaultExperienceLocalizationResponse(JSONResponse):
    data: AppClipDefaultExperienceLocalization
    links: DocumentLinks
    included: Optional[list[Union[AppClipDefaultExperience, AppClipHeaderImage]]] = None

class AppClipDefaultExperiencesResponse(JSONResponse):
    data: list[AppClipDefaultExperience]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppClipAppStoreReviewDetail, AppClipDefaultExperienceLocalization, AppClip, AppStoreVersion]]] = None
    meta: Optional[PagingInformation] = None

class AppClipDefaultExperienceResponse(JSONResponse):
    data: AppClipDefaultExperience
    links: DocumentLinks
    included: Optional[list[Union[AppClipAppStoreReviewDetail, AppClipDefaultExperienceLocalization, AppClip, AppStoreVersion]]] = None

class AppClipDomainStatusResponse(JSONResponse):
    data: AppClipDomainStatus
    links: DocumentLinks

class AppClipHeaderImageResponse(JSONResponse):
    data: AppClipHeaderImage
    links: DocumentLinks
    included: Optional[list[AppClipDefaultExperienceLocalization]] = None

class AppClipsResponse(JSONResponse):
    data: list[AppClip]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppClipDefaultExperience, App]]] = None
    meta: Optional[PagingInformation] = None

class AppClipResponse(JSONResponse):
    data: AppClip
    links: DocumentLinks
    included: Optional[list[Union[AppClipDefaultExperience, App]]] = None

class AppCustomProductPageLocalizationsResponse(JSONResponse):
    data: list[AppCustomProductPageLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppCustomProductPageVersion, AppKeyword, AppPreviewSet, AppScreenshotSet]]] = None
    meta: Optional[PagingInformation] = None

class AppCustomProductPageLocalizationResponse(JSONResponse):
    data: AppCustomProductPageLocalization
    links: DocumentLinks
    included: Optional[list[Union[AppCustomProductPageVersion, AppKeyword, AppPreviewSet, AppScreenshotSet]]] = None

class AppCustomProductPageVersionsResponse(JSONResponse):
    data: list[AppCustomProductPageVersion]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppCustomProductPageLocalization, AppCustomProductPage]]] = None
    meta: Optional[PagingInformation] = None

class AppCustomProductPageVersionResponse(JSONResponse):
    data: AppCustomProductPageVersion
    links: DocumentLinks
    included: Optional[list[Union[AppCustomProductPageLocalization, AppCustomProductPage]]] = None

class AppCustomProductPagesResponse(JSONResponse):
    data: list[AppCustomProductPage]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppCustomProductPageLocalization, AppCustomProductPageVersion, App]]] = None
    meta: Optional[PagingInformation] = None

class AppCustomProductPageResponse(JSONResponse):
    data: AppCustomProductPage
    links: DocumentLinks
    included: Optional[list[Union[AppCustomProductPageLocalization, AppCustomProductPageVersion, App]]] = None

class AppEncryptionDeclarationDocumentResponse(JSONResponse):
    data: AppEncryptionDeclarationDocument
    links: DocumentLinks

class AppEncryptionDeclarationsResponse(JSONResponse):
    data: list[AppEncryptionDeclaration]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppEncryptionDeclarationDocument, App, Build]]] = None
    meta: Optional[PagingInformation] = None

class AppEncryptionDeclarationResponse(JSONResponse):
    data: AppEncryptionDeclaration
    links: DocumentLinks
    included: Optional[list[Union[AppEncryptionDeclarationDocument, App, Build]]] = None

class AppEventLocalizationsResponse(JSONResponse):
    data: list[AppEventLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppEventScreenshot, AppEventVideoClip, AppEvent]]] = None
    meta: Optional[PagingInformation] = None

class AppEventLocalizationResponse(JSONResponse):
    data: AppEventLocalization
    links: DocumentLinks
    included: Optional[list[Union[AppEventScreenshot, AppEventVideoClip, AppEvent]]] = None

class AppEventScreenshotsResponse(JSONResponse):
    data: list[AppEventScreenshot]
    links: PagedDocumentLinks
    included: Optional[list[AppEventLocalization]] = None
    meta: Optional[PagingInformation] = None

class AppEventScreenshotResponse(JSONResponse):
    data: AppEventScreenshot
    links: DocumentLinks
    included: Optional[list[AppEventLocalization]] = None

class AppEventVideoClipsResponse(JSONResponse):
    data: list[AppEventVideoClip]
    links: PagedDocumentLinks
    included: Optional[list[AppEventLocalization]] = None
    meta: Optional[PagingInformation] = None

class AppEventVideoClipResponse(JSONResponse):
    data: AppEventVideoClip
    links: DocumentLinks
    included: Optional[list[AppEventLocalization]] = None

class AppEventsResponse(JSONResponse):
    data: list[AppEvent]
    links: PagedDocumentLinks
    included: Optional[list[AppEventLocalization]] = None
    meta: Optional[PagingInformation] = None

class AppEventResponse(JSONResponse):
    data: AppEvent
    links: DocumentLinks
    included: Optional[list[AppEventLocalization]] = None

class AppInfoLocalizationsResponse(JSONResponse):
    data: list[AppInfoLocalization]
    links: PagedDocumentLinks
    included: Optional[list[AppInfo]] = None
    meta: Optional[PagingInformation] = None

class AppInfoLocalizationResponse(JSONResponse):
    data: AppInfoLocalization
    links: DocumentLinks
    included: Optional[list[AppInfo]] = None

class AppInfosResponse(JSONResponse):
    data: list[AppInfo]
    links: PagedDocumentLinks
    included: Optional[list[Union[AgeRatingDeclaration, AppCategory, AppInfoLocalization, App]]] = None
    meta: Optional[PagingInformation] = None

class AppInfoResponse(JSONResponse):
    data: AppInfo
    links: DocumentLinks
    included: Optional[list[Union[AgeRatingDeclaration, AppCategory, AppInfoLocalization, App]]] = None

class AppKeywordsResponse(JSONResponse):
    data: list[AppKeyword]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppPreviewSetsResponse(JSONResponse):
    data: list[AppPreviewSet]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppCustomProductPageLocalization, AppPreview, AppStoreVersionExperimentTreatmentLocalization, AppStoreVersionLocalization]]] = None
    meta: Optional[PagingInformation] = None

class AppPreviewSetResponse(JSONResponse):
    data: AppPreviewSet
    links: DocumentLinks
    included: Optional[list[Union[AppCustomProductPageLocalization, AppPreview, AppStoreVersionExperimentTreatmentLocalization, AppStoreVersionLocalization]]] = None

class AppPreviewsResponse(JSONResponse):
    data: list[AppPreview]
    links: PagedDocumentLinks
    included: Optional[list[AppPreviewSet]] = None
    meta: Optional[PagingInformation] = None

class AppPreviewResponse(JSONResponse):
    data: AppPreview
    links: DocumentLinks
    included: Optional[list[AppPreviewSet]] = None

class AppPricePointsV3Response(JSONResponse):
    data: list[AppPricePointV3]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, Territory]]] = None
    meta: Optional[PagingInformation] = None

class AppPricePointV3Response(JSONResponse):
    data: AppPricePointV3
    links: DocumentLinks
    included: Optional[list[Union[App, Territory]]] = None

class AppPriceScheduleResponse(JSONResponse):
    data: AppPriceSchedule
    links: DocumentLinks
    included: Optional[list[Union[AppPriceV2, App, Territory]]] = None

class AppPricesV2Response(JSONResponse):
    data: list[AppPriceV2]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppPricePointV3, Territory]]] = None
    meta: Optional[PagingInformation] = None

class AppScreenshotSetsResponse(JSONResponse):
    data: list[AppScreenshotSet]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppCustomProductPageLocalization, AppScreenshot, AppStoreVersionExperimentTreatmentLocalization, AppStoreVersionLocalization]]] = None
    meta: Optional[PagingInformation] = None

class AppScreenshotSetResponse(JSONResponse):
    data: AppScreenshotSet
    links: DocumentLinks
    included: Optional[list[Union[AppCustomProductPageLocalization, AppScreenshot, AppStoreVersionExperimentTreatmentLocalization, AppStoreVersionLocalization]]] = None

class AppScreenshotsResponse(JSONResponse):
    data: list[AppScreenshot]
    links: PagedDocumentLinks
    included: Optional[list[AppScreenshotSet]] = None
    meta: Optional[PagingInformation] = None

class AppScreenshotResponse(JSONResponse):
    data: AppScreenshot
    links: DocumentLinks
    included: Optional[list[AppScreenshotSet]] = None

class AppStoreReviewAttachmentsResponse(JSONResponse):
    data: list[AppStoreReviewAttachment]
    links: PagedDocumentLinks
    included: Optional[list[AppStoreReviewDetail]] = None
    meta: Optional[PagingInformation] = None

class AppStoreReviewAttachmentResponse(JSONResponse):
    data: AppStoreReviewAttachment
    links: DocumentLinks
    included: Optional[list[AppStoreReviewDetail]] = None

class AppStoreReviewDetailResponse(JSONResponse):
    data: AppStoreReviewDetail
    links: DocumentLinks
    included: Optional[list[Union[AppStoreReviewAttachment, AppStoreVersion]]] = None

class AppStoreVersionExperimentTreatmentLocalizationsResponse(JSONResponse):
    data: list[AppStoreVersionExperimentTreatmentLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppPreviewSet, AppScreenshotSet, AppStoreVersionExperimentTreatment]]] = None
    meta: Optional[PagingInformation] = None

class AppStoreVersionExperimentTreatmentLocalizationResponse(JSONResponse):
    data: AppStoreVersionExperimentTreatmentLocalization
    links: DocumentLinks
    included: Optional[list[Union[AppPreviewSet, AppScreenshotSet, AppStoreVersionExperimentTreatment]]] = None

class AppStoreVersionExperimentTreatmentsResponse(JSONResponse):
    data: list[AppStoreVersionExperimentTreatment]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppStoreVersionExperimentTreatmentLocalization, AppStoreVersionExperiment]]] = None
    meta: Optional[PagingInformation] = None

class AppStoreVersionExperimentTreatmentResponse(JSONResponse):
    data: AppStoreVersionExperimentTreatment
    links: DocumentLinks
    included: Optional[list[Union[AppStoreVersionExperimentTreatmentLocalization, AppStoreVersionExperiment]]] = None

class AppStoreVersionExperimentsV2Response(JSONResponse):
    data: list[AppStoreVersionExperimentV2]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppStoreVersionExperimentTreatment, AppStoreVersion, App]]] = None
    meta: Optional[PagingInformation] = None

class AppStoreVersionExperimentV2Response(JSONResponse):
    data: AppStoreVersionExperimentV2
    links: DocumentLinks
    included: Optional[list[Union[AppStoreVersionExperimentTreatment, AppStoreVersion, App]]] = None

@deprecated
class AppStoreVersionExperimentsResponse(JSONResponse):
    data: list[AppStoreVersionExperiment]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppStoreVersionExperimentTreatment, AppStoreVersion]]] = None
    meta: Optional[PagingInformation] = None

@deprecated
class AppStoreVersionExperimentResponse(JSONResponse):
    data: AppStoreVersionExperiment
    links: DocumentLinks
    included: Optional[list[Union[AppStoreVersionExperimentTreatment, AppStoreVersion]]] = None

class AppStoreVersionLocalizationsResponse(JSONResponse):
    data: list[AppStoreVersionLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppKeyword, AppPreviewSet, AppScreenshotSet, AppStoreVersion]]] = None
    meta: Optional[PagingInformation] = None

class AppStoreVersionLocalizationResponse(JSONResponse):
    data: AppStoreVersionLocalization
    links: DocumentLinks
    included: Optional[list[Union[AppKeyword, AppPreviewSet, AppScreenshotSet, AppStoreVersion]]] = None

class AppStoreVersionPhasedReleaseResponse(JSONResponse):
    data: AppStoreVersionPhasedRelease
    links: DocumentLinks

class AppStoreVersionPromotionResponse(JSONResponse):
    data: AppStoreVersionPromotion
    links: DocumentLinks

class AppStoreVersionReleaseRequestResponse(JSONResponse):
    data: AppStoreVersionReleaseRequest
    links: DocumentLinks

@deprecated
class AppStoreVersionSubmissionResponse(JSONResponse):
    data: AppStoreVersionSubmission
    links: DocumentLinks
    included: Optional[list[AppStoreVersion]] = None

class AppStoreVersionsResponse(JSONResponse):
    data: list[AppStoreVersion]
    links: PagedDocumentLinks
    included: Optional[list[Union[AgeRatingDeclaration, AlternativeDistributionPackage, AppClipDefaultExperience, AppStoreReviewDetail, AppStoreVersionExperiment, AppStoreVersionLocalization, AppStoreVersionPhasedRelease, AppStoreVersionSubmission, App, Build, GameCenterAppVersion, RoutingAppCoverage]]] = None
    meta: Optional[PagingInformation] = None

class AppStoreVersionResponse(JSONResponse):
    data: AppStoreVersion
    links: DocumentLinks
    included: Optional[list[Union[AgeRatingDeclaration, AlternativeDistributionPackage, AppClipDefaultExperience, AppStoreReviewDetail, AppStoreVersionExperiment, AppStoreVersionLocalization, AppStoreVersionPhasedRelease, AppStoreVersionSubmission, App, Build, GameCenterAppVersion, RoutingAppCoverage]]] = None

class AppTagsResponse(JSONResponse):
    data: list[AppTag]
    links: PagedDocumentLinks
    included: Optional[list[Territory]] = None
    meta: Optional[PagingInformation] = None

class AppTagResponse(JSONResponse):
    data: AppTag
    links: DocumentLinks
    included: Optional[list[Territory]] = None

class AppsResponse(JSONResponse):
    data: list[App]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppClip, AppCustomProductPage, AppEncryptionDeclaration, AppEvent, AppInfo, AppStoreVersionExperimentV2, AppStoreVersion, BetaAppLocalization, BetaAppReviewDetail, BetaGroup, BetaLicenseAgreement, Build, CiProduct, EndUserLicenseAgreement, GameCenterDetail, GameCenterEnabledVersion, InAppPurchase, PrereleaseVersion, PromotedPurchase, ReviewSubmission, SubscriptionGracePeriod, SubscriptionGroup]]] = None
    meta: Optional[PagingInformation] = None

class AppResponse(JSONResponse):
    data: App
    links: DocumentLinks
    included: Optional[list[Union[AppClip, AppCustomProductPage, AppEncryptionDeclaration, AppEvent, AppInfo, AppStoreVersionExperimentV2, AppStoreVersion, BetaAppLocalization, BetaAppReviewDetail, BetaGroup, BetaLicenseAgreement, Build, CiProduct, EndUserLicenseAgreement, GameCenterDetail, GameCenterEnabledVersion, InAppPurchase, PrereleaseVersion, PromotedPurchase, ReviewSubmission, SubscriptionGracePeriod, SubscriptionGroup]]] = None

class BackgroundAssetUploadFilesResponse(JSONResponse):
    data: list[BackgroundAssetUploadFile]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BackgroundAssetUploadFileResponse(JSONResponse):
    data: BackgroundAssetUploadFile
    links: DocumentLinks

class BackgroundAssetVersionAppStoreReleaseResponse(JSONResponse):
    data: BackgroundAssetVersionAppStoreRelease
    links: DocumentLinks
    included: Optional[list[BackgroundAssetVersion]] = None

class BackgroundAssetVersionExternalBetaReleaseResponse(JSONResponse):
    data: BackgroundAssetVersionExternalBetaRelease
    links: DocumentLinks
    included: Optional[list[BackgroundAssetVersion]] = None

class BackgroundAssetVersionInternalBetaReleaseResponse(JSONResponse):
    data: BackgroundAssetVersionInternalBetaRelease
    links: DocumentLinks
    included: Optional[list[BackgroundAssetVersion]] = None

class BackgroundAssetVersionsResponse(JSONResponse):
    data: list[BackgroundAssetVersion]
    links: PagedDocumentLinks
    included: Optional[list[Union[BackgroundAssetUploadFile, BackgroundAssetVersionAppStoreRelease, BackgroundAssetVersionExternalBetaRelease, BackgroundAssetVersionInternalBetaRelease, BackgroundAsset]]] = None
    meta: Optional[PagingInformation] = None

class BackgroundAssetVersionResponse(JSONResponse):
    data: BackgroundAssetVersion
    links: DocumentLinks
    included: Optional[list[Union[BackgroundAssetUploadFile, BackgroundAssetVersionAppStoreRelease, BackgroundAssetVersionExternalBetaRelease, BackgroundAssetVersionInternalBetaRelease, BackgroundAsset]]] = None

class BackgroundAssetsResponse(JSONResponse):
    data: list[BackgroundAsset]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, BackgroundAssetVersion]]] = None
    meta: Optional[PagingInformation] = None

class BackgroundAssetResponse(JSONResponse):
    data: BackgroundAsset
    links: DocumentLinks
    included: Optional[list[Union[App, BackgroundAssetVersion]]] = None

class BetaAppClipInvocationLocalizationResponse(JSONResponse):
    data: BetaAppClipInvocationLocalization
    links: DocumentLinks

class BetaAppClipInvocationsResponse(JSONResponse):
    data: list[BetaAppClipInvocation]
    links: PagedDocumentLinks
    included: Optional[list[BetaAppClipInvocationLocalization]] = None
    meta: Optional[PagingInformation] = None

class BetaAppClipInvocationResponse(JSONResponse):
    data: BetaAppClipInvocation
    links: DocumentLinks
    included: Optional[list[BetaAppClipInvocationLocalization]] = None

class BetaAppLocalizationsResponse(JSONResponse):
    data: list[BetaAppLocalization]
    links: PagedDocumentLinks
    included: Optional[list[App]] = None
    meta: Optional[PagingInformation] = None

class BetaAppLocalizationResponse(JSONResponse):
    data: BetaAppLocalization
    links: DocumentLinks
    included: Optional[list[App]] = None

class BetaAppReviewDetailsResponse(JSONResponse):
    data: list[BetaAppReviewDetail]
    links: PagedDocumentLinks
    included: Optional[list[App]] = None
    meta: Optional[PagingInformation] = None

class BetaAppReviewDetailResponse(JSONResponse):
    data: BetaAppReviewDetail
    links: DocumentLinks
    included: Optional[list[App]] = None

class BetaAppReviewSubmissionsResponse(JSONResponse):
    data: list[BetaAppReviewSubmission]
    links: PagedDocumentLinks
    included: Optional[list[Build]] = None
    meta: Optional[PagingInformation] = None

class BetaAppReviewSubmissionResponse(JSONResponse):
    data: BetaAppReviewSubmission
    links: DocumentLinks
    included: Optional[list[Build]] = None

class BetaBuildLocalizationsResponse(JSONResponse):
    data: list[BetaBuildLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Build]] = None
    meta: Optional[PagingInformation] = None

class BetaBuildLocalizationResponse(JSONResponse):
    data: BetaBuildLocalization
    links: DocumentLinks
    included: Optional[list[Build]] = None

class BetaCrashLogResponse(JSONResponse):
    data: BetaCrashLog
    links: DocumentLinks

class BetaFeedbackCrashSubmissionsResponse(JSONResponse):
    data: list[BetaFeedbackCrashSubmission]
    links: PagedDocumentLinks
    included: Optional[list[Union[BetaTester, Build]]] = None
    meta: Optional[PagingInformation] = None

class BetaFeedbackCrashSubmissionResponse(JSONResponse):
    data: BetaFeedbackCrashSubmission
    links: DocumentLinks
    included: Optional[list[Union[BetaTester, Build]]] = None

class BetaFeedbackScreenshotSubmissionsResponse(JSONResponse):
    data: list[BetaFeedbackScreenshotSubmission]
    links: PagedDocumentLinks
    included: Optional[list[Union[BetaTester, Build]]] = None
    meta: Optional[PagingInformation] = None

class BetaFeedbackScreenshotSubmissionResponse(JSONResponse):
    data: BetaFeedbackScreenshotSubmission
    links: DocumentLinks
    included: Optional[list[Union[BetaTester, Build]]] = None

class BetaGroupsResponse(JSONResponse):
    data: list[BetaGroup]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, BetaRecruitmentCriterion, BetaTester, Build]]] = None
    meta: Optional[PagingInformation] = None

class BetaGroupResponse(JSONResponse):
    data: BetaGroup
    links: DocumentLinks
    included: Optional[list[Union[App, BetaRecruitmentCriterion, BetaTester, Build]]] = None

class BetaLicenseAgreementsResponse(JSONResponse):
    data: list[BetaLicenseAgreement]
    links: PagedDocumentLinks
    included: Optional[list[App]] = None
    meta: Optional[PagingInformation] = None

class BetaLicenseAgreementResponse(JSONResponse):
    data: BetaLicenseAgreement
    links: DocumentLinks
    included: Optional[list[App]] = None

class BetaRecruitmentCriterionResponse(JSONResponse):
    data: BetaRecruitmentCriterion
    links: DocumentLinks

class BetaRecruitmentCriterionCompatibleBuildCheckResponse(JSONResponse):
    data: BetaRecruitmentCriterionCompatibleBuildCheck
    links: DocumentLinks

class BetaRecruitmentCriterionOptionsResponse(JSONResponse):
    data: list[BetaRecruitmentCriterionOption]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BetaTesterInvitationResponse(JSONResponse):
    data: BetaTesterInvitation
    links: DocumentLinks

class BetaTestersResponse(JSONResponse):
    data: list[BetaTester]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, BetaGroup, Build]]] = None
    meta: Optional[PagingInformation] = None

class BetaTesterResponse(JSONResponse):
    data: BetaTester
    links: DocumentLinks
    included: Optional[list[Union[App, BetaGroup, Build]]] = None

class BuildBetaDetailsResponse(JSONResponse):
    data: list[BuildBetaDetail]
    links: PagedDocumentLinks
    included: Optional[list[Build]] = None
    meta: Optional[PagingInformation] = None

class BuildBetaDetailResponse(JSONResponse):
    data: BuildBetaDetail
    links: DocumentLinks
    included: Optional[list[Build]] = None

class BuildBetaNotificationResponse(JSONResponse):
    data: BuildBetaNotification
    links: DocumentLinks

class BuildBundleFileSizesResponse(JSONResponse):
    data: list[BuildBundleFileSize]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BuildIconsResponse(JSONResponse):
    data: list[BuildIcon]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BuildUploadFilesResponse(JSONResponse):
    data: list[BuildUploadFile]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BuildUploadFileResponse(JSONResponse):
    data: BuildUploadFile
    links: DocumentLinks

class BuildUploadsResponse(JSONResponse):
    data: list[BuildUpload]
    links: PagedDocumentLinks
    included: Optional[list[Union[BuildUploadFile, Build]]] = None
    meta: Optional[PagingInformation] = None

class BuildUploadResponse(JSONResponse):
    data: BuildUpload
    links: DocumentLinks
    included: Optional[list[Union[BuildUploadFile, Build]]] = None

class BuildsResponse(JSONResponse):
    data: list[Build]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppEncryptionDeclaration, AppStoreVersion, App, BetaAppReviewSubmission, BetaBuildLocalization, BetaGroup, BetaTester, BuildBetaDetail, BuildBundle, BuildIcon, BuildUpload, PrereleaseVersion]]] = None
    meta: Optional[PagingInformation] = None

class BuildResponse(JSONResponse):
    data: Build
    links: DocumentLinks
    included: Optional[list[Union[AppEncryptionDeclaration, AppStoreVersion, App, BetaAppReviewSubmission, BetaBuildLocalization, BetaGroup, BetaTester, BuildBetaDetail, BuildBundle, BuildIcon, BuildUpload, PrereleaseVersion]]] = None

class BundleIdCapabilitiesResponse(JSONResponse):
    data: list[BundleIdCapability]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BundleIdCapabilityResponse(JSONResponse):
    data: BundleIdCapability
    links: DocumentLinks

class BundleIdsResponse(JSONResponse):
    data: list[BundleId]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, BundleIdCapability, Profile]]] = None
    meta: Optional[PagingInformation] = None

class BundleIdResponse(JSONResponse):
    data: BundleId
    links: DocumentLinks
    included: Optional[list[Union[App, BundleIdCapability, Profile]]] = None

class CertificatesResponse(JSONResponse):
    data: list[Certificate]
    links: PagedDocumentLinks
    included: Optional[list[PassTypeId]] = None
    meta: Optional[PagingInformation] = None

class CertificateResponse(JSONResponse):
    data: Certificate
    links: DocumentLinks
    included: Optional[list[PassTypeId]] = None

class CiArtifactsResponse(JSONResponse):
    data: list[CiArtifact]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CiArtifactResponse(JSONResponse):
    data: CiArtifact
    links: DocumentLinks

class CiBuildActionsResponse(JSONResponse):
    data: list[CiBuildAction]
    links: PagedDocumentLinks
    included: Optional[list[CiBuildRun]] = None
    meta: Optional[PagingInformation] = None

class CiBuildActionResponse(JSONResponse):
    data: CiBuildAction
    links: DocumentLinks
    included: Optional[list[CiBuildRun]] = None

class CiBuildRunsResponse(JSONResponse):
    data: list[CiBuildRun]
    links: PagedDocumentLinks
    included: Optional[list[Union[Build, CiProduct, CiWorkflow, ScmGitReference, ScmPullRequest]]] = None
    meta: Optional[PagingInformation] = None

class CiBuildRunResponse(JSONResponse):
    data: CiBuildRun
    links: DocumentLinks
    included: Optional[list[Union[Build, CiProduct, CiWorkflow, ScmGitReference, ScmPullRequest]]] = None

class CiIssuesResponse(JSONResponse):
    data: list[CiIssue]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CiIssueResponse(JSONResponse):
    data: CiIssue
    links: DocumentLinks

class CiMacOsVersionsResponse(JSONResponse):
    data: list[CiMacOsVersion]
    links: PagedDocumentLinks
    included: Optional[list[CiXcodeVersion]] = None
    meta: Optional[PagingInformation] = None

class CiMacOsVersionResponse(JSONResponse):
    data: CiMacOsVersion
    links: DocumentLinks
    included: Optional[list[CiXcodeVersion]] = None

class CiProductsResponse(JSONResponse):
    data: list[CiProduct]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, BundleId, ScmRepository]]] = None
    meta: Optional[PagingInformation] = None

class CiProductResponse(JSONResponse):
    data: CiProduct
    links: DocumentLinks
    included: Optional[list[Union[App, BundleId, ScmRepository]]] = None

class CiTestResultsResponse(JSONResponse):
    data: list[CiTestResult]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CiTestResultResponse(JSONResponse):
    data: CiTestResult
    links: DocumentLinks

class CiWorkflowsResponse(JSONResponse):
    data: list[CiWorkflow]
    links: PagedDocumentLinks
    included: Optional[list[Union[CiMacOsVersion, CiProduct, CiXcodeVersion, ScmRepository]]] = None
    meta: Optional[PagingInformation] = None

class CiWorkflowResponse(JSONResponse):
    data: CiWorkflow
    links: DocumentLinks
    included: Optional[list[Union[CiMacOsVersion, CiProduct, CiXcodeVersion, ScmRepository]]] = None

class CiXcodeVersionsResponse(JSONResponse):
    data: list[CiXcodeVersion]
    links: PagedDocumentLinks
    included: Optional[list[CiMacOsVersion]] = None
    meta: Optional[PagingInformation] = None

class CiXcodeVersionResponse(JSONResponse):
    data: CiXcodeVersion
    links: DocumentLinks
    included: Optional[list[CiMacOsVersion]] = None

class CustomerReviewResponseV1Response(JSONResponse):
    data: CustomerReviewResponseV1
    links: DocumentLinks
    included: Optional[list[CustomerReview]] = None

class CustomerReviewSummarizationsResponse(JSONResponse):
    data: list[CustomerReviewSummarization]
    links: PagedDocumentLinks
    included: Optional[list[Territory]] = None
    meta: Optional[PagingInformation] = None

class CustomerReviewsResponse(JSONResponse):
    data: list[CustomerReview]
    links: PagedDocumentLinks
    included: Optional[list[CustomerReviewResponseV1]] = None
    meta: Optional[PagingInformation] = None

class CustomerReviewResponse(JSONResponse):
    data: CustomerReview
    links: DocumentLinks
    included: Optional[list[CustomerReviewResponseV1]] = None

class DevicesResponse(JSONResponse):
    data: list[Device]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class DeviceResponse(JSONResponse):
    data: Device
    links: DocumentLinks

class DiagnosticSignaturesResponse(JSONResponse):
    data: list[DiagnosticSignature]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class EndAppAvailabilityPreOrderResponse(JSONResponse):
    data: EndAppAvailabilityPreOrder
    links: DocumentLinks

class EndUserLicenseAgreementResponse(JSONResponse):
    data: EndUserLicenseAgreement
    links: DocumentLinks
    included: Optional[list[Union[App, Territory]]] = None

class GameCenterAchievementImageResponse(JSONResponse):
    data: GameCenterAchievementImage
    links: DocumentLinks
    included: Optional[list[GameCenterAchievementLocalization]] = None

class GameCenterAchievementLocalizationsResponse(JSONResponse):
    data: list[GameCenterAchievementLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterAchievementImage, GameCenterAchievement]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterAchievementLocalizationResponse(JSONResponse):
    data: GameCenterAchievementLocalization
    links: DocumentLinks
    included: Optional[list[Union[GameCenterAchievementImage, GameCenterAchievement]]] = None

class GameCenterAchievementReleasesResponse(JSONResponse):
    data: list[GameCenterAchievementRelease]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterAchievement, GameCenterDetail]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterAchievementReleaseResponse(JSONResponse):
    data: GameCenterAchievementRelease
    links: DocumentLinks
    included: Optional[list[Union[GameCenterAchievement, GameCenterDetail]]] = None

class GameCenterAchievementsResponse(JSONResponse):
    data: list[GameCenterAchievement]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterAchievementLocalization, GameCenterAchievementRelease, GameCenterAchievement, GameCenterActivity, GameCenterDetail, GameCenterGroup]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterAchievementResponse(JSONResponse):
    data: GameCenterAchievement
    links: DocumentLinks
    included: Optional[list[Union[GameCenterAchievementLocalization, GameCenterAchievementRelease, GameCenterAchievement, GameCenterActivity, GameCenterDetail, GameCenterGroup]]] = None

class GameCenterActivitiesResponse(JSONResponse):
    data: list[GameCenterActivity]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterAchievement, GameCenterActivityVersion, GameCenterDetail, GameCenterGroup, GameCenterLeaderboard]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterActivityResponse(JSONResponse):
    data: GameCenterActivity
    links: DocumentLinks
    included: Optional[list[Union[GameCenterAchievement, GameCenterActivityVersion, GameCenterDetail, GameCenterGroup, GameCenterLeaderboard]]] = None

class GameCenterActivityImageResponse(JSONResponse):
    data: GameCenterActivityImage
    links: DocumentLinks

class GameCenterActivityLocalizationsResponse(JSONResponse):
    data: list[GameCenterActivityLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterActivityImage, GameCenterActivityVersion]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterActivityLocalizationResponse(JSONResponse):
    data: GameCenterActivityLocalization
    links: DocumentLinks
    included: Optional[list[Union[GameCenterActivityImage, GameCenterActivityVersion]]] = None

class GameCenterActivityVersionReleasesResponse(JSONResponse):
    data: list[GameCenterActivityVersionRelease]
    links: PagedDocumentLinks
    included: Optional[list[GameCenterActivityVersion]] = None
    meta: Optional[PagingInformation] = None

class GameCenterActivityVersionReleaseResponse(JSONResponse):
    data: GameCenterActivityVersionRelease
    links: DocumentLinks
    included: Optional[list[GameCenterActivityVersion]] = None

class GameCenterActivityVersionsResponse(JSONResponse):
    data: list[GameCenterActivityVersion]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterActivity, GameCenterActivityImage, GameCenterActivityLocalization, GameCenterActivityVersionRelease]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterActivityVersionResponse(JSONResponse):
    data: GameCenterActivityVersion
    links: DocumentLinks
    included: Optional[list[Union[GameCenterActivity, GameCenterActivityImage, GameCenterActivityLocalization, GameCenterActivityVersionRelease]]] = None

class GameCenterAppVersionsResponse(JSONResponse):
    data: list[GameCenterAppVersion]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppStoreVersion, GameCenterAppVersion]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterAppVersionResponse(JSONResponse):
    data: GameCenterAppVersion
    links: DocumentLinks
    included: Optional[list[Union[AppStoreVersion, GameCenterAppVersion]]] = None

class GameCenterChallengeImageResponse(JSONResponse):
    data: GameCenterChallengeImage
    links: DocumentLinks

class GameCenterChallengeLocalizationsResponse(JSONResponse):
    data: list[GameCenterChallengeLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterChallengeImage, GameCenterChallengeVersion]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterChallengeLocalizationResponse(JSONResponse):
    data: GameCenterChallengeLocalization
    links: DocumentLinks
    included: Optional[list[Union[GameCenterChallengeImage, GameCenterChallengeVersion]]] = None

class GameCenterChallengeVersionReleasesResponse(JSONResponse):
    data: list[GameCenterChallengeVersionRelease]
    links: PagedDocumentLinks
    included: Optional[list[GameCenterChallengeVersion]] = None
    meta: Optional[PagingInformation] = None

class GameCenterChallengeVersionReleaseResponse(JSONResponse):
    data: GameCenterChallengeVersionRelease
    links: DocumentLinks
    included: Optional[list[GameCenterChallengeVersion]] = None

class GameCenterChallengeVersionsResponse(JSONResponse):
    data: list[GameCenterChallengeVersion]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterChallengeImage, GameCenterChallengeLocalization, GameCenterChallengeVersionRelease, GameCenterChallenge]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterChallengeVersionResponse(JSONResponse):
    data: GameCenterChallengeVersion
    links: DocumentLinks
    included: Optional[list[Union[GameCenterChallengeImage, GameCenterChallengeLocalization, GameCenterChallengeVersionRelease, GameCenterChallenge]]] = None

class GameCenterChallengesResponse(JSONResponse):
    data: list[GameCenterChallenge]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterChallengeVersion, GameCenterDetail, GameCenterGroup, GameCenterLeaderboard]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterChallengeResponse(JSONResponse):
    data: GameCenterChallenge
    links: DocumentLinks
    included: Optional[list[Union[GameCenterChallengeVersion, GameCenterDetail, GameCenterGroup, GameCenterLeaderboard]]] = None

class GameCenterDetailsResponse(JSONResponse):
    data: list[GameCenterDetail]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppStoreVersion, App, GameCenterAchievementRelease, GameCenterAchievement, GameCenterActivity, GameCenterActivityVersionRelease, GameCenterAppVersion, GameCenterChallengeVersionRelease, GameCenterChallenge, GameCenterGroup, GameCenterLeaderboardRelease, GameCenterLeaderboardSetRelease, GameCenterLeaderboardSet, GameCenterLeaderboard]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterDetailResponse(JSONResponse):
    data: GameCenterDetail
    links: DocumentLinks
    included: Optional[list[Union[AppStoreVersion, App, GameCenterAchievementRelease, GameCenterAchievement, GameCenterActivity, GameCenterActivityVersionRelease, GameCenterAppVersion, GameCenterChallengeVersionRelease, GameCenterChallenge, GameCenterGroup, GameCenterLeaderboardRelease, GameCenterLeaderboardSetRelease, GameCenterLeaderboardSet, GameCenterLeaderboard]]] = None

@deprecated
class GameCenterEnabledVersionsResponse(JSONResponse):
    data: list[GameCenterEnabledVersion]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, GameCenterEnabledVersion]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterGroupsResponse(JSONResponse):
    data: list[GameCenterGroup]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterAchievement, GameCenterActivity, GameCenterChallenge, GameCenterDetail, GameCenterLeaderboardSet, GameCenterLeaderboard]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterGroupResponse(JSONResponse):
    data: GameCenterGroup
    links: DocumentLinks
    included: Optional[list[Union[GameCenterAchievement, GameCenterActivity, GameCenterChallenge, GameCenterDetail, GameCenterLeaderboardSet, GameCenterLeaderboard]]] = None

class GameCenterLeaderboardEntrySubmissionResponse(JSONResponse):
    data: GameCenterLeaderboardEntrySubmission
    links: DocumentLinks

class GameCenterLeaderboardImageResponse(JSONResponse):
    data: GameCenterLeaderboardImage
    links: DocumentLinks
    included: Optional[list[GameCenterLeaderboardLocalization]] = None

class GameCenterLeaderboardLocalizationsResponse(JSONResponse):
    data: list[GameCenterLeaderboardLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterLeaderboardImage, GameCenterLeaderboard]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterLeaderboardLocalizationResponse(JSONResponse):
    data: GameCenterLeaderboardLocalization
    links: DocumentLinks
    included: Optional[list[Union[GameCenterLeaderboardImage, GameCenterLeaderboard]]] = None

class GameCenterLeaderboardReleasesResponse(JSONResponse):
    data: list[GameCenterLeaderboardRelease]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterDetail, GameCenterLeaderboard]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterLeaderboardReleaseResponse(JSONResponse):
    data: GameCenterLeaderboardRelease
    links: DocumentLinks
    included: Optional[list[Union[GameCenterDetail, GameCenterLeaderboard]]] = None

class GameCenterLeaderboardSetImageResponse(JSONResponse):
    data: GameCenterLeaderboardSetImage
    links: DocumentLinks
    included: Optional[list[GameCenterLeaderboardSetLocalization]] = None

class GameCenterLeaderboardSetLocalizationsResponse(JSONResponse):
    data: list[GameCenterLeaderboardSetLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterLeaderboardSetImage, GameCenterLeaderboardSet]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterLeaderboardSetLocalizationResponse(JSONResponse):
    data: GameCenterLeaderboardSetLocalization
    links: DocumentLinks
    included: Optional[list[Union[GameCenterLeaderboardSetImage, GameCenterLeaderboardSet]]] = None

class GameCenterLeaderboardSetMemberLocalizationsResponse(JSONResponse):
    data: list[GameCenterLeaderboardSetMemberLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterLeaderboardSet, GameCenterLeaderboard]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterLeaderboardSetMemberLocalizationResponse(JSONResponse):
    data: GameCenterLeaderboardSetMemberLocalization
    links: DocumentLinks
    included: Optional[list[Union[GameCenterLeaderboardSet, GameCenterLeaderboard]]] = None

class GameCenterLeaderboardSetReleasesResponse(JSONResponse):
    data: list[GameCenterLeaderboardSetRelease]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterDetail, GameCenterLeaderboardSet]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterLeaderboardSetReleaseResponse(JSONResponse):
    data: GameCenterLeaderboardSetRelease
    links: DocumentLinks
    included: Optional[list[Union[GameCenterDetail, GameCenterLeaderboardSet]]] = None

class GameCenterLeaderboardSetsResponse(JSONResponse):
    data: list[GameCenterLeaderboardSet]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterDetail, GameCenterGroup, GameCenterLeaderboardSetLocalization, GameCenterLeaderboardSetRelease, GameCenterLeaderboardSet, GameCenterLeaderboard]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterLeaderboardSetResponse(JSONResponse):
    data: GameCenterLeaderboardSet
    links: DocumentLinks
    included: Optional[list[Union[GameCenterDetail, GameCenterGroup, GameCenterLeaderboardSetLocalization, GameCenterLeaderboardSetRelease, GameCenterLeaderboardSet, GameCenterLeaderboard]]] = None

class GameCenterLeaderboardsResponse(JSONResponse):
    data: list[GameCenterLeaderboard]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterActivity, GameCenterChallenge, GameCenterDetail, GameCenterGroup, GameCenterLeaderboardLocalization, GameCenterLeaderboardRelease, GameCenterLeaderboardSet, GameCenterLeaderboard]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterLeaderboardResponse(JSONResponse):
    data: GameCenterLeaderboard
    links: DocumentLinks
    included: Optional[list[Union[GameCenterActivity, GameCenterChallenge, GameCenterDetail, GameCenterGroup, GameCenterLeaderboardLocalization, GameCenterLeaderboardRelease, GameCenterLeaderboardSet, GameCenterLeaderboard]]] = None

class GameCenterMatchmakingQueuesResponse(JSONResponse):
    data: list[GameCenterMatchmakingQueue]
    links: PagedDocumentLinks
    included: Optional[list[GameCenterMatchmakingRuleSet]] = None
    meta: Optional[PagingInformation] = None

class GameCenterMatchmakingQueueResponse(JSONResponse):
    data: GameCenterMatchmakingQueue
    links: DocumentLinks
    included: Optional[list[GameCenterMatchmakingRuleSet]] = None

class GameCenterMatchmakingRuleSetTestResponse(JSONResponse):
    data: GameCenterMatchmakingRuleSetTest
    links: DocumentLinks
    included: Optional[list[Union[GameCenterMatchmakingTestPlayerProperty, GameCenterMatchmakingTestRequest]]] = None

class GameCenterMatchmakingRuleSetsResponse(JSONResponse):
    data: list[GameCenterMatchmakingRuleSet]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterMatchmakingQueue, GameCenterMatchmakingRule, GameCenterMatchmakingTeam]]] = None
    meta: Optional[PagingInformation] = None

class GameCenterMatchmakingRuleSetResponse(JSONResponse):
    data: GameCenterMatchmakingRuleSet
    links: DocumentLinks
    included: Optional[list[Union[GameCenterMatchmakingQueue, GameCenterMatchmakingRule, GameCenterMatchmakingTeam]]] = None

class GameCenterMatchmakingRulesResponse(JSONResponse):
    data: list[GameCenterMatchmakingRule]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterMatchmakingRuleResponse(JSONResponse):
    data: GameCenterMatchmakingRule
    links: DocumentLinks

class GameCenterMatchmakingTeamsResponse(JSONResponse):
    data: list[GameCenterMatchmakingTeam]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterMatchmakingTeamResponse(JSONResponse):
    data: GameCenterMatchmakingTeam
    links: DocumentLinks

class GameCenterPlayerAchievementSubmissionResponse(JSONResponse):
    data: GameCenterPlayerAchievementSubmission
    links: DocumentLinks

class InAppPurchaseAppStoreReviewScreenshotResponse(JSONResponse):
    data: InAppPurchaseAppStoreReviewScreenshot
    links: DocumentLinks
    included: Optional[list[InAppPurchaseV2]] = None

class InAppPurchaseAvailabilityResponse(JSONResponse):
    data: InAppPurchaseAvailability
    links: DocumentLinks
    included: Optional[list[Territory]] = None

class InAppPurchaseContentResponse(JSONResponse):
    data: InAppPurchaseContent
    links: DocumentLinks
    included: Optional[list[InAppPurchaseV2]] = None

class InAppPurchaseImagesResponse(JSONResponse):
    data: list[InAppPurchaseImage]
    links: PagedDocumentLinks
    included: Optional[list[InAppPurchaseV2]] = None
    meta: Optional[PagingInformation] = None

class InAppPurchaseImageResponse(JSONResponse):
    data: InAppPurchaseImage
    links: DocumentLinks
    included: Optional[list[InAppPurchaseV2]] = None

class InAppPurchaseLocalizationsResponse(JSONResponse):
    data: list[InAppPurchaseLocalization]
    links: PagedDocumentLinks
    included: Optional[list[InAppPurchaseV2]] = None
    meta: Optional[PagingInformation] = None

class InAppPurchaseLocalizationResponse(JSONResponse):
    data: InAppPurchaseLocalization
    links: DocumentLinks
    included: Optional[list[InAppPurchaseV2]] = None

class InAppPurchasePricePointsResponse(JSONResponse):
    data: list[InAppPurchasePricePoint]
    links: PagedDocumentLinks
    included: Optional[list[Territory]] = None
    meta: Optional[PagingInformation] = None

class InAppPurchasePriceScheduleResponse(JSONResponse):
    data: InAppPurchasePriceSchedule
    links: DocumentLinks
    included: Optional[list[Union[InAppPurchasePrice, Territory]]] = None

class InAppPurchasePricesResponse(JSONResponse):
    data: list[InAppPurchasePrice]
    links: PagedDocumentLinks
    included: Optional[list[Union[InAppPurchasePricePoint, Territory]]] = None
    meta: Optional[PagingInformation] = None

class InAppPurchaseSubmissionResponse(JSONResponse):
    data: InAppPurchaseSubmission
    links: DocumentLinks
    included: Optional[list[InAppPurchaseV2]] = None

@deprecated
class InAppPurchasesResponse(JSONResponse):
    data: list[InAppPurchase]
    links: PagedDocumentLinks
    included: Optional[list[App]] = None
    meta: Optional[PagingInformation] = None

@deprecated
class InAppPurchaseResponse(JSONResponse):
    data: InAppPurchase
    links: DocumentLinks
    included: Optional[list[App]] = None

class InAppPurchasesV2Response(JSONResponse):
    data: list[InAppPurchaseV2]
    links: PagedDocumentLinks
    included: Optional[list[Union[InAppPurchaseAppStoreReviewScreenshot, InAppPurchaseAvailability, InAppPurchaseContent, InAppPurchaseImage, InAppPurchaseLocalization, InAppPurchasePricePoint, InAppPurchasePriceSchedule, PromotedPurchase]]] = None
    meta: Optional[PagingInformation] = None

class InAppPurchaseV2Response(JSONResponse):
    data: InAppPurchaseV2
    links: DocumentLinks
    included: Optional[list[Union[InAppPurchaseAppStoreReviewScreenshot, InAppPurchaseAvailability, InAppPurchaseContent, InAppPurchaseImage, InAppPurchaseLocalization, InAppPurchasePricePoint, InAppPurchasePriceSchedule, PromotedPurchase]]] = None

class MarketplaceSearchDetailResponse(JSONResponse):
    data: MarketplaceSearchDetail
    links: DocumentLinks

@deprecated
class MarketplaceWebhooksResponse(JSONResponse):
    data: list[MarketplaceWebhook]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

@deprecated
class MarketplaceWebhookResponse(JSONResponse):
    data: MarketplaceWebhook
    links: DocumentLinks

class MerchantIdsResponse(JSONResponse):
    data: list[MerchantId]
    links: PagedDocumentLinks
    included: Optional[list[Certificate]] = None
    meta: Optional[PagingInformation] = None

class MerchantIdResponse(JSONResponse):
    data: MerchantId
    links: DocumentLinks
    included: Optional[list[Certificate]] = None

class NominationsResponse(JSONResponse):
    data: list[Nomination]
    links: PagedDocumentLinks
    included: Optional[list[Union[Actor, AppEvent, App, Territory]]] = None
    meta: Optional[PagingInformation] = None

class NominationResponse(JSONResponse):
    data: Nomination
    links: DocumentLinks
    included: Optional[list[Union[Actor, AppEvent, App, Territory]]] = None

class PassTypeIdsResponse(JSONResponse):
    data: list[PassTypeId]
    links: PagedDocumentLinks
    included: Optional[list[Certificate]] = None
    meta: Optional[PagingInformation] = None

class PassTypeIdResponse(JSONResponse):
    data: PassTypeId
    links: DocumentLinks
    included: Optional[list[Certificate]] = None

class PreReleaseVersionsResponse(JSONResponse):
    data: list[PrereleaseVersion]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, Build]]] = None
    meta: Optional[PagingInformation] = None

class PrereleaseVersionResponse(JSONResponse):
    data: PrereleaseVersion
    links: DocumentLinks
    included: Optional[list[Union[App, Build]]] = None

class ProfilesResponse(JSONResponse):
    data: list[Profile]
    links: PagedDocumentLinks
    included: Optional[list[Union[BundleId, Certificate, Device]]] = None
    meta: Optional[PagingInformation] = None

class ProfileResponse(JSONResponse):
    data: Profile
    links: DocumentLinks
    included: Optional[list[Union[BundleId, Certificate, Device]]] = None

class PromotedPurchasesResponse(JSONResponse):
    data: list[PromotedPurchase]
    links: PagedDocumentLinks
    included: Optional[list[Union[InAppPurchaseV2, Subscription]]] = None
    meta: Optional[PagingInformation] = None

class PromotedPurchaseResponse(JSONResponse):
    data: PromotedPurchase
    links: DocumentLinks
    included: Optional[list[Union[InAppPurchaseV2, Subscription]]] = None

class ReviewSubmissionItemsResponse(JSONResponse):
    data: list[ReviewSubmissionItem]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppCustomProductPageVersion, AppEvent, AppStoreVersionExperiment, AppStoreVersion, BackgroundAssetVersion]]] = None
    meta: Optional[PagingInformation] = None

class ReviewSubmissionItemResponse(JSONResponse):
    data: ReviewSubmissionItem
    links: DocumentLinks
    included: Optional[list[Union[AppCustomProductPageVersion, AppEvent, AppStoreVersionExperiment, AppStoreVersion, BackgroundAssetVersion]]] = None

class ReviewSubmissionsResponse(JSONResponse):
    data: list[ReviewSubmission]
    links: PagedDocumentLinks
    included: Optional[list[Union[Actor, AppStoreVersion, App, ReviewSubmissionItem]]] = None
    meta: Optional[PagingInformation] = None

class ReviewSubmissionResponse(JSONResponse):
    data: ReviewSubmission
    links: DocumentLinks
    included: Optional[list[Union[Actor, AppStoreVersion, App, ReviewSubmissionItem]]] = None

class RoutingAppCoverageResponse(JSONResponse):
    data: RoutingAppCoverage
    links: DocumentLinks
    included: Optional[list[AppStoreVersion]] = None

class SandboxTestersV2Response(JSONResponse):
    data: list[SandboxTesterV2]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SandboxTesterV2Response(JSONResponse):
    data: SandboxTesterV2
    links: DocumentLinks

class SandboxTestersClearPurchaseHistoryRequestV2Response(JSONResponse):
    data: SandboxTestersClearPurchaseHistoryRequestV2
    links: DocumentLinks

class ScmGitReferencesResponse(JSONResponse):
    data: list[ScmGitReference]
    links: PagedDocumentLinks
    included: Optional[list[ScmRepository]] = None
    meta: Optional[PagingInformation] = None

class ScmGitReferenceResponse(JSONResponse):
    data: ScmGitReference
    links: DocumentLinks
    included: Optional[list[ScmRepository]] = None

class ScmProvidersResponse(JSONResponse):
    data: list[ScmProvider]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class ScmProviderResponse(JSONResponse):
    data: ScmProvider
    links: DocumentLinks

class ScmPullRequestsResponse(JSONResponse):
    data: list[ScmPullRequest]
    links: PagedDocumentLinks
    included: Optional[list[ScmRepository]] = None
    meta: Optional[PagingInformation] = None

class ScmPullRequestResponse(JSONResponse):
    data: ScmPullRequest
    links: DocumentLinks
    included: Optional[list[ScmRepository]] = None

class ScmRepositoriesResponse(JSONResponse):
    data: list[ScmRepository]
    links: PagedDocumentLinks
    included: Optional[list[Union[ScmGitReference, ScmProvider]]] = None
    meta: Optional[PagingInformation] = None

class ScmRepositoryResponse(JSONResponse):
    data: ScmRepository
    links: DocumentLinks
    included: Optional[list[Union[ScmGitReference, ScmProvider]]] = None

class SubscriptionAppStoreReviewScreenshotResponse(JSONResponse):
    data: SubscriptionAppStoreReviewScreenshot
    links: DocumentLinks
    included: Optional[list[Subscription]] = None

class SubscriptionAvailabilityResponse(JSONResponse):
    data: SubscriptionAvailability
    links: DocumentLinks
    included: Optional[list[Territory]] = None

class SubscriptionGracePeriodResponse(JSONResponse):
    data: SubscriptionGracePeriod
    links: DocumentLinks

class SubscriptionGroupLocalizationsResponse(JSONResponse):
    data: list[SubscriptionGroupLocalization]
    links: PagedDocumentLinks
    included: Optional[list[SubscriptionGroup]] = None
    meta: Optional[PagingInformation] = None

class SubscriptionGroupLocalizationResponse(JSONResponse):
    data: SubscriptionGroupLocalization
    links: DocumentLinks
    included: Optional[list[SubscriptionGroup]] = None

class SubscriptionGroupSubmissionResponse(JSONResponse):
    data: SubscriptionGroupSubmission
    links: DocumentLinks

class SubscriptionGroupsResponse(JSONResponse):
    data: list[SubscriptionGroup]
    links: PagedDocumentLinks
    included: Optional[list[Union[SubscriptionGroupLocalization, Subscription]]] = None
    meta: Optional[PagingInformation] = None

class SubscriptionGroupResponse(JSONResponse):
    data: SubscriptionGroup
    links: DocumentLinks
    included: Optional[list[Union[SubscriptionGroupLocalization, Subscription]]] = None

class SubscriptionImagesResponse(JSONResponse):
    data: list[SubscriptionImage]
    links: PagedDocumentLinks
    included: Optional[list[Subscription]] = None
    meta: Optional[PagingInformation] = None

class SubscriptionImageResponse(JSONResponse):
    data: SubscriptionImage
    links: DocumentLinks
    included: Optional[list[Subscription]] = None

class SubscriptionIntroductoryOffersResponse(JSONResponse):
    data: list[SubscriptionIntroductoryOffer]
    links: PagedDocumentLinks
    included: Optional[list[Union[SubscriptionPricePoint, Subscription, Territory]]] = None
    meta: Optional[PagingInformation] = None

class SubscriptionIntroductoryOfferResponse(JSONResponse):
    data: SubscriptionIntroductoryOffer
    links: DocumentLinks
    included: Optional[list[Union[SubscriptionPricePoint, Subscription, Territory]]] = None

class SubscriptionLocalizationsResponse(JSONResponse):
    data: list[SubscriptionLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Subscription]] = None
    meta: Optional[PagingInformation] = None

class SubscriptionLocalizationResponse(JSONResponse):
    data: SubscriptionLocalization
    links: DocumentLinks
    included: Optional[list[Subscription]] = None

class SubscriptionOfferCodeCustomCodesResponse(JSONResponse):
    data: list[SubscriptionOfferCodeCustomCode]
    links: PagedDocumentLinks
    included: Optional[list[SubscriptionOfferCode]] = None
    meta: Optional[PagingInformation] = None

class SubscriptionOfferCodeCustomCodeResponse(JSONResponse):
    data: SubscriptionOfferCodeCustomCode
    links: DocumentLinks
    included: Optional[list[SubscriptionOfferCode]] = None

class SubscriptionOfferCodeOneTimeUseCodesResponse(JSONResponse):
    data: list[SubscriptionOfferCodeOneTimeUseCode]
    links: PagedDocumentLinks
    included: Optional[list[SubscriptionOfferCode]] = None
    meta: Optional[PagingInformation] = None

class SubscriptionOfferCodeOneTimeUseCodeResponse(JSONResponse):
    data: SubscriptionOfferCodeOneTimeUseCode
    links: DocumentLinks
    included: Optional[list[SubscriptionOfferCode]] = None

class SubscriptionOfferCodePricesResponse(JSONResponse):
    data: list[SubscriptionOfferCodePrice]
    links: PagedDocumentLinks
    included: Optional[list[Union[SubscriptionPricePoint, Territory]]] = None
    meta: Optional[PagingInformation] = None

class SubscriptionOfferCodesResponse(JSONResponse):
    data: list[SubscriptionOfferCode]
    links: PagedDocumentLinks
    included: Optional[list[Union[SubscriptionOfferCodeCustomCode, SubscriptionOfferCodeOneTimeUseCode, SubscriptionOfferCodePrice, Subscription]]] = None
    meta: Optional[PagingInformation] = None

class SubscriptionOfferCodeResponse(JSONResponse):
    data: SubscriptionOfferCode
    links: DocumentLinks
    included: Optional[list[Union[SubscriptionOfferCodeCustomCode, SubscriptionOfferCodeOneTimeUseCode, SubscriptionOfferCodePrice, Subscription]]] = None

class SubscriptionPricePointsResponse(JSONResponse):
    data: list[SubscriptionPricePoint]
    links: PagedDocumentLinks
    included: Optional[list[Territory]] = None
    meta: Optional[PagingInformation] = None

class SubscriptionPricePointResponse(JSONResponse):
    data: SubscriptionPricePoint
    links: DocumentLinks
    included: Optional[list[Territory]] = None

class SubscriptionPricesResponse(JSONResponse):
    data: list[SubscriptionPrice]
    links: PagedDocumentLinks
    included: Optional[list[Union[SubscriptionPricePoint, Territory]]] = None
    meta: Optional[PagingInformation] = None

class SubscriptionPriceResponse(JSONResponse):
    data: SubscriptionPrice
    links: DocumentLinks
    included: Optional[list[Union[SubscriptionPricePoint, Territory]]] = None

class SubscriptionPromotionalOfferPricesResponse(JSONResponse):
    data: list[SubscriptionPromotionalOfferPrice]
    links: PagedDocumentLinks
    included: Optional[list[Union[SubscriptionPricePoint, Territory]]] = None
    meta: Optional[PagingInformation] = None

class SubscriptionPromotionalOffersResponse(JSONResponse):
    data: list[SubscriptionPromotionalOffer]
    links: PagedDocumentLinks
    included: Optional[list[Union[SubscriptionPromotionalOfferPrice, Subscription]]] = None
    meta: Optional[PagingInformation] = None

class SubscriptionPromotionalOfferResponse(JSONResponse):
    data: SubscriptionPromotionalOffer
    links: DocumentLinks
    included: Optional[list[Union[SubscriptionPromotionalOfferPrice, Subscription]]] = None

class SubscriptionSubmissionResponse(JSONResponse):
    data: SubscriptionSubmission
    links: DocumentLinks
    included: Optional[list[Subscription]] = None

class SubscriptionsResponse(JSONResponse):
    data: list[Subscription]
    links: PagedDocumentLinks
    included: Optional[list[Union[PromotedPurchase, SubscriptionAppStoreReviewScreenshot, SubscriptionAvailability, SubscriptionGroup, SubscriptionImage, SubscriptionIntroductoryOffer, SubscriptionLocalization, SubscriptionOfferCode, SubscriptionPrice, SubscriptionPromotionalOffer, WinBackOffer]]] = None
    meta: Optional[PagingInformation] = None

class SubscriptionResponse(JSONResponse):
    data: Subscription
    links: DocumentLinks
    included: Optional[list[Union[PromotedPurchase, SubscriptionAppStoreReviewScreenshot, SubscriptionAvailability, SubscriptionGroup, SubscriptionImage, SubscriptionIntroductoryOffer, SubscriptionLocalization, SubscriptionOfferCode, SubscriptionPrice, SubscriptionPromotionalOffer, WinBackOffer]]] = None

class TerritoriesResponse(JSONResponse):
    data: list[Territory]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class TerritoryResponse(JSONResponse):
    data: Territory
    links: DocumentLinks

class TerritoryAgeRatingsResponse(JSONResponse):
    data: list[TerritoryAgeRating]
    links: PagedDocumentLinks
    included: Optional[list[Territory]] = None
    meta: Optional[PagingInformation] = None

class TerritoryAvailabilitiesResponse(JSONResponse):
    data: list[TerritoryAvailability]
    links: PagedDocumentLinks
    included: Optional[list[Territory]] = None
    meta: Optional[PagingInformation] = None

class TerritoryAvailabilityResponse(JSONResponse):
    data: TerritoryAvailability
    links: DocumentLinks
    included: Optional[list[Territory]] = None

class UserInvitationsResponse(JSONResponse):
    data: list[UserInvitation]
    links: PagedDocumentLinks
    included: Optional[list[App]] = None
    meta: Optional[PagingInformation] = None

class UserInvitationResponse(JSONResponse):
    data: UserInvitation
    links: DocumentLinks
    included: Optional[list[App]] = None

class UsersResponse(JSONResponse):
    data: list[User]
    links: PagedDocumentLinks
    included: Optional[list[App]] = None
    meta: Optional[PagingInformation] = None

class UserResponse(JSONResponse):
    data: User
    links: DocumentLinks
    included: Optional[list[App]] = None

class WebhookDeliveriesResponse(JSONResponse):
    data: list[WebhookDelivery]
    links: PagedDocumentLinks
    included: Optional[list[WebhookEvent]] = None
    meta: Optional[PagingInformation] = None

class WebhookDeliveryResponse(JSONResponse):
    data: WebhookDelivery
    links: DocumentLinks
    included: Optional[list[WebhookEvent]] = None

class WebhookPingResponse(JSONResponse):
    data: WebhookPing
    links: DocumentLinks

class WebhooksResponse(JSONResponse):
    data: list[Webhook]
    links: PagedDocumentLinks
    included: Optional[list[App]] = None
    meta: Optional[PagingInformation] = None

class WebhookResponse(JSONResponse):
    data: Webhook
    links: DocumentLinks
    included: Optional[list[App]] = None

class WinBackOfferPricesResponse(JSONResponse):
    data: list[WinBackOfferPrice]
    links: PagedDocumentLinks
    included: Optional[list[Union[SubscriptionPricePoint, Territory]]] = None
    meta: Optional[PagingInformation] = None

class WinBackOffersResponse(JSONResponse):
    data: list[WinBackOffer]
    links: PagedDocumentLinks
    included: Optional[list[WinBackOfferPrice]] = None
    meta: Optional[PagingInformation] = None

class WinBackOfferResponse(JSONResponse):
    data: WinBackOffer
    links: DocumentLinks
    included: Optional[list[WinBackOfferPrice]] = None

class AlternativeDistributionPackageVersionDeltasLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["alternativeDistributionPackageDeltas"] = "alternativeDistributionPackageDeltas"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AlternativeDistributionPackageVersionVariantsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["alternativeDistributionPackageVariants"] = "alternativeDistributionPackageVariants"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AlternativeDistributionPackageVersionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["alternativeDistributionPackageVersions"] = "alternativeDistributionPackageVersions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AnalyticsReportInstanceSegmentsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["analyticsReportSegments"] = "analyticsReportSegments"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AnalyticsReportRequestReportsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["analyticsReports"] = "analyticsReports"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AnalyticsReportInstancesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["analyticsReportInstances"] = "analyticsReportInstances"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppAvailabilityV2TerritoryAvailabilitiesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["territoryAvailabilities"] = "territoryAvailabilities"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppCategoryWithoutIncludesResponse(JSONResponse):
    data: AppCategory
    links: DocumentLinks

class AppCategoryParentLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appCategories"] = "appCategories"

    data: Data
    links: DocumentLinks

class AppCategoriesWithoutIncludesResponse(JSONResponse):
    data: list[AppCategory]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppCategorySubcategoriesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appCategories"] = "appCategories"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppClipDefaultExperienceLocalizationAppClipHeaderImageLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appClipHeaderImages"] = "appClipHeaderImages"

    data: Data
    links: DocumentLinks

class AppClipDefaultExperienceAppClipAppStoreReviewDetailLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appClipAppStoreReviewDetails"] = "appClipAppStoreReviewDetails"

    data: Data
    links: DocumentLinks

class AppClipDefaultExperienceAppClipDefaultExperienceLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appClipDefaultExperienceLocalizations"] = "appClipDefaultExperienceLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppClipDefaultExperienceReleaseWithAppStoreVersionLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreVersions"] = "appStoreVersions"

    data: Data
    links: DocumentLinks

class AppClipAppClipAdvancedExperiencesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appClipAdvancedExperiences"] = "appClipAdvancedExperiences"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppClipAppClipDefaultExperiencesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appClipDefaultExperiences"] = "appClipDefaultExperiences"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppCustomProductPageLocalizationAppPreviewSetsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appPreviewSets"] = "appPreviewSets"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppCustomProductPageLocalizationAppScreenshotSetsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appScreenshotSets"] = "appScreenshotSets"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppCustomProductPageLocalizationSearchKeywordsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appKeywords"] = "appKeywords"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppCustomProductPageVersionAppCustomProductPageLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appCustomProductPageLocalizations"] = "appCustomProductPageLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppCustomProductPageAppCustomProductPageVersionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appCustomProductPageVersions"] = "appCustomProductPageVersions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppWithoutIncludesResponse(JSONResponse):
    data: App
    links: DocumentLinks

@deprecated
class AppEncryptionDeclarationAppLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["apps"] = "apps"

    data: Data
    links: DocumentLinks

class AppEncryptionDeclarationAppEncryptionDeclarationDocumentLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appEncryptionDeclarationDocuments"] = "appEncryptionDeclarationDocuments"

    data: Data
    links: DocumentLinks

class AppEventLocalizationAppEventScreenshotsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appEventScreenshots"] = "appEventScreenshots"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppEventLocalizationAppEventVideoClipsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appEventVideoClips"] = "appEventVideoClips"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppEventLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appEventLocalizations"] = "appEventLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppInfoAgeRatingDeclarationLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["ageRatingDeclarations"] = "ageRatingDeclarations"

    data: Data
    links: DocumentLinks

class AppInfoAppInfoLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appInfoLocalizations"] = "appInfoLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppInfoPrimaryCategoryLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appCategories"] = "appCategories"

    data: Data
    links: DocumentLinks

class AppInfoPrimarySubcategoryOneLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appCategories"] = "appCategories"

    data: Data
    links: DocumentLinks

class AppInfoPrimarySubcategoryTwoLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appCategories"] = "appCategories"

    data: Data
    links: DocumentLinks

class AppInfoSecondaryCategoryLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appCategories"] = "appCategories"

    data: Data
    links: DocumentLinks

class AppInfoSecondarySubcategoryOneLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appCategories"] = "appCategories"

    data: Data
    links: DocumentLinks

class AppInfoSecondarySubcategoryTwoLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appCategories"] = "appCategories"

    data: Data
    links: DocumentLinks

class AppInfoTerritoryAgeRatingsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["territoryAgeRatings"] = "territoryAgeRatings"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppPreviewSetAppPreviewsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appPreviews"] = "appPreviews"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppPricePointV3EqualizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appPricePoints"] = "appPricePoints"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppPriceScheduleAutomaticPricesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appPrices"] = "appPrices"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppPriceScheduleBaseTerritoryLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["territories"] = "territories"

    data: Data
    links: DocumentLinks

class AppPriceScheduleManualPricesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appPrices"] = "appPrices"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppScreenshotSetAppScreenshotsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appScreenshots"] = "appScreenshots"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppStoreReviewDetailAppStoreReviewAttachmentsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreReviewAttachments"] = "appStoreReviewAttachments"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppStoreVersionExperimentTreatmentLocalizationAppPreviewSetsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appPreviewSets"] = "appPreviewSets"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppStoreVersionExperimentTreatmentLocalizationAppScreenshotSetsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appScreenshotSets"] = "appScreenshotSets"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppStoreVersionExperimentTreatmentAppStoreVersionExperimentTreatmentLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreVersionExperimentTreatmentLocalizations"] = "appStoreVersionExperimentTreatmentLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppStoreVersionExperimentV2AppStoreVersionExperimentTreatmentsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreVersionExperimentTreatments"] = "appStoreVersionExperimentTreatments"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

@deprecated
class AppStoreVersionExperimentAppStoreVersionExperimentTreatmentsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreVersionExperimentTreatments"] = "appStoreVersionExperimentTreatments"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppStoreVersionLocalizationAppPreviewSetsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appPreviewSets"] = "appPreviewSets"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppStoreVersionLocalizationAppScreenshotSetsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appScreenshotSets"] = "appScreenshotSets"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppStoreVersionLocalizationSearchKeywordsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appKeywords"] = "appKeywords"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AgeRatingDeclarationWithoutIncludesResponse(JSONResponse):
    data: AgeRatingDeclaration
    links: DocumentLinks

@deprecated
class AppStoreVersionAgeRatingDeclarationLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["ageRatingDeclarations"] = "ageRatingDeclarations"

    data: Data
    links: DocumentLinks

class AppStoreVersionAlternativeDistributionPackageLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["alternativeDistributionPackages"] = "alternativeDistributionPackages"

    data: Data
    links: DocumentLinks

class AppStoreVersionAppClipDefaultExperienceLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appClipDefaultExperiences"] = "appClipDefaultExperiences"

    data: Data
    links: DocumentLinks

class AppStoreVersionAppStoreReviewDetailLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreReviewDetails"] = "appStoreReviewDetails"

    data: Data
    links: DocumentLinks

@deprecated
class AppStoreVersionAppStoreVersionExperimentsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreVersionExperiments"] = "appStoreVersionExperiments"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppStoreVersionAppStoreVersionExperimentsV2LinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreVersionExperiments"] = "appStoreVersionExperiments"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppStoreVersionAppStoreVersionLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreVersionLocalizations"] = "appStoreVersionLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppStoreVersionPhasedReleaseWithoutIncludesResponse(JSONResponse):
    data: AppStoreVersionPhasedRelease
    links: DocumentLinks

class AppStoreVersionAppStoreVersionPhasedReleaseLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreVersionPhasedReleases"] = "appStoreVersionPhasedReleases"

    data: Data
    links: DocumentLinks

@deprecated
class AppStoreVersionAppStoreVersionSubmissionLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreVersionSubmissions"] = "appStoreVersionSubmissions"

    data: Data
    links: DocumentLinks

class BuildWithoutIncludesResponse(JSONResponse):
    data: Build
    links: DocumentLinks

class AppStoreVersionBuildLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["builds"] = "builds"

    data: Data
    links: DocumentLinks

class AppStoreVersionCustomerReviewsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["customerReviews"] = "customerReviews"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppStoreVersionGameCenterAppVersionLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterAppVersions"] = "gameCenterAppVersions"

    data: Data
    links: DocumentLinks

class RoutingAppCoverageWithoutIncludesResponse(JSONResponse):
    data: RoutingAppCoverage
    links: DocumentLinks

class AppStoreVersionRoutingAppCoverageLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["routingAppCoverages"] = "routingAppCoverages"

    data: Data
    links: DocumentLinks

class AppTagTerritoriesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["territories"] = "territories"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppAccessibilityDeclarationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["accessibilityDeclarations"] = "accessibilityDeclarations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppAlternativeDistributionKeyLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["alternativeDistributionKeys"] = "alternativeDistributionKeys"

    data: Data
    links: DocumentLinks

class AppAnalyticsReportRequestsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["analyticsReportRequests"] = "analyticsReportRequests"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppAppAvailabilityV2LinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appAvailabilities"] = "appAvailabilities"

    data: Data
    links: DocumentLinks

class AppAppClipsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appClips"] = "appClips"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppAppCustomProductPagesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appCustomProductPages"] = "appCustomProductPages"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppAppEncryptionDeclarationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appEncryptionDeclarations"] = "appEncryptionDeclarations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppAppEventsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appEvents"] = "appEvents"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppAppInfosLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appInfos"] = "appInfos"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppAppPricePointsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appPricePoints"] = "appPricePoints"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppAppPriceScheduleLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appPriceSchedules"] = "appPriceSchedules"

    data: Data
    links: DocumentLinks

class AppAppStoreVersionExperimentsV2LinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreVersionExperiments"] = "appStoreVersionExperiments"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppAppStoreVersionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreVersions"] = "appStoreVersions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppAppTagsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appTags"] = "appTags"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppBackgroundAssetsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["backgroundAssets"] = "backgroundAssets"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BetaAppLocalizationsWithoutIncludesResponse(JSONResponse):
    data: list[BetaAppLocalization]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppBetaAppLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaAppLocalizations"] = "betaAppLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BetaAppReviewDetailWithoutIncludesResponse(JSONResponse):
    data: BetaAppReviewDetail
    links: DocumentLinks

class AppBetaAppReviewDetailLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaAppReviewDetails"] = "betaAppReviewDetails"

    data: Data
    links: DocumentLinks

class AppBetaFeedbackCrashSubmissionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaFeedbackCrashSubmissions"] = "betaFeedbackCrashSubmissions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppBetaFeedbackScreenshotSubmissionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaFeedbackScreenshotSubmissions"] = "betaFeedbackScreenshotSubmissions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BetaGroupsWithoutIncludesResponse(JSONResponse):
    data: list[BetaGroup]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppBetaGroupsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaGroups"] = "betaGroups"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BetaLicenseAgreementWithoutIncludesResponse(JSONResponse):
    data: BetaLicenseAgreement
    links: DocumentLinks

class AppBetaLicenseAgreementLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaLicenseAgreements"] = "betaLicenseAgreements"

    data: Data
    links: DocumentLinks

class AppBuildUploadsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["buildUploads"] = "buildUploads"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BuildsWithoutIncludesResponse(JSONResponse):
    data: list[Build]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppBuildsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["builds"] = "builds"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppCiProductLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["ciProducts"] = "ciProducts"

    data: Data
    links: DocumentLinks

class AppCustomerReviewsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["customerReviews"] = "customerReviews"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class EndUserLicenseAgreementWithoutIncludesResponse(JSONResponse):
    data: EndUserLicenseAgreement
    links: DocumentLinks

class AppEndUserLicenseAgreementLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["endUserLicenseAgreements"] = "endUserLicenseAgreements"

    data: Data
    links: DocumentLinks

class AppGameCenterDetailLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterDetails"] = "gameCenterDetails"

    data: Data
    links: DocumentLinks

@deprecated
class AppGameCenterEnabledVersionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterEnabledVersions"] = "gameCenterEnabledVersions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

@deprecated
class AppInAppPurchasesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["inAppPurchases"] = "inAppPurchases"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppInAppPurchasesV2LinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["inAppPurchases"] = "inAppPurchases"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppMarketplaceSearchDetailLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["marketplaceSearchDetails"] = "marketplaceSearchDetails"

    data: Data
    links: DocumentLinks

class AppPerfPowerMetricsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["perfPowerMetrics"] = "perfPowerMetrics"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class PreReleaseVersionsWithoutIncludesResponse(JSONResponse):
    data: list[PrereleaseVersion]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppPreReleaseVersionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["preReleaseVersions"] = "preReleaseVersions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppPromotedPurchasesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["promotedPurchases"] = "promotedPurchases"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppReviewSubmissionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["reviewSubmissions"] = "reviewSubmissions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppSearchKeywordsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appKeywords"] = "appKeywords"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppSubscriptionGracePeriodLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionGracePeriods"] = "subscriptionGracePeriods"

    data: Data
    links: DocumentLinks

class AppSubscriptionGroupsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionGroups"] = "subscriptionGroups"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppWebhooksLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["webhooks"] = "webhooks"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BackgroundAssetVersionBackgroundAssetUploadFilesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["backgroundAssetUploadFiles"] = "backgroundAssetUploadFiles"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BackgroundAssetVersionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["backgroundAssetVersions"] = "backgroundAssetVersions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BetaAppLocalizationAppLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["apps"] = "apps"

    data: Data
    links: DocumentLinks

class BetaAppReviewDetailAppLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["apps"] = "apps"

    data: Data
    links: DocumentLinks

class BetaAppReviewSubmissionBuildLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["builds"] = "builds"

    data: Data
    links: DocumentLinks

class BetaBuildLocalizationBuildLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["builds"] = "builds"

    data: Data
    links: DocumentLinks

class BetaFeedbackCrashSubmissionCrashLogLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaCrashLogs"] = "betaCrashLogs"

    data: Data
    links: DocumentLinks

class BetaGroupAppLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["apps"] = "apps"

    data: Data
    links: DocumentLinks

class BetaGroupBetaRecruitmentCriteriaLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaRecruitmentCriteria"] = "betaRecruitmentCriteria"

    data: Data
    links: DocumentLinks

class BetaGroupBetaRecruitmentCriterionCompatibleBuildCheckLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaRecruitmentCriterionCompatibleBuildChecks"] = "betaRecruitmentCriterionCompatibleBuildChecks"

    data: Data
    links: DocumentLinks

class BetaTestersWithoutIncludesResponse(JSONResponse):
    data: list[BetaTester]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BetaGroupBetaTestersLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaTesters"] = "betaTesters"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BetaGroupBuildsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["builds"] = "builds"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BetaLicenseAgreementAppLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["apps"] = "apps"

    data: Data
    links: DocumentLinks

class AppsWithoutIncludesResponse(JSONResponse):
    data: list[App]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BetaTesterAppsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["apps"] = "apps"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BetaTesterBetaGroupsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaGroups"] = "betaGroups"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BetaTesterBuildsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["builds"] = "builds"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BuildBetaDetailBuildLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["builds"] = "builds"

    data: Data
    links: DocumentLinks

class BuildBundleAppClipDomainCacheStatusLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appClipDomainStatuses"] = "appClipDomainStatuses"

    data: Data
    links: DocumentLinks

class BuildBundleAppClipDomainDebugStatusLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appClipDomainStatuses"] = "appClipDomainStatuses"

    data: Data
    links: DocumentLinks

class BuildBundleBetaAppClipInvocationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaAppClipInvocations"] = "betaAppClipInvocations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BuildBundleBuildBundleFileSizesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["buildBundleFileSizes"] = "buildBundleFileSizes"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BuildUploadBuildUploadFilesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["buildUploadFiles"] = "buildUploadFiles"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BuildAppLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["apps"] = "apps"

    data: Data
    links: DocumentLinks

class AppEncryptionDeclarationWithoutIncludesResponse(JSONResponse):
    data: AppEncryptionDeclaration
    links: DocumentLinks

class BuildAppEncryptionDeclarationLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appEncryptionDeclarations"] = "appEncryptionDeclarations"

    data: Data
    links: DocumentLinks

class BuildAppStoreVersionLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreVersions"] = "appStoreVersions"

    data: Data
    links: DocumentLinks

class BetaAppReviewSubmissionWithoutIncludesResponse(JSONResponse):
    data: BetaAppReviewSubmission
    links: DocumentLinks

class BuildBetaAppReviewSubmissionLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaAppReviewSubmissions"] = "betaAppReviewSubmissions"

    data: Data
    links: DocumentLinks

class BetaBuildLocalizationsWithoutIncludesResponse(JSONResponse):
    data: list[BetaBuildLocalization]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BuildBetaBuildLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaBuildLocalizations"] = "betaBuildLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BuildBuildBetaDetailLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["buildBetaDetails"] = "buildBetaDetails"

    data: Data
    links: DocumentLinks

class BuildDiagnosticSignaturesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["diagnosticSignatures"] = "diagnosticSignatures"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BuildIconsWithoutIncludesResponse(JSONResponse):
    data: list[BuildIcon]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BuildIconsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["buildIcons"] = "buildIcons"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BuildIndividualTestersLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaTesters"] = "betaTesters"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BuildPerfPowerMetricsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["perfPowerMetrics"] = "perfPowerMetrics"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class PrereleaseVersionWithoutIncludesResponse(JSONResponse):
    data: PrereleaseVersion
    links: DocumentLinks

class BuildPreReleaseVersionLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["preReleaseVersions"] = "preReleaseVersions"

    data: Data
    links: DocumentLinks

class BundleIdAppLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["apps"] = "apps"

    data: Data
    links: DocumentLinks

class BundleIdCapabilitiesWithoutIncludesResponse(JSONResponse):
    data: list[BundleIdCapability]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BundleIdBundleIdCapabilitiesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["bundleIdCapabilities"] = "bundleIdCapabilities"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class ProfilesWithoutIncludesResponse(JSONResponse):
    data: list[Profile]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BundleIdProfilesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["profiles"] = "profiles"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CertificatePassTypeIdLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["passTypeIds"] = "passTypeIds"

    data: Data
    links: DocumentLinks

class CiBuildActionArtifactsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["ciArtifacts"] = "ciArtifacts"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CiBuildActionBuildRunLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["ciBuildRuns"] = "ciBuildRuns"

    data: Data
    links: DocumentLinks

class CiBuildActionIssuesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["ciIssues"] = "ciIssues"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CiBuildActionTestResultsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["ciTestResults"] = "ciTestResults"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CiBuildRunActionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["ciBuildActions"] = "ciBuildActions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CiBuildRunBuildsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["builds"] = "builds"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CiMacOsVersionXcodeVersionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["ciXcodeVersions"] = "ciXcodeVersions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CiProductAdditionalRepositoriesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["scmRepositories"] = "scmRepositories"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CiProductAppLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["apps"] = "apps"

    data: Data
    links: DocumentLinks

class CiProductBuildRunsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["ciBuildRuns"] = "ciBuildRuns"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CiProductPrimaryRepositoriesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["scmRepositories"] = "scmRepositories"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CiProductWorkflowsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["ciWorkflows"] = "ciWorkflows"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CiWorkflowBuildRunsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["ciBuildRuns"] = "ciBuildRuns"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CiWorkflowRepositoryLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["scmRepositories"] = "scmRepositories"

    data: Data
    links: DocumentLinks

class CiXcodeVersionMacOsVersionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["ciMacOsVersions"] = "ciMacOsVersions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class CustomerReviewResponseLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["customerReviewResponses"] = "customerReviewResponses"

    data: Data
    links: DocumentLinks

class DiagnosticSignatureLogsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["diagnosticLogs"] = "diagnosticLogs"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class TerritoriesWithoutIncludesResponse(JSONResponse):
    data: list[Territory]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class EndUserLicenseAgreementTerritoriesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["territories"] = "territories"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterAchievementLocalizationGameCenterAchievementLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterAchievements"] = "gameCenterAchievements"

    data: Data
    links: DocumentLinks

class GameCenterAchievementLocalizationGameCenterAchievementImageLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterAchievementImages"] = "gameCenterAchievementImages"

    data: Data
    links: DocumentLinks

@deprecated
class GameCenterAchievementGroupAchievementLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterAchievements"] = "gameCenterAchievements"

    data: Data
    links: DocumentLinks

class GameCenterAchievementLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterAchievementLocalizations"] = "gameCenterAchievementLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterAchievementReleasesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterAchievementReleases"] = "gameCenterAchievementReleases"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterActivityVersionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterActivityVersions"] = "gameCenterActivityVersions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterActivityLocalizationImageLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterActivityImages"] = "gameCenterActivityImages"

    data: Data
    links: DocumentLinks

class GameCenterActivityVersionDefaultImageLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterActivityImages"] = "gameCenterActivityImages"

    data: Data
    links: DocumentLinks

class GameCenterActivityVersionLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterActivityLocalizations"] = "gameCenterActivityLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterAppVersionAppStoreVersionLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreVersions"] = "appStoreVersions"

    data: Data
    links: DocumentLinks

class GameCenterAppVersionCompatibilityVersionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterAppVersions"] = "gameCenterAppVersions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterChallengeLocalizationImageLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterChallengeImages"] = "gameCenterChallengeImages"

    data: Data
    links: DocumentLinks

class GameCenterChallengeVersionDefaultImageLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterChallengeImages"] = "gameCenterChallengeImages"

    data: Data
    links: DocumentLinks

class GameCenterChallengeVersionLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterChallengeLocalizations"] = "gameCenterChallengeLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterChallengeVersionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterChallengeVersions"] = "gameCenterChallengeVersions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterDetailAchievementReleasesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterAchievementReleases"] = "gameCenterAchievementReleases"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterDetailActivityReleasesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterActivityVersionReleases"] = "gameCenterActivityVersionReleases"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterDetailChallengeReleasesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterChallengeVersionReleases"] = "gameCenterChallengeVersionReleases"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterDetailGameCenterAchievementsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterAchievements"] = "gameCenterAchievements"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterDetailGameCenterActivitiesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterActivities"] = "gameCenterActivities"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterDetailGameCenterAppVersionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterAppVersions"] = "gameCenterAppVersions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterDetailGameCenterChallengesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterChallenges"] = "gameCenterChallenges"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterDetailGameCenterGroupLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterGroups"] = "gameCenterGroups"

    data: Data
    links: DocumentLinks

class GameCenterDetailGameCenterLeaderboardSetsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboardSets"] = "gameCenterLeaderboardSets"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterDetailGameCenterLeaderboardsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterDetailLeaderboardReleasesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboardReleases"] = "gameCenterLeaderboardReleases"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterDetailLeaderboardSetReleasesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboardSetReleases"] = "gameCenterLeaderboardSetReleases"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

@deprecated
class GameCenterEnabledVersionCompatibleVersionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterEnabledVersions"] = "gameCenterEnabledVersions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterGroupGameCenterAchievementsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterAchievements"] = "gameCenterAchievements"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterGroupGameCenterActivitiesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterActivities"] = "gameCenterActivities"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterGroupGameCenterChallengesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterChallenges"] = "gameCenterChallenges"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterGroupGameCenterDetailsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterDetails"] = "gameCenterDetails"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterGroupGameCenterLeaderboardSetsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboardSets"] = "gameCenterLeaderboardSets"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterGroupGameCenterLeaderboardsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterLeaderboardLocalizationGameCenterLeaderboardImageLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboardImages"] = "gameCenterLeaderboardImages"

    data: Data
    links: DocumentLinks

class GameCenterLeaderboardSetLocalizationGameCenterLeaderboardSetImageLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboardSetImages"] = "gameCenterLeaderboardSetImages"

    data: Data
    links: DocumentLinks

class GameCenterLeaderboardSetMemberLocalizationGameCenterLeaderboardLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

    data: Data
    links: DocumentLinks

class GameCenterLeaderboardSetMemberLocalizationGameCenterLeaderboardSetLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboardSets"] = "gameCenterLeaderboardSets"

    data: Data
    links: DocumentLinks

class GameCenterLeaderboardSetGameCenterLeaderboardsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

@deprecated
class GameCenterLeaderboardSetGroupLeaderboardSetLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboardSets"] = "gameCenterLeaderboardSets"

    data: Data
    links: DocumentLinks

class GameCenterLeaderboardSetLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboardSetLocalizations"] = "gameCenterLeaderboardSetLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterLeaderboardSetReleasesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboardSetReleases"] = "gameCenterLeaderboardSetReleases"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

@deprecated
class GameCenterLeaderboardGroupLeaderboardLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

    data: Data
    links: DocumentLinks

class GameCenterLeaderboardLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboardLocalizations"] = "gameCenterLeaderboardLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterLeaderboardReleasesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterLeaderboardReleases"] = "gameCenterLeaderboardReleases"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterMatchmakingRuleSetMatchmakingQueuesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterMatchmakingQueues"] = "gameCenterMatchmakingQueues"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterMatchmakingRuleSetRulesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterMatchmakingRules"] = "gameCenterMatchmakingRules"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterMatchmakingRuleSetTeamsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterMatchmakingTeams"] = "gameCenterMatchmakingTeams"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class InAppPurchaseAvailabilityAvailableTerritoriesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["territories"] = "territories"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class InAppPurchasePricePointEqualizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["inAppPurchasePricePoints"] = "inAppPurchasePricePoints"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class InAppPurchasePriceScheduleAutomaticPricesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["inAppPurchasePrices"] = "inAppPurchasePrices"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class InAppPurchasePriceScheduleBaseTerritoryLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["territories"] = "territories"

    data: Data
    links: DocumentLinks

class InAppPurchasePriceScheduleManualPricesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["inAppPurchasePrices"] = "inAppPurchasePrices"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class InAppPurchaseV2AppStoreReviewScreenshotLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["inAppPurchaseAppStoreReviewScreenshots"] = "inAppPurchaseAppStoreReviewScreenshots"

    data: Data
    links: DocumentLinks

class InAppPurchaseV2ContentLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["inAppPurchaseContents"] = "inAppPurchaseContents"

    data: Data
    links: DocumentLinks

class InAppPurchaseV2IapPriceScheduleLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["inAppPurchasePriceSchedules"] = "inAppPurchasePriceSchedules"

    data: Data
    links: DocumentLinks

class InAppPurchaseV2ImagesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["inAppPurchaseImages"] = "inAppPurchaseImages"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class InAppPurchaseV2InAppPurchaseAvailabilityLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["inAppPurchaseAvailabilities"] = "inAppPurchaseAvailabilities"

    data: Data
    links: DocumentLinks

class InAppPurchaseV2InAppPurchaseLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["inAppPurchaseLocalizations"] = "inAppPurchaseLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class InAppPurchaseV2PricePointsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["inAppPurchasePricePoints"] = "inAppPurchasePricePoints"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class InAppPurchaseV2PromotedPurchaseLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["promotedPurchases"] = "promotedPurchases"

    data: Data
    links: DocumentLinks

class MerchantIdCertificatesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["certificates"] = "certificates"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class PassTypeIdCertificatesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["certificates"] = "certificates"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class PrereleaseVersionAppLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["apps"] = "apps"

    data: Data
    links: DocumentLinks

class PrereleaseVersionBuildsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["builds"] = "builds"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BundleIdWithoutIncludesResponse(JSONResponse):
    data: BundleId
    links: DocumentLinks

class ProfileBundleIdLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["bundleIds"] = "bundleIds"

    data: Data
    links: DocumentLinks

class CertificatesWithoutIncludesResponse(JSONResponse):
    data: list[Certificate]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class ProfileCertificatesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["certificates"] = "certificates"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class DevicesWithoutIncludesResponse(JSONResponse):
    data: list[Device]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class ProfileDevicesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["devices"] = "devices"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class ReviewSubmissionItemsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["reviewSubmissionItems"] = "reviewSubmissionItems"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class ScmProviderRepositoriesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["scmRepositories"] = "scmRepositories"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class ScmRepositoryGitReferencesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["scmGitReferences"] = "scmGitReferences"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class ScmRepositoryPullRequestsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["scmPullRequests"] = "scmPullRequests"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionAvailabilityAvailableTerritoriesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["territories"] = "territories"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionGroupSubscriptionGroupLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionGroupLocalizations"] = "subscriptionGroupLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionGroupSubscriptionsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptions"] = "subscriptions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionOfferCodeOneTimeUseCodeValuesLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionOfferCodeOneTimeUseCodeValues"] = "subscriptionOfferCodeOneTimeUseCodeValues"

    data: Data
    links: DocumentLinks

class SubscriptionOfferCodeCustomCodesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionOfferCodeCustomCodes"] = "subscriptionOfferCodeCustomCodes"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionOfferCodeOneTimeUseCodesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionOfferCodeOneTimeUseCodes"] = "subscriptionOfferCodeOneTimeUseCodes"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionOfferCodePricesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionOfferCodePrices"] = "subscriptionOfferCodePrices"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionPricePointEqualizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionPricePoints"] = "subscriptionPricePoints"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionPromotionalOfferPricesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionPromotionalOfferPrices"] = "subscriptionPromotionalOfferPrices"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionAppStoreReviewScreenshotLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionAppStoreReviewScreenshots"] = "subscriptionAppStoreReviewScreenshots"

    data: Data
    links: DocumentLinks

class SubscriptionImagesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionImages"] = "subscriptionImages"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionIntroductoryOffersLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionIntroductoryOffers"] = "subscriptionIntroductoryOffers"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionOfferCodesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionOfferCodes"] = "subscriptionOfferCodes"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionPricePointsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionPricePoints"] = "subscriptionPricePoints"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionPricesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionPrices"] = "subscriptionPrices"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionPromotedPurchaseLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["promotedPurchases"] = "promotedPurchases"

    data: Data
    links: DocumentLinks

class SubscriptionPromotionalOffersLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionPromotionalOffers"] = "subscriptionPromotionalOffers"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionSubscriptionAvailabilityLinkageResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionAvailabilities"] = "subscriptionAvailabilities"

    data: Data
    links: DocumentLinks

class SubscriptionSubscriptionLocalizationsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["subscriptionLocalizations"] = "subscriptionLocalizations"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class SubscriptionWinBackOffersLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["winBackOffers"] = "winBackOffers"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class UserInvitationVisibleAppsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["apps"] = "apps"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class UserVisibleAppsLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["apps"] = "apps"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class WebhookDeliveriesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["webhookDeliveries"] = "webhookDeliveries"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class WinBackOfferPricesLinkagesResponse(JSONResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["winBackOfferPrices"] = "winBackOfferPrices"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class AppsBetaTesterUsagesV1MetricResponse(JSONResponse):
    class Data(ApplaudModel):
        class DataPoints(ApplaudModel):
            class Values(ApplaudModel):
                crash_count: Optional[int] = None
                session_count: Optional[int] = None
                feedback_count: Optional[int] = None

            start: Optional[datetime.datetime] = None
            end: Optional[datetime.datetime] = None
            values: Optional[Values] = None

        class Dimensions(ApplaudModel):
            class BetaTesters(ApplaudModel):
                class Links(ApplaudModel):
                    group_by: Optional[str] = None
                    related: Optional[str] = None

                links: Optional[Links] = None
                data: Optional[str] = None

            beta_testers: Optional[BetaTesters] = None

        data_points: Optional[DataPoints] = None
        dimensions: Optional[Dimensions] = None

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None
    included: Optional[list[BetaTester]] = None

class BetaPublicLinkUsagesV1MetricResponse(JSONResponse):
    class Data(ApplaudModel):
        class DataPoints(ApplaudModel):
            class Values(ApplaudModel):
                view_count: Optional[int] = None
                accepted_count: Optional[int] = None
                did_not_accept_count: Optional[int] = None
                did_not_meet_criteria_count: Optional[int] = None
                not_relevant_ratio: Optional[float] = None
                not_clear_ratio: Optional[float] = None
                not_interesting_ratio: Optional[float] = None

            start: Optional[datetime.datetime] = None
            end: Optional[datetime.datetime] = None
            values: Optional[Values] = None

        data_points: Optional[DataPoints] = None

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BetaTesterUsagesV1MetricResponse(JSONResponse):
    class Data(ApplaudModel):
        class DataPoints(ApplaudModel):
            class Values(ApplaudModel):
                crash_count: Optional[int] = None
                session_count: Optional[int] = None
                feedback_count: Optional[int] = None

            start: Optional[datetime.datetime] = None
            end: Optional[datetime.datetime] = None
            values: Optional[Values] = None

        class Dimensions(ApplaudModel):
            class Apps(ApplaudModel):
                class Links(ApplaudModel):
                    group_by: Optional[str] = None
                    related: Optional[str] = None

                links: Optional[Links] = None
                data: Optional[str] = None

            apps: Optional[Apps] = None

        data_points: Optional[DataPoints] = None
        dimensions: Optional[Dimensions] = None

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class BetaBuildUsagesV1MetricResponse(JSONResponse):
    class Data(ApplaudModel):
        class DataPoints(ApplaudModel):
            class Values(ApplaudModel):
                crash_count: Optional[int] = None
                install_count: Optional[int] = None
                session_count: Optional[int] = None
                feedback_count: Optional[int] = None
                invite_count: Optional[int] = None

            start: Optional[datetime.datetime] = None
            end: Optional[datetime.datetime] = None
            values: Optional[Values] = None

        data_points: Optional[DataPoints] = None

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterMatchmakingAppRequestsV1MetricResponse(JSONResponse):
    class Data(ApplaudModel):
        class DataPoints(ApplaudModel):
            class Values(ApplaudModel):
                count: Optional[int] = None
                average_seconds_in_queue: Optional[float] = None
                p50_seconds_in_queue: Optional[float] = None
                p95_seconds_in_queue: Optional[float] = None

            start: Optional[datetime.datetime] = None
            end: Optional[datetime.datetime] = None
            values: Optional[Values] = None

        class Dimensions(ApplaudModel):
            class Result(ApplaudModel):
                class Links(ApplaudModel):
                    group_by: Optional[str] = None

                class Data(StringEnum):
                    MATCHED = 'MATCHED'
                    CANCELED = 'CANCELED'
                    EXPIRED = 'EXPIRED'

                links: Optional[Links] = None
                data: Optional[Data] = None

            result: Optional[Result] = None

        class Granularity(StringEnum):
            P1D = 'P1D'
            PT1H = 'PT1H'
            PT15M = 'PT15M'

        data_points: Optional[DataPoints] = None
        dimensions: Optional[Dimensions] = None
        granularity: Optional[Granularity] = None

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterMatchmakingQueueSizesV1MetricResponse(JSONResponse):
    class Data(ApplaudModel):
        class DataPoints(ApplaudModel):
            class Values(ApplaudModel):
                count: Optional[int] = None
                average_number_of_requests: Optional[float] = None
                p50_number_of_requests: Optional[float] = None
                p95_number_of_requests: Optional[float] = None

            start: Optional[datetime.datetime] = None
            end: Optional[datetime.datetime] = None
            values: Optional[Values] = None

        class Granularity(StringEnum):
            P1D = 'P1D'
            PT1H = 'PT1H'
            PT15M = 'PT15M'

        data_points: Optional[DataPoints] = None
        granularity: Optional[Granularity] = None

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterMatchmakingQueueRequestsV1MetricResponse(JSONResponse):
    class Data(ApplaudModel):
        class DataPoints(ApplaudModel):
            class Values(ApplaudModel):
                count: Optional[int] = None
                average_seconds_in_queue: Optional[float] = None
                p50_seconds_in_queue: Optional[float] = None
                p95_seconds_in_queue: Optional[float] = None

            start: Optional[datetime.datetime] = None
            end: Optional[datetime.datetime] = None
            values: Optional[Values] = None

        class Dimensions(ApplaudModel):
            class Result(ApplaudModel):
                class Links(ApplaudModel):
                    group_by: Optional[str] = None

                class Data(StringEnum):
                    MATCHED = 'MATCHED'
                    CANCELED = 'CANCELED'
                    EXPIRED = 'EXPIRED'

                links: Optional[Links] = None
                data: Optional[Data] = None

            class GameCenterDetail(ApplaudModel):
                class Links(ApplaudModel):
                    group_by: Optional[str] = None
                    related: Optional[str] = None

                links: Optional[Links] = None
                data: Optional[str] = None

            result: Optional[Result] = None
            game_center_detail: Optional[GameCenterDetail] = None

        class Granularity(StringEnum):
            P1D = 'P1D'
            PT1H = 'PT1H'
            PT15M = 'PT15M'

        data_points: Optional[DataPoints] = None
        dimensions: Optional[Dimensions] = None
        granularity: Optional[Granularity] = None

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterMatchmakingSessionsV1MetricResponse(JSONResponse):
    class Data(ApplaudModel):
        class DataPoints(ApplaudModel):
            class Values(ApplaudModel):
                count: Optional[int] = None
                average_player_count: Optional[float] = None
                p50_player_count: Optional[float] = None
                p95_player_count: Optional[float] = None

            start: Optional[datetime.datetime] = None
            end: Optional[datetime.datetime] = None
            values: Optional[Values] = None

        class Granularity(StringEnum):
            P1D = 'P1D'
            PT1H = 'PT1H'
            PT15M = 'PT15M'

        data_points: Optional[DataPoints] = None
        granularity: Optional[Granularity] = None

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterMatchmakingBooleanRuleResultsV1MetricResponse(JSONResponse):
    class Data(ApplaudModel):
        class DataPoints(ApplaudModel):
            class Values(ApplaudModel):
                count: Optional[int] = None

            start: Optional[datetime.datetime] = None
            end: Optional[datetime.datetime] = None
            values: Optional[Values] = None

        class Dimensions(ApplaudModel):
            class Result(ApplaudModel):
                class Links(ApplaudModel):
                    group_by: Optional[str] = None

                links: Optional[Links] = None
                data: Optional[str] = None

            class GameCenterMatchmakingQueue(ApplaudModel):
                class Links(ApplaudModel):
                    group_by: Optional[str] = None
                    related: Optional[str] = None

                links: Optional[Links] = None
                data: Optional[str] = None

            result: Optional[Result] = None
            game_center_matchmaking_queue: Optional[GameCenterMatchmakingQueue] = None

        class Granularity(StringEnum):
            P1D = 'P1D'
            PT1H = 'PT1H'
            PT15M = 'PT15M'

        data_points: Optional[DataPoints] = None
        dimensions: Optional[Dimensions] = None
        granularity: Optional[Granularity] = None

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterMatchmakingNumberRuleResultsV1MetricResponse(JSONResponse):
    class Data(ApplaudModel):
        class DataPoints(ApplaudModel):
            class Values(ApplaudModel):
                count: Optional[int] = None
                average_result: Optional[float] = None
                p50_result: Optional[float] = None
                p95_result: Optional[float] = None

            start: Optional[datetime.datetime] = None
            end: Optional[datetime.datetime] = None
            values: Optional[Values] = None

        class Dimensions(ApplaudModel):
            class GameCenterMatchmakingQueue(ApplaudModel):
                class Links(ApplaudModel):
                    group_by: Optional[str] = None
                    related: Optional[str] = None

                links: Optional[Links] = None
                data: Optional[str] = None

            game_center_matchmaking_queue: Optional[GameCenterMatchmakingQueue] = None

        class Granularity(StringEnum):
            P1D = 'P1D'
            PT1H = 'PT1H'
            PT15M = 'PT15M'

        data_points: Optional[DataPoints] = None
        dimensions: Optional[Dimensions] = None
        granularity: Optional[Granularity] = None

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class GameCenterMatchmakingRuleErrorsV1MetricResponse(JSONResponse):
    class Data(ApplaudModel):
        class DataPoints(ApplaudModel):
            class Values(ApplaudModel):
                count: Optional[int] = None

            start: Optional[datetime.datetime] = None
            end: Optional[datetime.datetime] = None
            values: Optional[Values] = None

        class Dimensions(ApplaudModel):
            class GameCenterMatchmakingQueue(ApplaudModel):
                class Links(ApplaudModel):
                    group_by: Optional[str] = None
                    related: Optional[str] = None

                links: Optional[Links] = None
                data: Optional[str] = None

            game_center_matchmaking_queue: Optional[GameCenterMatchmakingQueue] = None

        class Granularity(StringEnum):
            P1D = 'P1D'
            PT1H = 'PT1H'
            PT15M = 'PT15M'

        data_points: Optional[DataPoints] = None
        dimensions: Optional[Dimensions] = None
        granularity: Optional[Granularity] = None

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None

class ErrorResponse(JSONResponse):
    class Error(ApplaudModel):
        code: str
        detail: str
        status: str
        title: str
        id: Optional[str] = None
        source: Optional[Union[ErrorSourcePointer, ErrorSourceParameter]] = None
        links: Optional[ErrorLinks] = None
        meta: Optional[dict] = None

    errors: Optional[list[Error]] = None


