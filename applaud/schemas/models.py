# This file is autogenerated by `applaudgen` from `app_store_connect_api.json`.
# Do not modify this file -- YOUR CHANGES WILL BE ERASED!

from __future__ import annotations

from pydantic import BaseModel, AnyUrl, EmailStr, Field, ConfigDict
from deprecated import deprecated
from .enums import *
from typing import Optional, Literal
import re
import datetime

def _camelcase(string):
    """ Convert string into camel case.

    Args:
        string: String to convert.

    Returns:
        string: Camel case string.

    """

    string = re.sub(r"^[\-_\.]", '', str(string))
    if not string:
        return string
    return (str(string[0]).lower()
            + re.sub(r"[\-_\.\s]([a-z])",
                    lambda matched: str(matched.group(1)).upper(),
                    string[1:]))

class ApplaudModel(BaseModel):
    model_config = ConfigDict(
        alias_generator=_camelcase,
        populate_by_name=True,
        # 允许额外字段，这样 API 返回的未知字段不会导致验证失败
        extra='allow',
    )

class ResourceLinks(ApplaudModel):
    self: Optional[str] = None

class PagingInformation(ApplaudModel):
    class Paging(ApplaudModel):
        limit: int
        total: Optional[int] = None
        next_cursor: Optional[str] = None

    paging: Paging

class HttpHeader(ApplaudModel):
    name: Optional[str] = None
    value: Optional[str] = None

class ImageAsset(ApplaudModel):
    template_url: Optional[str] = None
    width: Optional[int] = None
    height: Optional[int] = None

class AppMediaStateError(ApplaudModel):
    code: Optional[str] = None
    description: Optional[str] = None

class AppMediaAssetState(ApplaudModel):
    class State(StringEnum):
        AWAITING_UPLOAD = 'AWAITING_UPLOAD'
        UPLOAD_COMPLETE = 'UPLOAD_COMPLETE'
        COMPLETE = 'COMPLETE'
        FAILED = 'FAILED'

    errors: Optional[list[AppMediaStateError]] = None
    warnings: Optional[list[AppMediaStateError]] = None
    state: Optional[State] = None

class UploadOperation(ApplaudModel):
    method: Optional[str] = None
    url: Optional[str] = None
    length: Optional[int] = None
    offset: Optional[int] = None
    request_headers: Optional[list[HttpHeader]] = None

class Device(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        platform: Optional[BundleIdPlatform] = None
        udid: Optional[str] = None
        device_class: Optional[DeviceClass] = None
        status: Optional[DeviceStatus] = None
        model: Optional[str] = None
        added_date: Optional[datetime.datetime] = None

    id: str
    type: Literal["devices"] = "devices"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class FileLocation(ApplaudModel):
    path: Optional[str] = None
    line_number: Optional[int] = None

class ScmProviderType(ApplaudModel):
    class Kind(StringEnum):
        BITBUCKET_CLOUD = 'BITBUCKET_CLOUD'
        BITBUCKET_SERVER = 'BITBUCKET_SERVER'
        GITHUB_CLOUD = 'GITHUB_CLOUD'
        GITHUB_ENTERPRISE = 'GITHUB_ENTERPRISE'
        GITLAB_CLOUD = 'GITLAB_CLOUD'
        GITLAB_SELF_MANAGED = 'GITLAB_SELF_MANAGED'

    kind: Optional[Kind] = None
    display_name: Optional[str] = None
    is_on_premise: Optional[bool] = None

class CiTagPatterns(ApplaudModel):
    class Pattern(ApplaudModel):
        pattern: Optional[str] = None
        is_prefix: Optional[bool] = None

    is_all_match: Optional[bool] = None
    patterns: Optional[list[Pattern]] = None

class CiBranchPatterns(ApplaudModel):
    class Pattern(ApplaudModel):
        pattern: Optional[str] = None
        is_prefix: Optional[bool] = None

    is_all_match: Optional[bool] = None
    patterns: Optional[list[Pattern]] = None

class CiStartConditionFileMatcher(ApplaudModel):
    directory: Optional[str] = None
    file_extension: Optional[str] = None
    file_name: Optional[str] = None

class CiFilesAndFoldersRule(ApplaudModel):
    class Mode(StringEnum):
        START_IF_ANY_FILE_MATCHES = 'START_IF_ANY_FILE_MATCHES'
        DO_NOT_START_IF_ALL_FILES_MATCH = 'DO_NOT_START_IF_ALL_FILES_MATCH'

    mode: Optional[Mode] = None
    matchers: Optional[list[CiStartConditionFileMatcher]] = None

class CiTestDestination(ApplaudModel):
    device_type_name: Optional[str] = None
    device_type_identifier: Optional[str] = None
    runtime_name: Optional[str] = None
    runtime_identifier: Optional[str] = None
    kind: Optional[CiTestDestinationKind] = None

class CiAction(ApplaudModel):
    class TestConfiguration(ApplaudModel):
        class Kind(StringEnum):
            USE_SCHEME_SETTINGS = 'USE_SCHEME_SETTINGS'
            SPECIFIC_TEST_PLANS = 'SPECIFIC_TEST_PLANS'

        kind: Optional[Kind] = None
        test_plan_name: Optional[str] = None
        test_destinations: Optional[list[CiTestDestination]] = None

    class Destination(StringEnum):
        ANY_IOS_DEVICE = 'ANY_IOS_DEVICE'
        ANY_IOS_SIMULATOR = 'ANY_IOS_SIMULATOR'
        ANY_TVOS_DEVICE = 'ANY_TVOS_DEVICE'
        ANY_TVOS_SIMULATOR = 'ANY_TVOS_SIMULATOR'
        ANY_WATCHOS_DEVICE = 'ANY_WATCHOS_DEVICE'
        ANY_WATCHOS_SIMULATOR = 'ANY_WATCHOS_SIMULATOR'
        ANY_MAC = 'ANY_MAC'
        ANY_MAC_CATALYST = 'ANY_MAC_CATALYST'
        ANY_VISIONOS_DEVICE = 'ANY_VISIONOS_DEVICE'
        ANY_VISIONOS_SIMULATOR = 'ANY_VISIONOS_SIMULATOR'

    class Platform(StringEnum):
        MACOS = 'MACOS'
        IOS = 'IOS'
        TVOS = 'TVOS'
        WATCHOS = 'WATCHOS'
        VISIONOS = 'VISIONOS'

    name: Optional[str] = None
    action_type: Optional[CiActionType] = None
    destination: Optional[Destination] = None
    build_distribution_audience: Optional[BuildAudienceType] = None
    test_configuration: Optional[TestConfiguration] = None
    scheme: Optional[str] = None
    platform: Optional[Platform] = None
    is_required_to_pass: Optional[bool] = None

class CiGitUser(ApplaudModel):
    display_name: Optional[str] = None
    avatar_url: Optional[AnyUrl] = None

class CiIssueCounts(ApplaudModel):
    analyzer_warnings: Optional[int] = None
    errors: Optional[int] = None
    test_failures: Optional[int] = None
    warnings: Optional[int] = None

class CapabilityOption(ApplaudModel):
    class Key(StringEnum):
        XCODE_5 = 'XCODE_5'
        XCODE_6 = 'XCODE_6'
        COMPLETE_PROTECTION = 'COMPLETE_PROTECTION'
        PROTECTED_UNLESS_OPEN = 'PROTECTED_UNLESS_OPEN'
        PROTECTED_UNTIL_FIRST_USER_AUTH = 'PROTECTED_UNTIL_FIRST_USER_AUTH'
        PRIMARY_APP_CONSENT = 'PRIMARY_APP_CONSENT'

    key: Optional[Key] = None
    name: Optional[str] = None
    description: Optional[str] = None
    enabled_by_default: Optional[bool] = None
    enabled: Optional[bool] = None
    supports_wildcard: Optional[bool] = None

class CapabilitySetting(ApplaudModel):
    class Key(StringEnum):
        ICLOUD_VERSION = 'ICLOUD_VERSION'
        DATA_PROTECTION_PERMISSION_LEVEL = 'DATA_PROTECTION_PERMISSION_LEVEL'
        APPLE_ID_AUTH_APP_CONSENT = 'APPLE_ID_AUTH_APP_CONSENT'

    class AllowedInstances(StringEnum):
        ENTRY = 'ENTRY'
        SINGLE = 'SINGLE'
        MULTIPLE = 'MULTIPLE'

    key: Optional[Key] = None
    name: Optional[str] = None
    description: Optional[str] = None
    enabled_by_default: Optional[bool] = None
    visible: Optional[bool] = None
    allowed_instances: Optional[AllowedInstances] = None
    min_instances: Optional[int] = None
    options: Optional[list[CapabilityOption]] = None

class CiBranchStartCondition(ApplaudModel):
    source: Optional[CiBranchPatterns] = None
    files_and_folders_rule: Optional[CiFilesAndFoldersRule] = None
    auto_cancel: Optional[bool] = None

class CiTagStartCondition(ApplaudModel):
    source: Optional[CiTagPatterns] = None
    files_and_folders_rule: Optional[CiFilesAndFoldersRule] = None
    auto_cancel: Optional[bool] = None

class CiPullRequestStartCondition(ApplaudModel):
    source: Optional[CiBranchPatterns] = None
    destination: Optional[CiBranchPatterns] = None
    files_and_folders_rule: Optional[CiFilesAndFoldersRule] = None
    auto_cancel: Optional[bool] = None

class CiScheduledStartCondition(ApplaudModel):
    class Schedule(ApplaudModel):
        class Frequency(StringEnum):
            WEEKLY = 'WEEKLY'
            DAILY = 'DAILY'
            HOURLY = 'HOURLY'

        frequency: Optional[Frequency] = None
        days: Optional[list[str]] = None
        hour: Optional[int] = None
        minute: Optional[int] = None
        timezone: Optional[str] = None

    source: Optional[CiBranchPatterns] = None
    schedule: Optional[Schedule] = None

class AccessibilityDeclaration(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            DRAFT = 'DRAFT'
            PUBLISHED = 'PUBLISHED'
            REPLACED = 'REPLACED'

        device_family: Optional[DeviceFamily] = None
        state: Optional[State] = None
        supports_audio_descriptions: Optional[bool] = None
        supports_captions: Optional[bool] = None
        supports_dark_interface: Optional[bool] = None
        supports_differentiate_without_color_alone: Optional[bool] = None
        supports_larger_text: Optional[bool] = None
        supports_reduced_motion: Optional[bool] = None
        supports_sufficient_contrast: Optional[bool] = None
        supports_voice_control: Optional[bool] = None
        supports_voiceover: Optional[bool] = None

    id: str
    type: Literal["accessibilityDeclarations"] = "accessibilityDeclarations"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class Actor(ApplaudModel):
    class Attributes(ApplaudModel):
        class ActorType(StringEnum):
            USER = 'USER'
            API_KEY = 'API_KEY'
            XCODE_CLOUD = 'XCODE_CLOUD'
            APPLE = 'APPLE'

        actor_type: Optional[ActorType] = None
        user_first_name: Optional[str] = None
        user_last_name: Optional[str] = None
        user_email: Optional[str] = None
        api_key_id: Optional[str] = None

    id: str
    type: Literal["actors"] = "actors"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class AgeRatingDeclaration(ApplaudModel):
    class Attributes(ApplaudModel):
        class GunsOrOtherWeapons(StringEnum):
            NONE = 'NONE'
            INFREQUENT_OR_MILD = 'INFREQUENT_OR_MILD'
            FREQUENT_OR_INTENSE = 'FREQUENT_OR_INTENSE'
            INFREQUENT = 'INFREQUENT'
            FREQUENT = 'FREQUENT'

        class AgeRatingOverride(StringEnum):
            NONE = 'NONE'
            NINE_PLUS = 'NINE_PLUS'
            THIRTEEN_PLUS = 'THIRTEEN_PLUS'
            SIXTEEN_PLUS = 'SIXTEEN_PLUS'
            SEVENTEEN_PLUS = 'SEVENTEEN_PLUS'
            UNRATED = 'UNRATED'

        class AgeRatingOverrideV2(StringEnum):
            NONE = 'NONE'
            NINE_PLUS = 'NINE_PLUS'
            THIRTEEN_PLUS = 'THIRTEEN_PLUS'
            SIXTEEN_PLUS = 'SIXTEEN_PLUS'
            EIGHTEEN_PLUS = 'EIGHTEEN_PLUS'
            UNRATED = 'UNRATED'

        class KoreaAgeRatingOverride(StringEnum):
            NONE = 'NONE'
            FIFTEEN_PLUS = 'FIFTEEN_PLUS'
            NINETEEN_PLUS = 'NINETEEN_PLUS'

        advertising: Optional[bool] = None
        alcohol_tobacco_or_drug_use_or_references: Optional[AgeRatingDeclarationLevel] = None
        contests: Optional[AgeRatingDeclarationLevel] = None
        gambling: Optional[bool] = None
        gambling_simulated: Optional[AgeRatingDeclarationLevel] = None
        guns_or_other_weapons: Optional[GunsOrOtherWeapons] = None
        health_or_wellness_topics: Optional[bool] = None
        kids_age_band: Optional[KidsAgeBand] = None
        loot_box: Optional[bool] = None
        medical_or_treatment_information: Optional[AgeRatingDeclarationLevel] = None
        messaging_and_chat: Optional[bool] = None
        parental_controls: Optional[bool] = None
        profanity_or_crude_humor: Optional[AgeRatingDeclarationLevel] = None
        age_assurance: Optional[bool] = None
        sexual_content_graphic_and_nudity: Optional[AgeRatingDeclarationLevel] = None
        sexual_content_or_nudity: Optional[AgeRatingDeclarationLevel] = None
        horror_or_fear_themes: Optional[AgeRatingDeclarationLevel] = None
        mature_or_suggestive_themes: Optional[AgeRatingDeclarationLevel] = None
        unrestricted_web_access: Optional[bool] = None
        user_generated_content: Optional[bool] = None
        violence_cartoon_or_fantasy: Optional[AgeRatingDeclarationLevel] = None
        violence_realistic_prolonged_graphic_or_sadistic: Optional[AgeRatingDeclarationLevel] = None
        violence_realistic: Optional[AgeRatingDeclarationLevel] = None
        age_rating_override: Optional[AgeRatingOverride] = Field(None, deprecated=True)
        age_rating_override_v2: Optional[AgeRatingOverrideV2] = None
        korea_age_rating_override: Optional[KoreaAgeRatingOverride] = None
        developer_age_rating_info_url: Optional[AnyUrl] = None

    id: str
    type: Literal["ageRatingDeclarations"] = "ageRatingDeclarations"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class AlternativeDistributionDomain(ApplaudModel):
    class Attributes(ApplaudModel):
        domain: Optional[str] = None
        reference_name: Optional[str] = None
        created_date: Optional[datetime.datetime] = None

    id: str
    type: Literal["alternativeDistributionDomains"] = "alternativeDistributionDomains"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class AlternativeDistributionKey(ApplaudModel):
    class Attributes(ApplaudModel):
        public_key: Optional[str] = None

    id: str
    type: Literal["alternativeDistributionKeys"] = "alternativeDistributionKeys"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class AlternativeDistributionPackageDelta(ApplaudModel):
    class Attributes(ApplaudModel):
        url: Optional[AnyUrl] = None
        url_expiration_date: Optional[datetime.datetime] = None
        alternative_distribution_key_blob: Optional[str] = None
        file_checksum: Optional[str] = None

    id: str
    type: Literal["alternativeDistributionPackageDeltas"] = "alternativeDistributionPackageDeltas"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class AlternativeDistributionPackageVariant(ApplaudModel):
    class Attributes(ApplaudModel):
        url: Optional[AnyUrl] = None
        url_expiration_date: Optional[datetime.datetime] = None
        alternative_distribution_key_blob: Optional[str] = None
        file_checksum: Optional[str] = None

    id: str
    type: Literal["alternativeDistributionPackageVariants"] = "alternativeDistributionPackageVariants"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class AlternativeDistributionPackageVersion(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            COMPLETED = 'COMPLETED'
            REPLACED = 'REPLACED'

        url: Optional[AnyUrl] = None
        url_expiration_date: Optional[datetime.datetime] = None
        version: Optional[str] = None
        file_checksum: Optional[str] = None
        state: Optional[State] = None

    class Relationships(ApplaudModel):
        class Variants(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["alternativeDistributionPackageVariants"] = "alternativeDistributionPackageVariants"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Deltas(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["alternativeDistributionPackageDeltas"] = "alternativeDistributionPackageDeltas"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AlternativeDistributionPackage(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["alternativeDistributionPackages"] = "alternativeDistributionPackages"

            data: Optional[Data] = None

        variants: Optional[Variants] = None
        deltas: Optional[Deltas] = None
        alternative_distribution_package: Optional[AlternativeDistributionPackage] = None

    id: str
    type: Literal["alternativeDistributionPackageVersions"] = "alternativeDistributionPackageVersions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AlternativeDistributionPackage(ApplaudModel):
    class Relationships(ApplaudModel):
        class Versions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["alternativeDistributionPackageVersions"] = "alternativeDistributionPackageVersions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        versions: Optional[Versions] = None

    id: str
    type: Literal["alternativeDistributionPackages"] = "alternativeDistributionPackages"
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AnalyticsReportInstance(ApplaudModel):
    class Attributes(ApplaudModel):
        class Granularity(StringEnum):
            DAILY = 'DAILY'
            WEEKLY = 'WEEKLY'
            MONTHLY = 'MONTHLY'

        granularity: Optional[Granularity] = None
        processing_date: Optional[datetime.date] = None

    class Relationships(ApplaudModel):
        class Segments(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        segments: Optional[Segments] = None

    id: str
    type: Literal["analyticsReportInstances"] = "analyticsReportInstances"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AnalyticsReportSegment(ApplaudModel):
    class Attributes(ApplaudModel):
        checksum: Optional[str] = None
        size_in_bytes: Optional[int] = None
        url: Optional[AnyUrl] = None

    id: str
    type: Literal["analyticsReportSegments"] = "analyticsReportSegments"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class AnalyticsReport(ApplaudModel):
    class Attributes(ApplaudModel):
        class Category(StringEnum):
            APP_USAGE = 'APP_USAGE'
            APP_STORE_ENGAGEMENT = 'APP_STORE_ENGAGEMENT'
            COMMERCE = 'COMMERCE'
            FRAMEWORK_USAGE = 'FRAMEWORK_USAGE'
            PERFORMANCE = 'PERFORMANCE'

        name: Optional[str] = None
        category: Optional[Category] = None

    class Relationships(ApplaudModel):
        class Instances(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        instances: Optional[Instances] = None

    id: str
    type: Literal["analyticsReports"] = "analyticsReports"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppAvailabilityV2(ApplaudModel):
    class Attributes(ApplaudModel):
        available_in_new_territories: Optional[bool] = None

    class Relationships(ApplaudModel):
        class TerritoryAvailabilities(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territoryAvailabilities"] = "territoryAvailabilities"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        territory_availabilities: Optional[TerritoryAvailabilities] = None

    id: str
    type: Literal["appAvailabilities"] = "appAvailabilities"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppCategory(ApplaudModel):
    class Attributes(ApplaudModel):
        platforms: Optional[list[Platform]] = None

    class Relationships(ApplaudModel):
        class Subcategories(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCategories"] = "appCategories"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Parent(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCategories"] = "appCategories"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        subcategories: Optional[Subcategories] = None
        parent: Optional[Parent] = None

    id: str
    type: Literal["appCategories"] = "appCategories"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppClipAdvancedExperienceImage(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        source_file_checksum: Optional[str] = None
        image_asset: Optional[ImageAsset] = None
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = None

    id: str
    type: Literal["appClipAdvancedExperienceImages"] = "appClipAdvancedExperienceImages"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class AppClipAdvancedExperienceLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        language: Optional[AppClipAdvancedExperienceLanguage] = None
        title: Optional[str] = None
        subtitle: Optional[str] = None

    id: str
    type: Literal["appClipAdvancedExperienceLocalizations"] = "appClipAdvancedExperienceLocalizations"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class AppClipAdvancedExperienceLocalizationInlineCreate(ApplaudModel):
    class Attributes(ApplaudModel):
        language: Optional[AppClipAdvancedExperienceLanguage] = None
        title: Optional[str] = None
        subtitle: Optional[str] = None

    type: Literal["appClipAdvancedExperienceLocalizations"] = "appClipAdvancedExperienceLocalizations"
    id: Optional[str] = None
    attributes: Optional[Attributes] = None

class AppClipAdvancedExperience(ApplaudModel):
    class Attributes(ApplaudModel):
        class Place(ApplaudModel):
            class MainAddress(ApplaudModel):
                class StructuredAddress(ApplaudModel):
                    street_address: Optional[list[str]] = None
                    floor: Optional[str] = None
                    neighborhood: Optional[str] = None
                    locality: Optional[str] = None
                    state_province: Optional[str] = None
                    postal_code: Optional[str] = None
                    country_code: Optional[str] = None

                full_address: Optional[str] = None
                structured_address: Optional[StructuredAddress] = None

            class DisplayPoint(ApplaudModel):
                class Coordinates(ApplaudModel):
                    latitude: Optional[float] = None
                    longitude: Optional[float] = None

                coordinates: Optional[Coordinates] = None
                source: Optional[AppClipAdvancedExperiencePlaceSource] = None

            class PhoneNumber(ApplaudModel):
                number: Optional[str] = None
                type: Optional[AppClipAdvancedExperiencePlacePhoneNumberType] = None
                intent: Optional[str] = None

            place_id: Optional[str] = None
            names: Optional[list[str]] = None
            main_address: Optional[MainAddress] = None
            display_point: Optional[DisplayPoint] = None
            map_action: Optional[AppClipAdvancedExperiencePlaceMapAction] = None
            relationship: Optional[AppClipAdvancedExperiencePlaceRelationship] = None
            phone_number: Optional[PhoneNumber] = None
            home_page: Optional[str] = None
            categories: Optional[list[str]] = None

        link: Optional[AnyUrl] = None
        version: Optional[int] = None
        status: Optional[AppClipAdvancedExperienceStatus] = None
        action: Optional[AppClipAction] = None
        is_powered_by: Optional[bool] = None
        place: Optional[Place] = None
        place_status: Optional[AppClipAdvancedExperiencePlaceStatus] = None
        business_category: Optional[AppClipAdvancedExperienceBusinessCategory] = None
        default_language: Optional[AppClipAdvancedExperienceLanguage] = None

    class Relationships(ApplaudModel):
        class AppClip(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClips"] = "appClips"

            data: Optional[Data] = None

        class HeaderImage(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClipAdvancedExperienceImages"] = "appClipAdvancedExperienceImages"

            data: Optional[Data] = None

        class Localizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClipAdvancedExperienceLocalizations"] = "appClipAdvancedExperienceLocalizations"

            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app_clip: Optional[AppClip] = None
        header_image: Optional[HeaderImage] = None
        localizations: Optional[Localizations] = None

    id: str
    type: Literal["appClipAdvancedExperiences"] = "appClipAdvancedExperiences"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppClipAppStoreReviewDetail(ApplaudModel):
    class Attributes(ApplaudModel):
        invocation_urls: Optional[list[str]] = None

    class Relationships(ApplaudModel):
        class AppClipDefaultExperience(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClipDefaultExperiences"] = "appClipDefaultExperiences"

            data: Optional[Data] = None

        app_clip_default_experience: Optional[AppClipDefaultExperience] = None

    id: str
    type: Literal["appClipAppStoreReviewDetails"] = "appClipAppStoreReviewDetails"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppClipDefaultExperienceLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        locale: Optional[str] = None
        subtitle: Optional[str] = None

    class Relationships(ApplaudModel):
        class AppClipDefaultExperience(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClipDefaultExperiences"] = "appClipDefaultExperiences"

            data: Optional[Data] = None

        class AppClipHeaderImage(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClipHeaderImages"] = "appClipHeaderImages"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        app_clip_default_experience: Optional[AppClipDefaultExperience] = None
        app_clip_header_image: Optional[AppClipHeaderImage] = None

    id: str
    type: Literal["appClipDefaultExperienceLocalizations"] = "appClipDefaultExperienceLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppClipDefaultExperience(ApplaudModel):
    class Attributes(ApplaudModel):
        action: Optional[AppClipAction] = None

    class Relationships(ApplaudModel):
        class AppClip(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClips"] = "appClips"

            data: Optional[Data] = None

        class ReleaseWithAppStoreVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersions"] = "appStoreVersions"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class AppClipDefaultExperienceLocalizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClipDefaultExperienceLocalizations"] = "appClipDefaultExperienceLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppClipAppStoreReviewDetail(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClipAppStoreReviewDetails"] = "appClipAppStoreReviewDetails"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        app_clip: Optional[AppClip] = None
        release_with_app_store_version: Optional[ReleaseWithAppStoreVersion] = None
        app_clip_default_experience_localizations: Optional[AppClipDefaultExperienceLocalizations] = None
        app_clip_app_store_review_detail: Optional[AppClipAppStoreReviewDetail] = None

    id: str
    type: Literal["appClipDefaultExperiences"] = "appClipDefaultExperiences"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppClipDomainStatus(ApplaudModel):
    class Attributes(ApplaudModel):
        class Domain(ApplaudModel):
            domain: Optional[str] = None
            is_valid: Optional[bool] = None
            last_updated_date: Optional[datetime.datetime] = None
            error_code: Optional[AppClipDomainErrorCode] = None

        domains: Optional[list[Domain]] = None
        last_updated_date: Optional[datetime.datetime] = None

    id: str
    type: Literal["appClipDomainStatuses"] = "appClipDomainStatuses"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class AppClipHeaderImage(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        source_file_checksum: Optional[str] = None
        image_asset: Optional[ImageAsset] = None
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = None

    class Relationships(ApplaudModel):
        class AppClipDefaultExperienceLocalization(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClipDefaultExperienceLocalizations"] = "appClipDefaultExperienceLocalizations"

            data: Optional[Data] = None

        app_clip_default_experience_localization: Optional[AppClipDefaultExperienceLocalization] = None

    id: str
    type: Literal["appClipHeaderImages"] = "appClipHeaderImages"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppClip(ApplaudModel):
    class Attributes(ApplaudModel):
        bundle_id: Optional[str] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            data: Optional[Data] = None

        class AppClipDefaultExperiences(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClipDefaultExperiences"] = "appClipDefaultExperiences"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppClipAdvancedExperiences(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        app: Optional[App] = None
        app_clip_default_experiences: Optional[AppClipDefaultExperiences] = None
        app_clip_advanced_experiences: Optional[AppClipAdvancedExperiences] = None

    id: str
    type: Literal["appClips"] = "appClips"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppCustomProductPageLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        locale: Optional[str] = None
        promotional_text: Optional[str] = None

    class Relationships(ApplaudModel):
        class AppCustomProductPageVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCustomProductPageVersions"] = "appCustomProductPageVersions"

            data: Optional[Data] = None

        class AppScreenshotSets(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appScreenshotSets"] = "appScreenshotSets"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppPreviewSets(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appPreviewSets"] = "appPreviewSets"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class SearchKeywords(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appKeywords"] = "appKeywords"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app_custom_product_page_version: Optional[AppCustomProductPageVersion] = None
        app_screenshot_sets: Optional[AppScreenshotSets] = None
        app_preview_sets: Optional[AppPreviewSets] = None
        search_keywords: Optional[SearchKeywords] = None

    id: str
    type: Literal["appCustomProductPageLocalizations"] = "appCustomProductPageLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppCustomProductPageLocalizationInlineCreate(ApplaudModel):
    class Attributes(ApplaudModel):
        locale: str
        promotional_text: Optional[str] = None

    class Relationships(ApplaudModel):
        class AppCustomProductPageVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCustomProductPageVersions"] = "appCustomProductPageVersions"

            data: Optional[Data] = None

        app_custom_product_page_version: Optional[AppCustomProductPageVersion] = None

    attributes: Attributes
    type: Literal["appCustomProductPageLocalizations"] = "appCustomProductPageLocalizations"
    id: Optional[str] = None
    relationships: Optional[Relationships] = None

class AppCustomProductPageVersion(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            PREPARE_FOR_SUBMISSION = 'PREPARE_FOR_SUBMISSION'
            READY_FOR_REVIEW = 'READY_FOR_REVIEW'
            WAITING_FOR_REVIEW = 'WAITING_FOR_REVIEW'
            IN_REVIEW = 'IN_REVIEW'
            ACCEPTED = 'ACCEPTED'
            APPROVED = 'APPROVED'
            REPLACED_WITH_NEW_VERSION = 'REPLACED_WITH_NEW_VERSION'
            REJECTED = 'REJECTED'

        version: Optional[str] = None
        state: Optional[State] = None
        deep_link: Optional[AnyUrl] = None

    class Relationships(ApplaudModel):
        class AppCustomProductPage(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCustomProductPages"] = "appCustomProductPages"

            data: Optional[Data] = None

        class AppCustomProductPageLocalizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCustomProductPageLocalizations"] = "appCustomProductPageLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app_custom_product_page: Optional[AppCustomProductPage] = None
        app_custom_product_page_localizations: Optional[AppCustomProductPageLocalizations] = None

    id: str
    type: Literal["appCustomProductPageVersions"] = "appCustomProductPageVersions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppCustomProductPageVersionInlineCreate(ApplaudModel):
    class Attributes(ApplaudModel):
        deep_link: Optional[AnyUrl] = None

    class Relationships(ApplaudModel):
        class AppCustomProductPage(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCustomProductPages"] = "appCustomProductPages"

            data: Optional[Data] = None

        class AppCustomProductPageLocalizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCustomProductPageLocalizations"] = "appCustomProductPageLocalizations"

            data: Optional[list[Data]] = None

        app_custom_product_page: Optional[AppCustomProductPage] = None
        app_custom_product_page_localizations: Optional[AppCustomProductPageLocalizations] = None

    type: Literal["appCustomProductPageVersions"] = "appCustomProductPageVersions"
    id: Optional[str] = None
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None

class AppCustomProductPage(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        url: Optional[AnyUrl] = None
        visible: Optional[bool] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            data: Optional[Data] = None

        class AppCustomProductPageVersions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCustomProductPageVersions"] = "appCustomProductPageVersions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app: Optional[App] = None
        app_custom_product_page_versions: Optional[AppCustomProductPageVersions] = None

    id: str
    type: Literal["appCustomProductPages"] = "appCustomProductPages"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppEncryptionDeclarationDocument(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        asset_token: Optional[str] = None
        download_url: Optional[AnyUrl] = None
        source_file_checksum: Optional[str] = None
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = None

    id: str
    type: Literal["appEncryptionDeclarationDocuments"] = "appEncryptionDeclarationDocuments"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class AppEncryptionDeclaration(ApplaudModel):
    class Attributes(ApplaudModel):
        app_description: Optional[str] = None
        created_date: Optional[datetime.datetime] = None
        uses_encryption: Optional[bool] = Field(None, deprecated=True)
        exempt: Optional[bool] = None
        contains_proprietary_cryptography: Optional[bool] = None
        contains_third_party_cryptography: Optional[bool] = None
        available_on_french_store: Optional[bool] = None
        platform: Optional[Platform] = Field(None, deprecated=True)
        uploaded_date: Optional[datetime.datetime] = Field(None, deprecated=True)
        document_url: Optional[str] = Field(None, deprecated=True)
        document_name: Optional[str] = Field(None, deprecated=True)
        document_type: Optional[str] = Field(None, deprecated=True)
        app_encryption_declaration_state: Optional[AppEncryptionDeclarationState] = None
        code_value: Optional[str] = None

    class Relationships(ApplaudModel):
        @deprecated
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        @deprecated
        class Builds(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["builds"] = "builds"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppEncryptionDeclarationDocument(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appEncryptionDeclarationDocuments"] = "appEncryptionDeclarationDocuments"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        app: Optional[App] = Field(None, deprecated=True)
        builds: Optional[Builds] = Field(None, deprecated=True)
        app_encryption_declaration_document: Optional[AppEncryptionDeclarationDocument] = None

    id: str
    type: Literal["appEncryptionDeclarations"] = "appEncryptionDeclarations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppEventLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        locale: Optional[str] = None
        name: Optional[str] = None
        short_description: Optional[str] = None
        long_description: Optional[str] = None

    class Relationships(ApplaudModel):
        class AppEvent(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appEvents"] = "appEvents"

            data: Optional[Data] = None

        class AppEventScreenshots(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appEventScreenshots"] = "appEventScreenshots"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppEventVideoClips(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appEventVideoClips"] = "appEventVideoClips"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app_event: Optional[AppEvent] = None
        app_event_screenshots: Optional[AppEventScreenshots] = None
        app_event_video_clips: Optional[AppEventVideoClips] = None

    id: str
    type: Literal["appEventLocalizations"] = "appEventLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppEventScreenshot(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        image_asset: Optional[ImageAsset] = None
        asset_token: Optional[str] = None
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = None
        app_event_asset_type: Optional[AppEventAssetType] = None

    class Relationships(ApplaudModel):
        class AppEventLocalization(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appEventLocalizations"] = "appEventLocalizations"

            data: Optional[Data] = None

        app_event_localization: Optional[AppEventLocalization] = None

    id: str
    type: Literal["appEventScreenshots"] = "appEventScreenshots"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppEventVideoClip(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        preview_frame_time_code: Optional[str] = None
        video_url: Optional[str] = None
        preview_frame_image: Optional[PreviewFrameImage] = None
        preview_image: Optional[ImageAsset] = Field(None, deprecated=True)
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = Field(None, deprecated=True)
        video_delivery_state: Optional[AppMediaVideoState] = None
        app_event_asset_type: Optional[AppEventAssetType] = None

    class Relationships(ApplaudModel):
        class AppEventLocalization(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appEventLocalizations"] = "appEventLocalizations"

            data: Optional[Data] = None

        app_event_localization: Optional[AppEventLocalization] = None

    id: str
    type: Literal["appEventVideoClips"] = "appEventVideoClips"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppEvent(ApplaudModel):
    class Attributes(ApplaudModel):
        class TerritorySchedule(ApplaudModel):
            territories: Optional[list[str]] = None
            publish_start: Optional[datetime.datetime] = None
            event_start: Optional[datetime.datetime] = None
            event_end: Optional[datetime.datetime] = None

        class ArchivedTerritorySchedule(ApplaudModel):
            territories: Optional[list[str]] = None
            publish_start: Optional[datetime.datetime] = None
            event_start: Optional[datetime.datetime] = None
            event_end: Optional[datetime.datetime] = None

        class Badge(StringEnum):
            LIVE_EVENT = 'LIVE_EVENT'
            PREMIERE = 'PREMIERE'
            CHALLENGE = 'CHALLENGE'
            COMPETITION = 'COMPETITION'
            NEW_SEASON = 'NEW_SEASON'
            MAJOR_UPDATE = 'MAJOR_UPDATE'
            SPECIAL_EVENT = 'SPECIAL_EVENT'

        class EventState(StringEnum):
            DRAFT = 'DRAFT'
            READY_FOR_REVIEW = 'READY_FOR_REVIEW'
            WAITING_FOR_REVIEW = 'WAITING_FOR_REVIEW'
            IN_REVIEW = 'IN_REVIEW'
            REJECTED = 'REJECTED'
            ACCEPTED = 'ACCEPTED'
            APPROVED = 'APPROVED'
            PUBLISHED = 'PUBLISHED'
            PAST = 'PAST'
            ARCHIVED = 'ARCHIVED'

        class Priority(StringEnum):
            HIGH = 'HIGH'
            NORMAL = 'NORMAL'

        class Purpose(StringEnum):
            APPROPRIATE_FOR_ALL_USERS = 'APPROPRIATE_FOR_ALL_USERS'
            ATTRACT_NEW_USERS = 'ATTRACT_NEW_USERS'
            KEEP_ACTIVE_USERS_INFORMED = 'KEEP_ACTIVE_USERS_INFORMED'
            BRING_BACK_LAPSED_USERS = 'BRING_BACK_LAPSED_USERS'

        reference_name: Optional[str] = None
        badge: Optional[Badge] = None
        event_state: Optional[EventState] = None
        deep_link: Optional[AnyUrl] = None
        purchase_requirement: Optional[str] = None
        primary_locale: Optional[str] = None
        priority: Optional[Priority] = None
        purpose: Optional[Purpose] = None
        territory_schedules: Optional[list[TerritorySchedule]] = None
        archived_territory_schedules: Optional[list[ArchivedTerritorySchedule]] = None

    class Relationships(ApplaudModel):
        class Localizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appEventLocalizations"] = "appEventLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        localizations: Optional[Localizations] = None

    id: str
    type: Literal["appEvents"] = "appEvents"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppInfoLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        locale: Optional[str] = None
        name: Optional[str] = None
        subtitle: Optional[str] = None
        privacy_policy_url: Optional[str] = None
        privacy_choices_url: Optional[str] = None
        privacy_policy_text: Optional[str] = None

    class Relationships(ApplaudModel):
        class AppInfo(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appInfos"] = "appInfos"

            data: Optional[Data] = None

        app_info: Optional[AppInfo] = None

    id: str
    type: Literal["appInfoLocalizations"] = "appInfoLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppInfo(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            ACCEPTED = 'ACCEPTED'
            DEVELOPER_REJECTED = 'DEVELOPER_REJECTED'
            IN_REVIEW = 'IN_REVIEW'
            PENDING_RELEASE = 'PENDING_RELEASE'
            PREPARE_FOR_SUBMISSION = 'PREPARE_FOR_SUBMISSION'
            READY_FOR_DISTRIBUTION = 'READY_FOR_DISTRIBUTION'
            READY_FOR_REVIEW = 'READY_FOR_REVIEW'
            REJECTED = 'REJECTED'
            REPLACED_WITH_NEW_INFO = 'REPLACED_WITH_NEW_INFO'
            WAITING_FOR_REVIEW = 'WAITING_FOR_REVIEW'

        class AustraliaAgeRating(StringEnum):
            FIFTEEN = 'FIFTEEN'
            EIGHTEEN = 'EIGHTEEN'

        class BrazilAgeRatingV2(StringEnum):
            SELF_RATED_L = 'SELF_RATED_L'
            SELF_RATED_TEN = 'SELF_RATED_TEN'
            SELF_RATED_TWELVE = 'SELF_RATED_TWELVE'
            SELF_RATED_FOURTEEN = 'SELF_RATED_FOURTEEN'
            SELF_RATED_SIXTEEN = 'SELF_RATED_SIXTEEN'
            SELF_RATED_EIGHTEEN = 'SELF_RATED_EIGHTEEN'
            OFFICIAL_L = 'OFFICIAL_L'
            OFFICIAL_TEN = 'OFFICIAL_TEN'
            OFFICIAL_TWELVE = 'OFFICIAL_TWELVE'
            OFFICIAL_FOURTEEN = 'OFFICIAL_FOURTEEN'
            OFFICIAL_SIXTEEN = 'OFFICIAL_SIXTEEN'
            OFFICIAL_EIGHTEEN = 'OFFICIAL_EIGHTEEN'

        class FranceAgeRating(StringEnum):
            EIGHTEEN = 'EIGHTEEN'

        class KoreaAgeRating(StringEnum):
            ALL = 'ALL'
            TWELVE = 'TWELVE'
            FIFTEEN = 'FIFTEEN'
            NINETEEN = 'NINETEEN'
            NOT_APPLICABLE = 'NOT_APPLICABLE'

        app_store_state: Optional[AppStoreVersionState] = Field(None, deprecated=True)
        state: Optional[State] = None
        app_store_age_rating: Optional[AppStoreAgeRating] = Field(None, deprecated=True)
        australia_age_rating: Optional[AustraliaAgeRating] = Field(None, deprecated=True)
        brazil_age_rating: Optional[BrazilAgeRating] = Field(None, deprecated=True)
        brazil_age_rating_v2: Optional[BrazilAgeRatingV2] = Field(None, deprecated=True)
        france_age_rating: Literal[FranceAgeRating.EIGHTEEN] = FranceAgeRating.EIGHTEEN
        korea_age_rating: Optional[KoreaAgeRating] = Field(None, deprecated=True)
        kids_age_band: Optional[KidsAgeBand] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            data: Optional[Data] = None

        class AgeRatingDeclaration(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["ageRatingDeclarations"] = "ageRatingDeclarations"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class AppInfoLocalizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appInfoLocalizations"] = "appInfoLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class PrimaryCategory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCategories"] = "appCategories"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class PrimarySubcategoryOne(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCategories"] = "appCategories"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class PrimarySubcategoryTwo(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCategories"] = "appCategories"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class SecondaryCategory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCategories"] = "appCategories"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class SecondarySubcategoryOne(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCategories"] = "appCategories"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class SecondarySubcategoryTwo(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCategories"] = "appCategories"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class TerritoryAgeRatings(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        app: Optional[App] = None
        age_rating_declaration: Optional[AgeRatingDeclaration] = None
        app_info_localizations: Optional[AppInfoLocalizations] = None
        primary_category: Optional[PrimaryCategory] = None
        primary_subcategory_one: Optional[PrimarySubcategoryOne] = None
        primary_subcategory_two: Optional[PrimarySubcategoryTwo] = None
        secondary_category: Optional[SecondaryCategory] = None
        secondary_subcategory_one: Optional[SecondarySubcategoryOne] = None
        secondary_subcategory_two: Optional[SecondarySubcategoryTwo] = None
        territory_age_ratings: Optional[TerritoryAgeRatings] = None

    id: str
    type: Literal["appInfos"] = "appInfos"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppKeyword(ApplaudModel):
    id: str
    type: Literal["appKeywords"] = "appKeywords"
    links: Optional[ResourceLinks] = None

class AppPreviewSet(ApplaudModel):
    class Attributes(ApplaudModel):
        preview_type: Optional[PreviewType] = None

    class Relationships(ApplaudModel):
        class AppStoreVersionLocalization(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionLocalizations"] = "appStoreVersionLocalizations"

            data: Optional[Data] = None

        class AppCustomProductPageLocalization(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCustomProductPageLocalizations"] = "appCustomProductPageLocalizations"

            data: Optional[Data] = None

        class AppStoreVersionExperimentTreatmentLocalization(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionExperimentTreatmentLocalizations"] = "appStoreVersionExperimentTreatmentLocalizations"

            data: Optional[Data] = None

        class AppPreviews(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appPreviews"] = "appPreviews"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app_store_version_localization: Optional[AppStoreVersionLocalization] = None
        app_custom_product_page_localization: Optional[AppCustomProductPageLocalization] = None
        app_store_version_experiment_treatment_localization: Optional[AppStoreVersionExperimentTreatmentLocalization] = None
        app_previews: Optional[AppPreviews] = None

    id: str
    type: Literal["appPreviewSets"] = "appPreviewSets"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppPreview(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        source_file_checksum: Optional[str] = None
        preview_frame_time_code: Optional[str] = None
        mime_type: Optional[str] = None
        video_url: Optional[str] = None
        preview_frame_image: Optional[PreviewFrameImage] = None
        preview_image: Optional[ImageAsset] = Field(None, deprecated=True)
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = Field(None, deprecated=True)
        video_delivery_state: Optional[AppMediaVideoState] = None

    class Relationships(ApplaudModel):
        class AppPreviewSet(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appPreviewSets"] = "appPreviewSets"

            data: Optional[Data] = None

        app_preview_set: Optional[AppPreviewSet] = None

    id: str
    type: Literal["appPreviews"] = "appPreviews"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppPricePointV3(ApplaudModel):
    class Attributes(ApplaudModel):
        customer_price: Optional[str] = None
        proceeds: Optional[str] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            data: Optional[Data] = None

        class Equalizations(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        app: Optional[App] = None
        equalizations: Optional[Equalizations] = None
        territory: Optional[Territory] = None

    id: str
    type: Literal["appPricePoints"] = "appPricePoints"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppPriceSchedule(ApplaudModel):
    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            data: Optional[Data] = None

        class BaseTerritory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class ManualPrices(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appPrices"] = "appPrices"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AutomaticPrices(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appPrices"] = "appPrices"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app: Optional[App] = None
        base_territory: Optional[BaseTerritory] = None
        manual_prices: Optional[ManualPrices] = None
        automatic_prices: Optional[AutomaticPrices] = None

    id: str
    type: Literal["appPriceSchedules"] = "appPriceSchedules"
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppPriceV2(ApplaudModel):
    class Attributes(ApplaudModel):
        manual: Optional[bool] = None
        start_date: Optional[datetime.date] = None
        end_date: Optional[datetime.date] = None

    class Relationships(ApplaudModel):
        class AppPricePoint(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appPricePoints"] = "appPricePoints"

            data: Optional[Data] = None

        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        app_price_point: Optional[AppPricePoint] = None
        territory: Optional[Territory] = None

    id: str
    type: Literal["appPrices"] = "appPrices"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppPriceV2InlineCreate(ApplaudModel):
    type: Literal["appPrices"] = "appPrices"
    id: Optional[str] = None

class AppScreenshotSet(ApplaudModel):
    class Attributes(ApplaudModel):
        screenshot_display_type: Optional[ScreenshotDisplayType] = None

    class Relationships(ApplaudModel):
        class AppStoreVersionLocalization(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionLocalizations"] = "appStoreVersionLocalizations"

            data: Optional[Data] = None

        class AppCustomProductPageLocalization(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCustomProductPageLocalizations"] = "appCustomProductPageLocalizations"

            data: Optional[Data] = None

        class AppStoreVersionExperimentTreatmentLocalization(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionExperimentTreatmentLocalizations"] = "appStoreVersionExperimentTreatmentLocalizations"

            data: Optional[Data] = None

        class AppScreenshots(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appScreenshots"] = "appScreenshots"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app_store_version_localization: Optional[AppStoreVersionLocalization] = None
        app_custom_product_page_localization: Optional[AppCustomProductPageLocalization] = None
        app_store_version_experiment_treatment_localization: Optional[AppStoreVersionExperimentTreatmentLocalization] = None
        app_screenshots: Optional[AppScreenshots] = None

    id: str
    type: Literal["appScreenshotSets"] = "appScreenshotSets"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppScreenshot(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        source_file_checksum: Optional[str] = None
        image_asset: Optional[ImageAsset] = None
        asset_token: Optional[str] = None
        asset_type: Optional[str] = None
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = None

    class Relationships(ApplaudModel):
        class AppScreenshotSet(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appScreenshotSets"] = "appScreenshotSets"

            data: Optional[Data] = None

        app_screenshot_set: Optional[AppScreenshotSet] = None

    id: str
    type: Literal["appScreenshots"] = "appScreenshots"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppStoreReviewAttachment(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        source_file_checksum: Optional[str] = None
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = None

    class Relationships(ApplaudModel):
        class AppStoreReviewDetail(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreReviewDetails"] = "appStoreReviewDetails"

            data: Optional[Data] = None

        app_store_review_detail: Optional[AppStoreReviewDetail] = None

    id: str
    type: Literal["appStoreReviewAttachments"] = "appStoreReviewAttachments"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppStoreReviewDetail(ApplaudModel):
    class Attributes(ApplaudModel):
        contact_first_name: Optional[str] = None
        contact_last_name: Optional[str] = None
        contact_phone: Optional[str] = None
        contact_email: Optional[str] = None
        demo_account_name: Optional[str] = None
        demo_account_password: Optional[str] = None
        demo_account_required: Optional[bool] = None
        notes: Optional[str] = None

    class Relationships(ApplaudModel):
        class AppStoreVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersions"] = "appStoreVersions"

            data: Optional[Data] = None

        class AppStoreReviewAttachments(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreReviewAttachments"] = "appStoreReviewAttachments"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app_store_version: Optional[AppStoreVersion] = None
        app_store_review_attachments: Optional[AppStoreReviewAttachments] = None

    id: str
    type: Literal["appStoreReviewDetails"] = "appStoreReviewDetails"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppStoreVersionExperimentTreatmentLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        locale: Optional[str] = None

    class Relationships(ApplaudModel):
        class AppStoreVersionExperimentTreatment(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionExperimentTreatments"] = "appStoreVersionExperimentTreatments"

            data: Optional[Data] = None

        class AppScreenshotSets(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appScreenshotSets"] = "appScreenshotSets"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppPreviewSets(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appPreviewSets"] = "appPreviewSets"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app_store_version_experiment_treatment: Optional[AppStoreVersionExperimentTreatment] = None
        app_screenshot_sets: Optional[AppScreenshotSets] = None
        app_preview_sets: Optional[AppPreviewSets] = None

    id: str
    type: Literal["appStoreVersionExperimentTreatmentLocalizations"] = "appStoreVersionExperimentTreatmentLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppStoreVersionExperimentTreatment(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        app_icon: Optional[ImageAsset] = None
        app_icon_name: Optional[str] = None
        promoted_date: Optional[datetime.datetime] = None

    class Relationships(ApplaudModel):
        class AppStoreVersionExperiment(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionExperiments"] = "appStoreVersionExperiments"

            data: Optional[Data] = None

        class AppStoreVersionExperimentV2(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionExperiments"] = "appStoreVersionExperiments"

            data: Optional[Data] = None

        class AppStoreVersionExperimentTreatmentLocalizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionExperimentTreatmentLocalizations"] = "appStoreVersionExperimentTreatmentLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app_store_version_experiment: Optional[AppStoreVersionExperiment] = None
        app_store_version_experiment_v2: Optional[AppStoreVersionExperimentV2] = None
        app_store_version_experiment_treatment_localizations: Optional[AppStoreVersionExperimentTreatmentLocalizations] = None

    id: str
    type: Literal["appStoreVersionExperimentTreatments"] = "appStoreVersionExperimentTreatments"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppStoreVersionExperimentV2(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            PREPARE_FOR_SUBMISSION = 'PREPARE_FOR_SUBMISSION'
            READY_FOR_REVIEW = 'READY_FOR_REVIEW'
            WAITING_FOR_REVIEW = 'WAITING_FOR_REVIEW'
            IN_REVIEW = 'IN_REVIEW'
            ACCEPTED = 'ACCEPTED'
            APPROVED = 'APPROVED'
            REJECTED = 'REJECTED'
            COMPLETED = 'COMPLETED'
            STOPPED = 'STOPPED'

        name: Optional[str] = None
        platform: Optional[Platform] = None
        traffic_proportion: Optional[int] = None
        state: Optional[State] = None
        review_required: Optional[bool] = None
        start_date: Optional[datetime.datetime] = None
        end_date: Optional[datetime.datetime] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            data: Optional[Data] = None

        class LatestControlVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersions"] = "appStoreVersions"

            data: Optional[Data] = None

        class ControlVersions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersions"] = "appStoreVersions"

            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppStoreVersionExperimentTreatments(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionExperimentTreatments"] = "appStoreVersionExperimentTreatments"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app: Optional[App] = None
        latest_control_version: Optional[LatestControlVersion] = None
        control_versions: Optional[ControlVersions] = None
        app_store_version_experiment_treatments: Optional[AppStoreVersionExperimentTreatments] = None

    id: str
    type: Literal["appStoreVersionExperiments"] = "appStoreVersionExperiments"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

@deprecated
class AppStoreVersionExperiment(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            PREPARE_FOR_SUBMISSION = 'PREPARE_FOR_SUBMISSION'
            READY_FOR_REVIEW = 'READY_FOR_REVIEW'
            WAITING_FOR_REVIEW = 'WAITING_FOR_REVIEW'
            IN_REVIEW = 'IN_REVIEW'
            ACCEPTED = 'ACCEPTED'
            APPROVED = 'APPROVED'
            REJECTED = 'REJECTED'
            COMPLETED = 'COMPLETED'
            STOPPED = 'STOPPED'

        name: Optional[str] = None
        traffic_proportion: Optional[int] = None
        state: Optional[State] = None
        review_required: Optional[bool] = None
        start_date: Optional[datetime.datetime] = None
        end_date: Optional[datetime.datetime] = None

    class Relationships(ApplaudModel):
        class AppStoreVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersions"] = "appStoreVersions"

            data: Optional[Data] = None

        class AppStoreVersionExperimentTreatments(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionExperimentTreatments"] = "appStoreVersionExperimentTreatments"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app_store_version: Optional[AppStoreVersion] = None
        app_store_version_experiment_treatments: Optional[AppStoreVersionExperimentTreatments] = None

    id: str
    type: Literal["appStoreVersionExperiments"] = "appStoreVersionExperiments"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppStoreVersionLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        description: Optional[str] = None
        locale: Optional[str] = None
        keywords: Optional[str] = None
        marketing_url: Optional[AnyUrl] = None
        promotional_text: Optional[str] = None
        support_url: Optional[AnyUrl] = None
        whats_new: Optional[str] = None

    class Relationships(ApplaudModel):
        class AppStoreVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersions"] = "appStoreVersions"

            data: Optional[Data] = None

        class AppScreenshotSets(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appScreenshotSets"] = "appScreenshotSets"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppPreviewSets(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appPreviewSets"] = "appPreviewSets"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class SearchKeywords(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appKeywords"] = "appKeywords"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app_store_version: Optional[AppStoreVersion] = None
        app_screenshot_sets: Optional[AppScreenshotSets] = None
        app_preview_sets: Optional[AppPreviewSets] = None
        search_keywords: Optional[SearchKeywords] = None

    id: str
    type: Literal["appStoreVersionLocalizations"] = "appStoreVersionLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppStoreVersionPhasedRelease(ApplaudModel):
    class Attributes(ApplaudModel):
        phased_release_state: Optional[PhasedReleaseState] = None
        start_date: Optional[datetime.datetime] = None
        total_pause_duration: Optional[int] = None
        current_day_number: Optional[int] = None

    id: str
    type: Literal["appStoreVersionPhasedReleases"] = "appStoreVersionPhasedReleases"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class AppStoreVersionPromotion(ApplaudModel):
    id: str
    type: Literal["appStoreVersionPromotions"] = "appStoreVersionPromotions"
    links: Optional[ResourceLinks] = None

@deprecated
class AppStoreVersionSubmission(ApplaudModel):
    class Relationships(ApplaudModel):
        class AppStoreVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersions"] = "appStoreVersions"

            data: Optional[Data] = None

        app_store_version: Optional[AppStoreVersion] = None

    id: str
    type: Literal["appStoreVersionSubmissions"] = "appStoreVersionSubmissions"
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppStoreVersion(ApplaudModel):
    class Attributes(ApplaudModel):
        class ReviewType(StringEnum):
            APP_STORE = 'APP_STORE'
            NOTARIZATION = 'NOTARIZATION'

        platform: Optional[Platform] = None
        version_string: Optional[str] = None
        app_store_state: Optional[AppStoreVersionState] = Field(None, deprecated=True)
        app_version_state: Optional[AppVersionState] = None
        copyright: Optional[str] = None
        review_type: Optional[ReviewType] = None
        release_type: Optional[AppStoreVersionReleaseType] = None
        earliest_release_date: Optional[datetime.datetime] = None
        uses_idfa: Optional[bool] = Field(None, deprecated=True)
        downloadable: Optional[bool] = None
        created_date: Optional[datetime.datetime] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            data: Optional[Data] = None

        @deprecated
        class AgeRatingDeclaration(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["ageRatingDeclarations"] = "ageRatingDeclarations"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class AppStoreVersionLocalizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionLocalizations"] = "appStoreVersionLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Build(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["builds"] = "builds"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class AppStoreVersionPhasedRelease(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionPhasedReleases"] = "appStoreVersionPhasedReleases"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class GameCenterAppVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterAppVersions"] = "gameCenterAppVersions"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class RoutingAppCoverage(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["routingAppCoverages"] = "routingAppCoverages"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class AppStoreReviewDetail(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreReviewDetails"] = "appStoreReviewDetails"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class AppStoreVersionSubmission(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionSubmissions"] = "appStoreVersionSubmissions"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class AppClipDefaultExperience(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClipDefaultExperiences"] = "appClipDefaultExperiences"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class AppStoreVersionExperiments(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionExperiments"] = "appStoreVersionExperiments"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppStoreVersionExperimentsV2(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionExperiments"] = "appStoreVersionExperiments"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class CustomerReviews(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class AlternativeDistributionPackage(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["alternativeDistributionPackages"] = "alternativeDistributionPackages"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        app: Optional[App] = None
        age_rating_declaration: Optional[AgeRatingDeclaration] = Field(None, deprecated=True)
        app_store_version_localizations: Optional[AppStoreVersionLocalizations] = None
        build: Optional[Build] = None
        app_store_version_phased_release: Optional[AppStoreVersionPhasedRelease] = None
        game_center_app_version: Optional[GameCenterAppVersion] = None
        routing_app_coverage: Optional[RoutingAppCoverage] = None
        app_store_review_detail: Optional[AppStoreReviewDetail] = None
        app_store_version_submission: Optional[AppStoreVersionSubmission] = None
        app_clip_default_experience: Optional[AppClipDefaultExperience] = None
        app_store_version_experiments: Optional[AppStoreVersionExperiments] = None
        app_store_version_experiments_v2: Optional[AppStoreVersionExperimentsV2] = None
        customer_reviews: Optional[CustomerReviews] = None
        alternative_distribution_package: Optional[AlternativeDistributionPackage] = None

    id: str
    type: Literal["appStoreVersions"] = "appStoreVersions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class AppTag(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        visible_in_app_store: Optional[bool] = None

    class Relationships(ApplaudModel):
        class Territories(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        territories: Optional[Territories] = None

    id: str
    type: Literal["appTags"] = "appTags"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class App(ApplaudModel):
    class Attributes(ApplaudModel):
        accessibility_url: Optional[AnyUrl] = None
        name: Optional[str] = None
        bundle_id: Optional[str] = None
        sku: Optional[str] = None
        primary_locale: Optional[str] = None
        is_or_ever_was_made_for_kids: Optional[bool] = None
        subscription_status_url: Optional[AnyUrl] = None
        subscription_status_url_version: Optional[SubscriptionStatusUrlVersion] = None
        subscription_status_url_for_sandbox: Optional[AnyUrl] = None
        subscription_status_url_version_for_sandbox: Optional[SubscriptionStatusUrlVersion] = None
        content_rights_declaration: Optional[AppContentRightsDeclaration] = None
        streamlined_purchasing_enabled: Optional[bool] = None

    class Relationships(ApplaudModel):
        class AccessibilityDeclarations(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class AppEncryptionDeclarations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appEncryptionDeclarations"] = "appEncryptionDeclarations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class CiProduct(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["ciProducts"] = "ciProducts"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class BetaTesters(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class BetaGroups(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaGroups"] = "betaGroups"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppStoreVersions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersions"] = "appStoreVersions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppTags(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class PreReleaseVersions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["preReleaseVersions"] = "preReleaseVersions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class BetaAppLocalizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaAppLocalizations"] = "betaAppLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Builds(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["builds"] = "builds"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class BetaLicenseAgreement(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaLicenseAgreements"] = "betaLicenseAgreements"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class BetaAppReviewDetail(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaAppReviewDetails"] = "betaAppReviewDetails"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class AppInfos(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appInfos"] = "appInfos"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppClips(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClips"] = "appClips"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppPricePoints(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class EndUserLicenseAgreement(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["endUserLicenseAgreements"] = "endUserLicenseAgreements"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class AppPriceSchedule(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class AppAvailabilityV2(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        @deprecated
        class InAppPurchases(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchases"] = "inAppPurchases"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class SubscriptionGroups(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionGroups"] = "subscriptionGroups"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class GameCenterEnabledVersions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterEnabledVersions"] = "gameCenterEnabledVersions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class PerfPowerMetrics(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class AppCustomProductPages(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCustomProductPages"] = "appCustomProductPages"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class InAppPurchasesV2(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchases"] = "inAppPurchases"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class PromotedPurchases(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["promotedPurchases"] = "promotedPurchases"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppEvents(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appEvents"] = "appEvents"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class ReviewSubmissions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["reviewSubmissions"] = "reviewSubmissions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class SubscriptionGracePeriod(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionGracePeriods"] = "subscriptionGracePeriods"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class CustomerReviews(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class CustomerReviewSummarizations(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class GameCenterDetail(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterDetails"] = "gameCenterDetails"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class AppStoreVersionExperimentsV2(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionExperiments"] = "appStoreVersionExperiments"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AlternativeDistributionKey(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class AnalyticsReportRequests(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class MarketplaceSearchDetail(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class BuildUploads(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class BackgroundAssets(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class BetaFeedbackScreenshotSubmissions(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class BetaFeedbackCrashSubmissions(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class SearchKeywords(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class Webhooks(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        accessibility_declarations: Optional[AccessibilityDeclarations] = None
        app_encryption_declarations: Optional[AppEncryptionDeclarations] = None
        ci_product: Optional[CiProduct] = None
        beta_testers: Optional[BetaTesters] = None
        beta_groups: Optional[BetaGroups] = None
        app_store_versions: Optional[AppStoreVersions] = None
        app_tags: Optional[AppTags] = None
        pre_release_versions: Optional[PreReleaseVersions] = None
        beta_app_localizations: Optional[BetaAppLocalizations] = None
        builds: Optional[Builds] = None
        beta_license_agreement: Optional[BetaLicenseAgreement] = None
        beta_app_review_detail: Optional[BetaAppReviewDetail] = None
        app_infos: Optional[AppInfos] = None
        app_clips: Optional[AppClips] = None
        app_price_points: Optional[AppPricePoints] = None
        end_user_license_agreement: Optional[EndUserLicenseAgreement] = None
        app_price_schedule: Optional[AppPriceSchedule] = None
        app_availability_v2: Optional[AppAvailabilityV2] = None
        in_app_purchases: Optional[InAppPurchases] = Field(None, deprecated=True)
        subscription_groups: Optional[SubscriptionGroups] = None
        game_center_enabled_versions: Optional[GameCenterEnabledVersions] = None
        perf_power_metrics: Optional[PerfPowerMetrics] = None
        app_custom_product_pages: Optional[AppCustomProductPages] = None
        in_app_purchases_v2: Optional[InAppPurchasesV2] = None
        promoted_purchases: Optional[PromotedPurchases] = None
        app_events: Optional[AppEvents] = None
        review_submissions: Optional[ReviewSubmissions] = None
        subscription_grace_period: Optional[SubscriptionGracePeriod] = None
        customer_reviews: Optional[CustomerReviews] = None
        customer_review_summarizations: Optional[CustomerReviewSummarizations] = None
        game_center_detail: Optional[GameCenterDetail] = None
        app_store_version_experiments_v2: Optional[AppStoreVersionExperimentsV2] = None
        alternative_distribution_key: Optional[AlternativeDistributionKey] = None
        analytics_report_requests: Optional[AnalyticsReportRequests] = None
        marketplace_search_detail: Optional[MarketplaceSearchDetail] = None
        build_uploads: Optional[BuildUploads] = None
        background_assets: Optional[BackgroundAssets] = None
        beta_feedback_screenshot_submissions: Optional[BetaFeedbackScreenshotSubmissions] = None
        beta_feedback_crash_submissions: Optional[BetaFeedbackCrashSubmissions] = None
        search_keywords: Optional[SearchKeywords] = None
        webhooks: Optional[Webhooks] = None

    id: str
    type: Literal["apps"] = "apps"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BackgroundAssetUploadFile(ApplaudModel):
    class Attributes(ApplaudModel):
        class AssetType(StringEnum):
            ASSET = 'ASSET'
            MANIFEST = 'MANIFEST'

        asset_delivery_state: Optional[AppMediaAssetState] = None
        asset_token: Optional[str] = None
        asset_type: Optional[AssetType] = None
        file_name: Optional[str] = None
        file_size: Optional[int] = None
        source_file_checksum: Optional[str] = Field(None, deprecated=True)
        source_file_checksums: Optional[Checksums] = None
        upload_operations: Optional[list[DeliveryFileUploadOperation]] = None

    id: str
    type: Literal["backgroundAssetUploadFiles"] = "backgroundAssetUploadFiles"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class BackgroundAssetVersionAppStoreRelease(ApplaudModel):
    class Attributes(ApplaudModel):
        state: Optional[BackgroundAssetVersionAppStoreReleaseState] = None

    class Relationships(ApplaudModel):
        class BackgroundAssetVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["backgroundAssetVersions"] = "backgroundAssetVersions"

            data: Optional[Data] = None

        background_asset_version: Optional[BackgroundAssetVersion] = None

    id: str
    type: Literal["backgroundAssetVersionAppStoreReleases"] = "backgroundAssetVersionAppStoreReleases"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BackgroundAssetVersionExternalBetaRelease(ApplaudModel):
    class Attributes(ApplaudModel):
        state: Optional[BackgroundAssetVersionExternalBetaReleaseState] = None

    class Relationships(ApplaudModel):
        class BackgroundAssetVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["backgroundAssetVersions"] = "backgroundAssetVersions"

            data: Optional[Data] = None

        background_asset_version: Optional[BackgroundAssetVersion] = None

    id: str
    type: Literal["backgroundAssetVersionExternalBetaReleases"] = "backgroundAssetVersionExternalBetaReleases"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BackgroundAssetVersionInternalBetaRelease(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            READY_FOR_TESTING = 'READY_FOR_TESTING'
            SUPERSEDED = 'SUPERSEDED'

        state: Optional[State] = None

    class Relationships(ApplaudModel):
        class BackgroundAssetVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["backgroundAssetVersions"] = "backgroundAssetVersions"

            data: Optional[Data] = None

        background_asset_version: Optional[BackgroundAssetVersion] = None

    id: str
    type: Literal["backgroundAssetVersionInternalBetaReleases"] = "backgroundAssetVersionInternalBetaReleases"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BackgroundAssetVersion(ApplaudModel):
    class Attributes(ApplaudModel):
        created_date: Optional[datetime.datetime] = None
        platforms: Optional[list[Platform]] = None
        state: Optional[BackgroundAssetVersionState] = None
        version: Optional[str] = None

    class Relationships(ApplaudModel):
        class BackgroundAsset(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["backgroundAssets"] = "backgroundAssets"

            data: Optional[Data] = None

        class InternalBetaRelease(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["backgroundAssetVersionInternalBetaReleases"] = "backgroundAssetVersionInternalBetaReleases"

            data: Optional[Data] = None

        class ExternalBetaRelease(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["backgroundAssetVersionExternalBetaReleases"] = "backgroundAssetVersionExternalBetaReleases"

            data: Optional[Data] = None

        class AppStoreRelease(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["backgroundAssetVersionAppStoreReleases"] = "backgroundAssetVersionAppStoreReleases"

            data: Optional[Data] = None

        class AssetFile(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["backgroundAssetUploadFiles"] = "backgroundAssetUploadFiles"

            data: Optional[Data] = None

        class ManifestFile(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["backgroundAssetUploadFiles"] = "backgroundAssetUploadFiles"

            data: Optional[Data] = None

        class BackgroundAssetUploadFiles(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        background_asset: Optional[BackgroundAsset] = None
        internal_beta_release: Optional[InternalBetaRelease] = None
        external_beta_release: Optional[ExternalBetaRelease] = None
        app_store_release: Optional[AppStoreRelease] = None
        asset_file: Optional[AssetFile] = None
        manifest_file: Optional[ManifestFile] = None
        background_asset_upload_files: Optional[BackgroundAssetUploadFiles] = None

    id: str
    type: Literal["backgroundAssetVersions"] = "backgroundAssetVersions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BackgroundAsset(ApplaudModel):
    class Attributes(ApplaudModel):
        asset_pack_identifier: Optional[str] = None
        created_date: Optional[datetime.datetime] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            data: Optional[Data] = None

        class Versions(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class AppStoreVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["backgroundAssetVersions"] = "backgroundAssetVersions"

            data: Optional[Data] = None

        class InternalBetaVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["backgroundAssetVersions"] = "backgroundAssetVersions"

            data: Optional[Data] = None

        class ExternalBetaVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["backgroundAssetVersions"] = "backgroundAssetVersions"

            data: Optional[Data] = None

        app: Optional[App] = None
        versions: Optional[Versions] = None
        app_store_version: Optional[AppStoreVersion] = None
        internal_beta_version: Optional[InternalBetaVersion] = None
        external_beta_version: Optional[ExternalBetaVersion] = None

    id: str
    type: Literal["backgroundAssets"] = "backgroundAssets"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BetaAppClipInvocationLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        title: Optional[str] = None
        locale: Optional[str] = None

    id: str
    type: Literal["betaAppClipInvocationLocalizations"] = "betaAppClipInvocationLocalizations"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class BetaAppClipInvocationLocalizationInlineCreate(ApplaudModel):
    class Attributes(ApplaudModel):
        locale: str
        title: str

    class Relationships(ApplaudModel):
        class BetaAppClipInvocation(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaAppClipInvocations"] = "betaAppClipInvocations"

            data: Optional[Data] = None

        beta_app_clip_invocation: Optional[BetaAppClipInvocation] = None

    attributes: Attributes
    type: Literal["betaAppClipInvocationLocalizations"] = "betaAppClipInvocationLocalizations"
    id: Optional[str] = None
    relationships: Optional[Relationships] = None

class BetaAppClipInvocation(ApplaudModel):
    class Attributes(ApplaudModel):
        url: Optional[AnyUrl] = None

    class Relationships(ApplaudModel):
        class BetaAppClipInvocationLocalizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaAppClipInvocationLocalizations"] = "betaAppClipInvocationLocalizations"

            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        beta_app_clip_invocation_localizations: Optional[BetaAppClipInvocationLocalizations] = None

    id: str
    type: Literal["betaAppClipInvocations"] = "betaAppClipInvocations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BetaAppLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        feedback_email: Optional[str] = None
        marketing_url: Optional[str] = None
        privacy_policy_url: Optional[str] = None
        tv_os_privacy_policy: Optional[str] = None
        description: Optional[str] = None
        locale: Optional[str] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        app: Optional[App] = None

    id: str
    type: Literal["betaAppLocalizations"] = "betaAppLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BetaAppReviewDetail(ApplaudModel):
    class Attributes(ApplaudModel):
        contact_first_name: Optional[str] = None
        contact_last_name: Optional[str] = None
        contact_phone: Optional[str] = None
        contact_email: Optional[str] = None
        demo_account_name: Optional[str] = None
        demo_account_password: Optional[str] = None
        demo_account_required: Optional[bool] = None
        notes: Optional[str] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        app: Optional[App] = None

    id: str
    type: Literal["betaAppReviewDetails"] = "betaAppReviewDetails"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BetaAppReviewSubmission(ApplaudModel):
    class Attributes(ApplaudModel):
        beta_review_state: Optional[BetaReviewState] = None
        submitted_date: Optional[datetime.datetime] = None

    class Relationships(ApplaudModel):
        class Build(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["builds"] = "builds"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        build: Optional[Build] = None

    id: str
    type: Literal["betaAppReviewSubmissions"] = "betaAppReviewSubmissions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BetaBuildLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        whats_new: Optional[str] = None
        locale: Optional[str] = None

    class Relationships(ApplaudModel):
        class Build(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["builds"] = "builds"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        build: Optional[Build] = None

    id: str
    type: Literal["betaBuildLocalizations"] = "betaBuildLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BetaCrashLog(ApplaudModel):
    class Attributes(ApplaudModel):
        log_text: Optional[str] = None

    id: str
    type: Literal["betaCrashLogs"] = "betaCrashLogs"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class BetaFeedbackCrashSubmission(ApplaudModel):
    class Attributes(ApplaudModel):
        created_date: Optional[datetime.datetime] = None
        comment: Optional[str] = None
        email: Optional[str] = None
        device_model: Optional[str] = None
        os_version: Optional[str] = None
        locale: Optional[str] = None
        time_zone: Optional[str] = None
        architecture: Optional[str] = None
        connection_type: Optional[DeviceConnectionType] = None
        paired_apple_watch: Optional[str] = None
        app_uptime_in_milliseconds: Optional[int] = None
        disk_bytes_available: Optional[int] = None
        disk_bytes_total: Optional[int] = None
        battery_percentage: Optional[int] = None
        screen_width_in_points: Optional[int] = None
        screen_height_in_points: Optional[int] = None
        app_platform: Optional[Platform] = None
        device_platform: Optional[Platform] = None
        device_family: Optional[DeviceFamily] = None
        build_bundle_id: Optional[str] = None

    class Relationships(ApplaudModel):
        class CrashLog(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class Build(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["builds"] = "builds"

            data: Optional[Data] = None

        class Tester(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaTesters"] = "betaTesters"

            data: Optional[Data] = None

        crash_log: Optional[CrashLog] = None
        build: Optional[Build] = None
        tester: Optional[Tester] = None

    id: str
    type: Literal["betaFeedbackCrashSubmissions"] = "betaFeedbackCrashSubmissions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BetaFeedbackScreenshotSubmission(ApplaudModel):
    class Attributes(ApplaudModel):
        created_date: Optional[datetime.datetime] = None
        comment: Optional[str] = None
        email: Optional[str] = None
        device_model: Optional[str] = None
        os_version: Optional[str] = None
        locale: Optional[str] = None
        time_zone: Optional[str] = None
        architecture: Optional[str] = None
        connection_type: Optional[DeviceConnectionType] = None
        paired_apple_watch: Optional[str] = None
        app_uptime_in_milliseconds: Optional[int] = None
        disk_bytes_available: Optional[int] = None
        disk_bytes_total: Optional[int] = None
        battery_percentage: Optional[int] = None
        screen_width_in_points: Optional[int] = None
        screen_height_in_points: Optional[int] = None
        app_platform: Optional[Platform] = None
        device_platform: Optional[Platform] = None
        device_family: Optional[DeviceFamily] = None
        build_bundle_id: Optional[str] = None
        screenshots: Optional[list[BetaFeedbackScreenshotImage]] = None

    class Relationships(ApplaudModel):
        class Build(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["builds"] = "builds"

            data: Optional[Data] = None

        class Tester(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaTesters"] = "betaTesters"

            data: Optional[Data] = None

        build: Optional[Build] = None
        tester: Optional[Tester] = None

    id: str
    type: Literal["betaFeedbackScreenshotSubmissions"] = "betaFeedbackScreenshotSubmissions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BetaGroup(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        created_date: Optional[datetime.datetime] = None
        is_internal_group: Optional[bool] = None
        has_access_to_all_builds: Optional[bool] = None
        public_link_enabled: Optional[bool] = None
        public_link_id: Optional[str] = None
        public_link_limit_enabled: Optional[bool] = None
        public_link_limit: Optional[int] = None
        public_link: Optional[str] = None
        feedback_enabled: Optional[bool] = None
        ios_builds_available_for_apple_silicon_mac: Optional[bool] = None
        ios_builds_available_for_apple_vision: Optional[bool] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class Builds(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["builds"] = "builds"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class BetaTesters(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaTesters"] = "betaTesters"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class BetaRecruitmentCriteria(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaRecruitmentCriteria"] = "betaRecruitmentCriteria"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class BetaRecruitmentCriterionCompatibleBuildCheck(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        app: Optional[App] = None
        builds: Optional[Builds] = None
        beta_testers: Optional[BetaTesters] = None
        beta_recruitment_criteria: Optional[BetaRecruitmentCriteria] = None
        beta_recruitment_criterion_compatible_build_check: Optional[BetaRecruitmentCriterionCompatibleBuildCheck] = None

    id: str
    type: Literal["betaGroups"] = "betaGroups"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BetaLicenseAgreement(ApplaudModel):
    class Attributes(ApplaudModel):
        agreement_text: Optional[str] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        app: Optional[App] = None

    id: str
    type: Literal["betaLicenseAgreements"] = "betaLicenseAgreements"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BetaRecruitmentCriterion(ApplaudModel):
    class Attributes(ApplaudModel):
        last_modified_date: Optional[datetime.datetime] = None
        device_family_os_version_filters: Optional[list[DeviceFamilyOsVersionFilter]] = None

    id: str
    type: Literal["betaRecruitmentCriteria"] = "betaRecruitmentCriteria"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class BetaRecruitmentCriterionCompatibleBuildCheck(ApplaudModel):
    class Attributes(ApplaudModel):
        has_compatible_build: Optional[bool] = None

    id: str
    type: Literal["betaRecruitmentCriterionCompatibleBuildChecks"] = "betaRecruitmentCriterionCompatibleBuildChecks"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class BetaRecruitmentCriterionOption(ApplaudModel):
    class Attributes(ApplaudModel):
        class DeviceFamilyOsVersion(ApplaudModel):
            device_family: Optional[DeviceFamily] = None
            os_versions: Optional[list[str]] = None

        device_family_os_versions: Optional[list[DeviceFamilyOsVersion]] = None

    id: str
    type: Literal["betaRecruitmentCriterionOptions"] = "betaRecruitmentCriterionOptions"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class BetaTesterInvitation(ApplaudModel):
    id: str
    type: Literal["betaTesterInvitations"] = "betaTesterInvitations"
    links: Optional[ResourceLinks] = None

class BetaTester(ApplaudModel):
    class Attributes(ApplaudModel):
        first_name: Optional[str] = None
        last_name: Optional[str] = None
        email: Optional[EmailStr] = None
        invite_type: Optional[BetaInviteType] = None
        state: Optional[BetaTesterState] = None

    class Relationships(ApplaudModel):
        class Apps(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class BetaGroups(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaGroups"] = "betaGroups"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Builds(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["builds"] = "builds"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        apps: Optional[Apps] = None
        beta_groups: Optional[BetaGroups] = None
        builds: Optional[Builds] = None

    id: str
    type: Literal["betaTesters"] = "betaTesters"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BuildBetaDetail(ApplaudModel):
    class Attributes(ApplaudModel):
        auto_notify_enabled: Optional[bool] = None
        internal_build_state: Optional[InternalBetaState] = None
        external_build_state: Optional[ExternalBetaState] = None

    class Relationships(ApplaudModel):
        class Build(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["builds"] = "builds"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        build: Optional[Build] = None

    id: str
    type: Literal["buildBetaDetails"] = "buildBetaDetails"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BuildBetaNotification(ApplaudModel):
    id: str
    type: Literal["buildBetaNotifications"] = "buildBetaNotifications"
    links: Optional[ResourceLinks] = None

class BuildBundleFileSize(ApplaudModel):
    class Attributes(ApplaudModel):
        device_model: Optional[str] = None
        os_version: Optional[str] = None
        download_bytes: Optional[int] = None
        install_bytes: Optional[int] = None

    id: str
    type: Literal["buildBundleFileSizes"] = "buildBundleFileSizes"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class BuildBundle(ApplaudModel):
    class Attributes(ApplaudModel):
        bundle_id: Optional[str] = None
        bundle_type: Optional[BuildBundleType] = None
        sdk_build: Optional[str] = None
        platform_build: Optional[str] = None
        file_name: Optional[str] = None
        has_sirikit: Optional[bool] = None
        has_on_demand_resources: Optional[bool] = None
        has_prerendered_icon: Optional[bool] = None
        uses_location_services: Optional[bool] = None
        is_ios_build_mac_app_store_compatible: Optional[bool] = None
        includes_symbols: Optional[bool] = None
        d_sym_url: Optional[AnyUrl] = None
        supported_architectures: Optional[list[str]] = None
        required_capabilities: Optional[list[str]] = None
        device_protocols: Optional[list[str]] = None
        locales: Optional[list[str]] = None
        entitlements: Optional[dict[str, dict[str, str]]] = None
        ba_download_allowance: Optional[int] = None
        ba_max_install_size: Optional[int] = None

    class Relationships(ApplaudModel):
        class AppClipDomainCacheStatus(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClipDomainStatuses"] = "appClipDomainStatuses"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class AppClipDomainDebugStatus(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appClipDomainStatuses"] = "appClipDomainStatuses"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class BetaAppClipInvocations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaAppClipInvocations"] = "betaAppClipInvocations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class BuildBundleFileSizes(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["buildBundleFileSizes"] = "buildBundleFileSizes"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app_clip_domain_cache_status: Optional[AppClipDomainCacheStatus] = None
        app_clip_domain_debug_status: Optional[AppClipDomainDebugStatus] = None
        beta_app_clip_invocations: Optional[BetaAppClipInvocations] = None
        build_bundle_file_sizes: Optional[BuildBundleFileSizes] = None

    id: str
    type: Literal["buildBundles"] = "buildBundles"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BuildIcon(ApplaudModel):
    class Attributes(ApplaudModel):
        icon_asset: Optional[ImageAsset] = None
        icon_type: Optional[IconAssetType] = None
        masked: Optional[bool] = None
        name: Optional[str] = None

    id: str
    type: Literal["buildIcons"] = "buildIcons"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class BuildUploadFile(ApplaudModel):
    class Attributes(ApplaudModel):
        class AssetType(StringEnum):
            ASSET = 'ASSET'
            ASSET_DESCRIPTION = 'ASSET_DESCRIPTION'
            ASSET_SPI = 'ASSET_SPI'

        class Uti(StringEnum):
            COM_APPLE_BINARY_PROPERTY_LIST = 'com.apple.binary-property-list'
            COM_APPLE_IPA = 'com.apple.ipa'
            COM_APPLE_PKG = 'com.apple.pkg'
            COM_APPLE_XML_PROPERTY_LIST = 'com.apple.xml-property-list'
            COM_PKWARE_ZIP_ARCHIVE = 'com.pkware.zip-archive'

        asset_delivery_state: Optional[AppMediaAssetState] = None
        asset_token: Optional[str] = None
        asset_type: Optional[AssetType] = None
        file_name: Optional[str] = None
        file_size: Optional[int] = None
        source_file_checksums: Optional[Checksums] = None
        upload_operations: Optional[list[DeliveryFileUploadOperation]] = None
        uti: Optional[Uti] = None

    id: str
    type: Literal["buildUploadFiles"] = "buildUploadFiles"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class BuildUpload(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(ApplaudModel):
            errors: Optional[list[StateDetail]] = None
            warnings: Optional[list[StateDetail]] = None
            infos: Optional[list[StateDetail]] = None
            state: Optional[BuildUploadState] = None

        cf_bundle_short_version_string: Optional[str] = None
        cf_bundle_version: Optional[str] = None
        created_date: Optional[datetime.datetime] = None
        state: Optional[State] = None
        platform: Optional[Platform] = None
        uploaded_date: Optional[datetime.datetime] = None

    class Relationships(ApplaudModel):
        class Build(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["builds"] = "builds"

            data: Optional[Data] = None

        class AssetFile(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["buildUploadFiles"] = "buildUploadFiles"

            data: Optional[Data] = None

        class AssetDescriptionFile(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["buildUploadFiles"] = "buildUploadFiles"

            data: Optional[Data] = None

        class AssetSpiFile(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["buildUploadFiles"] = "buildUploadFiles"

            data: Optional[Data] = None

        class BuildUploadFiles(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        build: Optional[Build] = None
        asset_file: Optional[AssetFile] = None
        asset_description_file: Optional[AssetDescriptionFile] = None
        asset_spi_file: Optional[AssetSpiFile] = None
        build_upload_files: Optional[BuildUploadFiles] = None

    id: str
    type: Literal["buildUploads"] = "buildUploads"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class Build(ApplaudModel):
    class Attributes(ApplaudModel):
        version: Optional[str] = None
        uploaded_date: Optional[datetime.datetime] = None
        expiration_date: Optional[datetime.datetime] = None
        expired: Optional[bool] = None
        min_os_version: Optional[str] = None
        ls_minimum_system_version: Optional[str] = None
        computed_min_mac_os_version: Optional[str] = None
        computed_min_vision_os_version: Optional[str] = None
        icon_asset_token: Optional[ImageAsset] = None
        processing_state: Optional[BuildProcessingState] = None
        build_audience_type: Optional[BuildAudienceType] = None
        uses_non_exempt_encryption: Optional[bool] = None

    class Relationships(ApplaudModel):
        class PreReleaseVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["preReleaseVersions"] = "preReleaseVersions"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class IndividualTesters(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaTesters"] = "betaTesters"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class BetaGroups(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaGroups"] = "betaGroups"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class BetaBuildLocalizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaBuildLocalizations"] = "betaBuildLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppEncryptionDeclaration(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appEncryptionDeclarations"] = "appEncryptionDeclarations"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class BetaAppReviewSubmission(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["betaAppReviewSubmissions"] = "betaAppReviewSubmissions"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class BuildBetaDetail(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["buildBetaDetails"] = "buildBetaDetails"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class AppStoreVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersions"] = "appStoreVersions"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class Icons(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["buildIcons"] = "buildIcons"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class BuildBundles(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["buildBundles"] = "buildBundles"

            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class BuildUpload(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["buildUploads"] = "buildUploads"

            data: Optional[Data] = None

        class PerfPowerMetrics(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class DiagnosticSignatures(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        pre_release_version: Optional[PreReleaseVersion] = None
        individual_testers: Optional[IndividualTesters] = None
        beta_groups: Optional[BetaGroups] = None
        beta_build_localizations: Optional[BetaBuildLocalizations] = None
        app_encryption_declaration: Optional[AppEncryptionDeclaration] = None
        beta_app_review_submission: Optional[BetaAppReviewSubmission] = None
        app: Optional[App] = None
        build_beta_detail: Optional[BuildBetaDetail] = None
        app_store_version: Optional[AppStoreVersion] = None
        icons: Optional[Icons] = None
        build_bundles: Optional[BuildBundles] = None
        build_upload: Optional[BuildUpload] = None
        perf_power_metrics: Optional[PerfPowerMetrics] = None
        diagnostic_signatures: Optional[DiagnosticSignatures] = None

    id: str
    type: Literal["builds"] = "builds"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class BundleIdCapability(ApplaudModel):
    class Attributes(ApplaudModel):
        capability_type: Optional[CapabilityType] = None
        settings: Optional[list[CapabilitySetting]] = None

    id: str
    type: Literal["bundleIdCapabilities"] = "bundleIdCapabilities"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class BundleId(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        platform: Optional[BundleIdPlatform] = None
        identifier: Optional[str] = None
        seed_id: Optional[str] = None

    class Relationships(ApplaudModel):
        class Profiles(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["profiles"] = "profiles"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class BundleIdCapabilities(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["bundleIdCapabilities"] = "bundleIdCapabilities"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        profiles: Optional[Profiles] = None
        bundle_id_capabilities: Optional[BundleIdCapabilities] = None
        app: Optional[App] = None

    id: str
    type: Literal["bundleIds"] = "bundleIds"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class Certificate(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        certificate_type: Optional[CertificateType] = None
        display_name: Optional[str] = None
        serial_number: Optional[str] = None
        platform: Optional[BundleIdPlatform] = None
        expiration_date: Optional[datetime.datetime] = None
        certificate_content: Optional[str] = None
        activated: Optional[bool] = None

    class Relationships(ApplaudModel):
        class PassTypeId(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["passTypeIds"] = "passTypeIds"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        pass_type_id: Optional[PassTypeId] = None

    id: str
    type: Literal["certificates"] = "certificates"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class CiArtifact(ApplaudModel):
    class Attributes(ApplaudModel):
        file_type: Optional[CiArtifactFileType] = None
        file_name: Optional[str] = None
        file_size: Optional[int] = None
        download_url: Optional[AnyUrl] = None

    id: str
    type: Literal["ciArtifacts"] = "ciArtifacts"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class CiBuildAction(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        action_type: Optional[CiActionType] = None
        started_date: Optional[datetime.datetime] = None
        finished_date: Optional[datetime.datetime] = None
        issue_counts: Optional[CiIssueCounts] = None
        execution_progress: Optional[CiExecutionProgress] = None
        completion_status: Optional[CiCompletionStatus] = None
        is_required_to_pass: Optional[bool] = None

    class Relationships(ApplaudModel):
        class BuildRun(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["ciBuildRuns"] = "ciBuildRuns"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class Artifacts(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class Issues(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class TestResults(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        build_run: Optional[BuildRun] = None
        artifacts: Optional[Artifacts] = None
        issues: Optional[Issues] = None
        test_results: Optional[TestResults] = None

    id: str
    type: Literal["ciBuildActions"] = "ciBuildActions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class CiBuildRun(ApplaudModel):
    class Attributes(ApplaudModel):
        class SourceCommit(ApplaudModel):
            commit_sha: Optional[str] = None
            message: Optional[str] = None
            author: Optional[CiGitUser] = None
            committer: Optional[CiGitUser] = None
            web_url: Optional[AnyUrl] = None

        class DestinationCommit(ApplaudModel):
            commit_sha: Optional[str] = None
            message: Optional[str] = None
            author: Optional[CiGitUser] = None
            committer: Optional[CiGitUser] = None
            web_url: Optional[AnyUrl] = None

        number: Optional[int] = None
        created_date: Optional[datetime.datetime] = None
        started_date: Optional[datetime.datetime] = None
        finished_date: Optional[datetime.datetime] = None
        source_commit: Optional[SourceCommit] = None
        destination_commit: Optional[DestinationCommit] = None
        is_pull_request_build: Optional[bool] = None
        issue_counts: Optional[CiIssueCounts] = None
        execution_progress: Optional[CiExecutionProgress] = None
        completion_status: Optional[CiCompletionStatus] = None
        start_reason: Optional[CiBuildRunStartReason] = None
        cancel_reason: Optional[CiBuildRunCancelReason] = None

    class Relationships(ApplaudModel):
        class Builds(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["builds"] = "builds"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Workflow(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["ciWorkflows"] = "ciWorkflows"

            data: Optional[Data] = None

        class Product(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["ciProducts"] = "ciProducts"

            data: Optional[Data] = None

        class SourceBranchOrTag(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["scmGitReferences"] = "scmGitReferences"

            data: Optional[Data] = None

        class DestinationBranch(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["scmGitReferences"] = "scmGitReferences"

            data: Optional[Data] = None

        class Actions(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class PullRequest(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["scmPullRequests"] = "scmPullRequests"

            data: Optional[Data] = None

        builds: Optional[Builds] = None
        workflow: Optional[Workflow] = None
        product: Optional[Product] = None
        source_branch_or_tag: Optional[SourceBranchOrTag] = None
        destination_branch: Optional[DestinationBranch] = None
        actions: Optional[Actions] = None
        pull_request: Optional[PullRequest] = None

    id: str
    type: Literal["ciBuildRuns"] = "ciBuildRuns"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class CiIssue(ApplaudModel):
    class Attributes(ApplaudModel):
        issue_type: Optional[CiIssueType] = None
        message: Optional[str] = None
        file_source: Optional[FileLocation] = None
        category: Optional[str] = None

    id: str
    type: Literal["ciIssues"] = "ciIssues"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class CiMacOsVersion(ApplaudModel):
    class Attributes(ApplaudModel):
        version: Optional[str] = None
        name: Optional[str] = None

    class Relationships(ApplaudModel):
        class XcodeVersions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["ciXcodeVersions"] = "ciXcodeVersions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        xcode_versions: Optional[XcodeVersions] = None

    id: str
    type: Literal["ciMacOsVersions"] = "ciMacOsVersions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class CiProduct(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        created_date: Optional[datetime.datetime] = None
        product_type: Optional[CiProductType] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class BundleId(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["bundleIds"] = "bundleIds"

            data: Optional[Data] = None

        class Workflows(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class PrimaryRepositories(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["scmRepositories"] = "scmRepositories"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AdditionalRepositories(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class BuildRuns(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        app: Optional[App] = None
        bundle_id: Optional[BundleId] = None
        workflows: Optional[Workflows] = None
        primary_repositories: Optional[PrimaryRepositories] = None
        additional_repositories: Optional[AdditionalRepositories] = None
        build_runs: Optional[BuildRuns] = None

    id: str
    type: Literal["ciProducts"] = "ciProducts"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class CiTestResult(ApplaudModel):
    class Attributes(ApplaudModel):
        class DestinationTestResult(ApplaudModel):
            uuid: Optional[str] = None
            device_name: Optional[str] = None
            os_version: Optional[str] = None
            status: Optional[CiTestStatus] = None
            duration: Optional[float] = None

        class_name: Optional[str] = None
        name: Optional[str] = None
        status: Optional[CiTestStatus] = None
        file_source: Optional[FileLocation] = None
        message: Optional[str] = None
        destination_test_results: Optional[list[DestinationTestResult]] = None

    id: str
    type: Literal["ciTestResults"] = "ciTestResults"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class CiWorkflow(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        description: Optional[str] = None
        branch_start_condition: Optional[CiBranchStartCondition] = None
        tag_start_condition: Optional[CiTagStartCondition] = None
        pull_request_start_condition: Optional[CiPullRequestStartCondition] = None
        scheduled_start_condition: Optional[CiScheduledStartCondition] = None
        manual_branch_start_condition: Optional[CiManualBranchStartCondition] = None
        manual_tag_start_condition: Optional[CiManualTagStartCondition] = None
        manual_pull_request_start_condition: Optional[CiManualPullRequestStartCondition] = None
        actions: Optional[list[CiAction]] = None
        is_enabled: Optional[bool] = None
        is_locked_for_editing: Optional[bool] = None
        clean: Optional[bool] = None
        container_file_path: Optional[str] = None
        last_modified_date: Optional[datetime.datetime] = None

    class Relationships(ApplaudModel):
        class Product(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["ciProducts"] = "ciProducts"

            data: Optional[Data] = None

        class Repository(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["scmRepositories"] = "scmRepositories"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class XcodeVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["ciXcodeVersions"] = "ciXcodeVersions"

            data: Optional[Data] = None

        class MacOsVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["ciMacOsVersions"] = "ciMacOsVersions"

            data: Optional[Data] = None

        class BuildRuns(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        product: Optional[Product] = None
        repository: Optional[Repository] = None
        xcode_version: Optional[XcodeVersion] = None
        mac_os_version: Optional[MacOsVersion] = None
        build_runs: Optional[BuildRuns] = None

    id: str
    type: Literal["ciWorkflows"] = "ciWorkflows"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class CiXcodeVersion(ApplaudModel):
    class Attributes(ApplaudModel):
        class TestDestination(ApplaudModel):
            class AvailableRuntime(ApplaudModel):
                runtime_name: Optional[str] = None
                runtime_identifier: Optional[str] = None

            device_type_name: Optional[str] = None
            device_type_identifier: Optional[str] = None
            available_runtimes: Optional[list[AvailableRuntime]] = None
            kind: Optional[CiTestDestinationKind] = None

        version: Optional[str] = None
        name: Optional[str] = None
        test_destinations: Optional[list[TestDestination]] = None

    class Relationships(ApplaudModel):
        class MacOsVersions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["ciMacOsVersions"] = "ciMacOsVersions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        mac_os_versions: Optional[MacOsVersions] = None

    id: str
    type: Literal["ciXcodeVersions"] = "ciXcodeVersions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class CustomerReviewResponseV1(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            PUBLISHED = 'PUBLISHED'
            PENDING_PUBLISH = 'PENDING_PUBLISH'

        response_body: Optional[str] = None
        last_modified_date: Optional[datetime.datetime] = None
        state: Optional[State] = None

    class Relationships(ApplaudModel):
        class Review(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["customerReviews"] = "customerReviews"

            data: Optional[Data] = None

        review: Optional[Review] = None

    id: str
    type: Literal["customerReviewResponses"] = "customerReviewResponses"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class CustomerReviewSummarization(ApplaudModel):
    class Attributes(ApplaudModel):
        created_date: Optional[datetime.datetime] = None
        locale: Optional[str] = None
        platform: Optional[Platform] = None
        text: Optional[str] = None

    class Relationships(ApplaudModel):
        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        territory: Optional[Territory] = None

    id: str
    type: Literal["customerReviewSummarizations"] = "customerReviewSummarizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class CustomerReview(ApplaudModel):
    class Attributes(ApplaudModel):
        rating: Optional[int] = None
        title: Optional[str] = None
        body: Optional[str] = None
        reviewer_nickname: Optional[str] = None
        created_date: Optional[datetime.datetime] = None
        territory: Optional[TerritoryCode] = None

    class Relationships(ApplaudModel):
        class Response(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["customerReviewResponses"] = "customerReviewResponses"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        response: Optional[Response] = None

    id: str
    type: Literal["customerReviews"] = "customerReviews"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class DiagnosticLog(ApplaudModel):
    id: str
    type: Literal["diagnosticLogs"] = "diagnosticLogs"
    links: Optional[ResourceLinks] = None

class DiagnosticSignature(ApplaudModel):
    class Attributes(ApplaudModel):
        diagnostic_type: Optional[DiagnosticType] = None
        signature: Optional[str] = None
        weight: Optional[float] = None
        insight: Optional[DiagnosticInsight] = None

    class Relationships(ApplaudModel):
        class Logs(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        logs: Optional[Logs] = None

    id: str
    type: Literal["diagnosticSignatures"] = "diagnosticSignatures"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class EndAppAvailabilityPreOrder(ApplaudModel):
    id: str
    type: Literal["endAppAvailabilityPreOrders"] = "endAppAvailabilityPreOrders"
    links: Optional[ResourceLinks] = None

class EndUserLicenseAgreement(ApplaudModel):
    class Attributes(ApplaudModel):
        agreement_text: Optional[str] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            data: Optional[Data] = None

        class Territories(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app: Optional[App] = None
        territories: Optional[Territories] = None

    id: str
    type: Literal["endUserLicenseAgreements"] = "endUserLicenseAgreements"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterAchievementImage(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        image_asset: Optional[ImageAsset] = None
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = None

    class Relationships(ApplaudModel):
        class GameCenterAchievementLocalization(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterAchievementLocalizations"] = "gameCenterAchievementLocalizations"

            data: Optional[Data] = None

        game_center_achievement_localization: Optional[GameCenterAchievementLocalization] = None

    id: str
    type: Literal["gameCenterAchievementImages"] = "gameCenterAchievementImages"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterAchievementLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        locale: Optional[str] = None
        name: Optional[str] = None
        before_earned_description: Optional[str] = None
        after_earned_description: Optional[str] = None

    class Relationships(ApplaudModel):
        class GameCenterAchievement(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterAchievements"] = "gameCenterAchievements"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class GameCenterAchievementImage(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterAchievementImages"] = "gameCenterAchievementImages"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        game_center_achievement: Optional[GameCenterAchievement] = None
        game_center_achievement_image: Optional[GameCenterAchievementImage] = None

    id: str
    type: Literal["gameCenterAchievementLocalizations"] = "gameCenterAchievementLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterAchievementRelease(ApplaudModel):
    class Attributes(ApplaudModel):
        live: Optional[bool] = None

    class Relationships(ApplaudModel):
        class GameCenterDetail(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterDetails"] = "gameCenterDetails"

            data: Optional[Data] = None

        class GameCenterAchievement(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterAchievements"] = "gameCenterAchievements"

            data: Optional[Data] = None

        game_center_detail: Optional[GameCenterDetail] = None
        game_center_achievement: Optional[GameCenterAchievement] = None

    id: str
    type: Literal["gameCenterAchievementReleases"] = "gameCenterAchievementReleases"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterAchievement(ApplaudModel):
    class Attributes(ApplaudModel):
        reference_name: Optional[str] = None
        vendor_identifier: Optional[str] = None
        points: Optional[int] = None
        show_before_earned: Optional[bool] = None
        repeatable: Optional[bool] = None
        archived: Optional[bool] = None
        activity_properties: Optional[StringToStringMap] = None

    class Relationships(ApplaudModel):
        class GameCenterDetail(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterDetails"] = "gameCenterDetails"

            data: Optional[Data] = None

        class GameCenterGroup(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterGroups"] = "gameCenterGroups"

            data: Optional[Data] = None

        @deprecated
        class GroupAchievement(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterAchievements"] = "gameCenterAchievements"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class Localizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterAchievementLocalizations"] = "gameCenterAchievementLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Releases(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterAchievementReleases"] = "gameCenterAchievementReleases"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Activity(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterActivities"] = "gameCenterActivities"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        game_center_detail: Optional[GameCenterDetail] = None
        game_center_group: Optional[GameCenterGroup] = None
        group_achievement: Optional[GroupAchievement] = Field(None, deprecated=True)
        localizations: Optional[Localizations] = None
        releases: Optional[Releases] = None
        activity: Optional[Activity] = None

    id: str
    type: Literal["gameCenterAchievements"] = "gameCenterAchievements"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterActivity(ApplaudModel):
    class Attributes(ApplaudModel):
        class PlayStyle(StringEnum):
            ASYNCHRONOUS = 'ASYNCHRONOUS'
            SYNCHRONOUS = 'SYNCHRONOUS'

        reference_name: Optional[str] = None
        vendor_identifier: Optional[str] = None
        play_style: Optional[PlayStyle] = None
        minimum_players_count: Optional[int] = None
        maximum_players_count: Optional[int] = None
        supports_party_code: Optional[bool] = None
        archived: Optional[bool] = None
        properties: Optional[StringToStringMap] = None

    class Relationships(ApplaudModel):
        class GameCenterDetail(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterDetails"] = "gameCenterDetails"

            data: Optional[Data] = None

        class GameCenterGroup(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterGroups"] = "gameCenterGroups"

            data: Optional[Data] = None

        class Achievements(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterAchievements"] = "gameCenterAchievements"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Leaderboards(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Versions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterActivityVersions"] = "gameCenterActivityVersions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        game_center_detail: Optional[GameCenterDetail] = None
        game_center_group: Optional[GameCenterGroup] = None
        achievements: Optional[Achievements] = None
        leaderboards: Optional[Leaderboards] = None
        versions: Optional[Versions] = None

    id: str
    type: Literal["gameCenterActivities"] = "gameCenterActivities"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterActivityImage(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        image_asset: Optional[ImageAsset] = None
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = None

    id: str
    type: Literal["gameCenterActivityImages"] = "gameCenterActivityImages"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class GameCenterActivityLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        locale: Optional[str] = None
        name: Optional[str] = None
        description: Optional[str] = None

    class Relationships(ApplaudModel):
        class Version(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterActivityVersions"] = "gameCenterActivityVersions"

            data: Optional[Data] = None

        class Image(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterActivityImages"] = "gameCenterActivityImages"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        version: Optional[Version] = None
        image: Optional[Image] = None

    id: str
    type: Literal["gameCenterActivityLocalizations"] = "gameCenterActivityLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterActivityVersionRelease(ApplaudModel):
    class Relationships(ApplaudModel):
        class Version(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterActivityVersions"] = "gameCenterActivityVersions"

            data: Optional[Data] = None

        version: Optional[Version] = None

    id: str
    type: Literal["gameCenterActivityVersionReleases"] = "gameCenterActivityVersionReleases"
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterActivityVersion(ApplaudModel):
    class Attributes(ApplaudModel):
        version: Optional[int] = None
        state: Optional[GameCenterVersionState] = None
        fallback_url: Optional[str] = None

    class Relationships(ApplaudModel):
        class Activity(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterActivities"] = "gameCenterActivities"

            data: Optional[Data] = None

        class Localizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterActivityLocalizations"] = "gameCenterActivityLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class DefaultImage(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterActivityImages"] = "gameCenterActivityImages"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class Releases(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterActivityVersionReleases"] = "gameCenterActivityVersionReleases"

            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        activity: Optional[Activity] = None
        localizations: Optional[Localizations] = None
        default_image: Optional[DefaultImage] = None
        releases: Optional[Releases] = None

    id: str
    type: Literal["gameCenterActivityVersions"] = "gameCenterActivityVersions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterAppVersion(ApplaudModel):
    class Attributes(ApplaudModel):
        enabled: Optional[bool] = None

    class Relationships(ApplaudModel):
        class CompatibilityVersions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterAppVersions"] = "gameCenterAppVersions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppStoreVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersions"] = "appStoreVersions"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        compatibility_versions: Optional[CompatibilityVersions] = None
        app_store_version: Optional[AppStoreVersion] = None

    id: str
    type: Literal["gameCenterAppVersions"] = "gameCenterAppVersions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterChallengeImage(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        image_asset: Optional[ImageAsset] = None
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = None

    id: str
    type: Literal["gameCenterChallengeImages"] = "gameCenterChallengeImages"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class GameCenterChallengeLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        locale: Optional[str] = None
        name: Optional[str] = None
        description: Optional[str] = None

    class Relationships(ApplaudModel):
        class Version(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterChallengeVersions"] = "gameCenterChallengeVersions"

            data: Optional[Data] = None

        class Image(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterChallengeImages"] = "gameCenterChallengeImages"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        version: Optional[Version] = None
        image: Optional[Image] = None

    id: str
    type: Literal["gameCenterChallengeLocalizations"] = "gameCenterChallengeLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterChallengeVersionRelease(ApplaudModel):
    class Relationships(ApplaudModel):
        class Version(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterChallengeVersions"] = "gameCenterChallengeVersions"

            data: Optional[Data] = None

        version: Optional[Version] = None

    id: str
    type: Literal["gameCenterChallengeVersionReleases"] = "gameCenterChallengeVersionReleases"
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterChallengeVersion(ApplaudModel):
    class Attributes(ApplaudModel):
        version: Optional[int] = None
        state: Optional[GameCenterVersionState] = None

    class Relationships(ApplaudModel):
        class Challenge(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterChallenges"] = "gameCenterChallenges"

            data: Optional[Data] = None

        class Localizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterChallengeLocalizations"] = "gameCenterChallengeLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Releases(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterChallengeVersionReleases"] = "gameCenterChallengeVersionReleases"

            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class DefaultImage(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterChallengeImages"] = "gameCenterChallengeImages"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        challenge: Optional[Challenge] = None
        localizations: Optional[Localizations] = None
        releases: Optional[Releases] = None
        default_image: Optional[DefaultImage] = None

    id: str
    type: Literal["gameCenterChallengeVersions"] = "gameCenterChallengeVersions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterChallenge(ApplaudModel):
    class Attributes(ApplaudModel):
        class ChallengeType(StringEnum):
            LEADERBOARD = 'LEADERBOARD'

        reference_name: Optional[str] = None
        vendor_identifier: Optional[str] = None
        archived: Optional[bool] = None
        challenge_type: Literal[ChallengeType.LEADERBOARD] = ChallengeType.LEADERBOARD
        repeatable: Optional[bool] = None

    class Relationships(ApplaudModel):
        class GameCenterDetail(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterDetails"] = "gameCenterDetails"

            data: Optional[Data] = None

        class GameCenterGroup(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterGroups"] = "gameCenterGroups"

            data: Optional[Data] = None

        class Versions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterChallengeVersions"] = "gameCenterChallengeVersions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Leaderboard(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        game_center_detail: Optional[GameCenterDetail] = None
        game_center_group: Optional[GameCenterGroup] = None
        versions: Optional[Versions] = None
        leaderboard: Optional[Leaderboard] = None

    id: str
    type: Literal["gameCenterChallenges"] = "gameCenterChallenges"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterDetail(ApplaudModel):
    class Attributes(ApplaudModel):
        arcade_enabled: Optional[bool] = None
        challenge_enabled: Optional[bool] = Field(None, deprecated=True)

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            data: Optional[Data] = None

        class GameCenterAppVersions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterAppVersions"] = "gameCenterAppVersions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class GameCenterGroup(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterGroups"] = "gameCenterGroups"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class GameCenterLeaderboards(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class GameCenterLeaderboardSets(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardSets"] = "gameCenterLeaderboardSets"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class GameCenterAchievements(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterAchievements"] = "gameCenterAchievements"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class GameCenterActivities(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterActivities"] = "gameCenterActivities"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class GameCenterChallenges(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterChallenges"] = "gameCenterChallenges"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class DefaultLeaderboard(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

            data: Optional[Data] = None

        class DefaultGroupLeaderboard(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

            data: Optional[Data] = None

        class AchievementReleases(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterAchievementReleases"] = "gameCenterAchievementReleases"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class ActivityReleases(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterActivityVersionReleases"] = "gameCenterActivityVersionReleases"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class ChallengeReleases(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterChallengeVersionReleases"] = "gameCenterChallengeVersionReleases"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class LeaderboardReleases(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardReleases"] = "gameCenterLeaderboardReleases"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class LeaderboardSetReleases(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardSetReleases"] = "gameCenterLeaderboardSetReleases"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class ChallengesMinimumPlatformVersions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersions"] = "appStoreVersions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        app: Optional[App] = None
        game_center_app_versions: Optional[GameCenterAppVersions] = None
        game_center_group: Optional[GameCenterGroup] = None
        game_center_leaderboards: Optional[GameCenterLeaderboards] = None
        game_center_leaderboard_sets: Optional[GameCenterLeaderboardSets] = None
        game_center_achievements: Optional[GameCenterAchievements] = None
        game_center_activities: Optional[GameCenterActivities] = None
        game_center_challenges: Optional[GameCenterChallenges] = None
        default_leaderboard: Optional[DefaultLeaderboard] = None
        default_group_leaderboard: Optional[DefaultGroupLeaderboard] = None
        achievement_releases: Optional[AchievementReleases] = None
        activity_releases: Optional[ActivityReleases] = None
        challenge_releases: Optional[ChallengeReleases] = None
        leaderboard_releases: Optional[LeaderboardReleases] = None
        leaderboard_set_releases: Optional[LeaderboardSetReleases] = None
        challenges_minimum_platform_versions: Optional[ChallengesMinimumPlatformVersions] = None

    id: str
    type: Literal["gameCenterDetails"] = "gameCenterDetails"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

@deprecated
class GameCenterEnabledVersion(ApplaudModel):
    class Attributes(ApplaudModel):
        platform: Optional[Platform] = None
        version_string: Optional[str] = None
        icon_asset: Optional[ImageAsset] = None

    class Relationships(ApplaudModel):
        class CompatibleVersions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterEnabledVersions"] = "gameCenterEnabledVersions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            data: Optional[Data] = None

        compatible_versions: Optional[CompatibleVersions] = None
        app: Optional[App] = None

    id: str
    type: Literal["gameCenterEnabledVersions"] = "gameCenterEnabledVersions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterGroup(ApplaudModel):
    class Attributes(ApplaudModel):
        reference_name: Optional[str] = None

    class Relationships(ApplaudModel):
        class GameCenterDetails(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterDetails"] = "gameCenterDetails"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class GameCenterLeaderboards(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class GameCenterLeaderboardSets(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardSets"] = "gameCenterLeaderboardSets"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class GameCenterAchievements(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterAchievements"] = "gameCenterAchievements"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class GameCenterActivities(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterActivities"] = "gameCenterActivities"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class GameCenterChallenges(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterChallenges"] = "gameCenterChallenges"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        game_center_details: Optional[GameCenterDetails] = None
        game_center_leaderboards: Optional[GameCenterLeaderboards] = None
        game_center_leaderboard_sets: Optional[GameCenterLeaderboardSets] = None
        game_center_achievements: Optional[GameCenterAchievements] = None
        game_center_activities: Optional[GameCenterActivities] = None
        game_center_challenges: Optional[GameCenterChallenges] = None

    id: str
    type: Literal["gameCenterGroups"] = "gameCenterGroups"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterLeaderboardEntrySubmission(ApplaudModel):
    class Attributes(ApplaudModel):
        bundle_id: Optional[str] = None
        challenge_ids: Optional[list[str]] = None
        context: Optional[str] = None
        scoped_player_id: Optional[str] = None
        score: Optional[str] = None
        submitted_date: Optional[datetime.datetime] = None
        vendor_identifier: Optional[str] = None

    id: str
    type: Literal["gameCenterLeaderboardEntrySubmissions"] = "gameCenterLeaderboardEntrySubmissions"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class GameCenterLeaderboardImage(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        image_asset: Optional[ImageAsset] = None
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = None

    class Relationships(ApplaudModel):
        class GameCenterLeaderboardLocalization(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardLocalizations"] = "gameCenterLeaderboardLocalizations"

            data: Optional[Data] = None

        game_center_leaderboard_localization: Optional[GameCenterLeaderboardLocalization] = None

    id: str
    type: Literal["gameCenterLeaderboardImages"] = "gameCenterLeaderboardImages"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterLeaderboardLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        locale: Optional[str] = None
        name: Optional[str] = None
        formatter_override: Optional[GameCenterLeaderboardFormatter] = None
        formatter_suffix: Optional[str] = None
        formatter_suffix_singular: Optional[str] = None
        description: Optional[str] = None

    class Relationships(ApplaudModel):
        class GameCenterLeaderboard(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

            data: Optional[Data] = None

        class GameCenterLeaderboardImage(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardImages"] = "gameCenterLeaderboardImages"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        game_center_leaderboard: Optional[GameCenterLeaderboard] = None
        game_center_leaderboard_image: Optional[GameCenterLeaderboardImage] = None

    id: str
    type: Literal["gameCenterLeaderboardLocalizations"] = "gameCenterLeaderboardLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterLeaderboardRelease(ApplaudModel):
    class Attributes(ApplaudModel):
        live: Optional[bool] = None

    class Relationships(ApplaudModel):
        class GameCenterDetail(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterDetails"] = "gameCenterDetails"

            data: Optional[Data] = None

        class GameCenterLeaderboard(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

            data: Optional[Data] = None

        game_center_detail: Optional[GameCenterDetail] = None
        game_center_leaderboard: Optional[GameCenterLeaderboard] = None

    id: str
    type: Literal["gameCenterLeaderboardReleases"] = "gameCenterLeaderboardReleases"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterLeaderboardSetImage(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        image_asset: Optional[ImageAsset] = None
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = None

    class Relationships(ApplaudModel):
        class GameCenterLeaderboardSetLocalization(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardSetLocalizations"] = "gameCenterLeaderboardSetLocalizations"

            data: Optional[Data] = None

        game_center_leaderboard_set_localization: Optional[GameCenterLeaderboardSetLocalization] = None

    id: str
    type: Literal["gameCenterLeaderboardSetImages"] = "gameCenterLeaderboardSetImages"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterLeaderboardSetLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        locale: Optional[str] = None
        name: Optional[str] = None

    class Relationships(ApplaudModel):
        class GameCenterLeaderboardSet(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardSets"] = "gameCenterLeaderboardSets"

            data: Optional[Data] = None

        class GameCenterLeaderboardSetImage(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardSetImages"] = "gameCenterLeaderboardSetImages"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        game_center_leaderboard_set: Optional[GameCenterLeaderboardSet] = None
        game_center_leaderboard_set_image: Optional[GameCenterLeaderboardSetImage] = None

    id: str
    type: Literal["gameCenterLeaderboardSetLocalizations"] = "gameCenterLeaderboardSetLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterLeaderboardSetMemberLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        locale: Optional[str] = None

    class Relationships(ApplaudModel):
        class GameCenterLeaderboardSet(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardSets"] = "gameCenterLeaderboardSets"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class GameCenterLeaderboard(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        game_center_leaderboard_set: Optional[GameCenterLeaderboardSet] = None
        game_center_leaderboard: Optional[GameCenterLeaderboard] = None

    id: str
    type: Literal["gameCenterLeaderboardSetMemberLocalizations"] = "gameCenterLeaderboardSetMemberLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterLeaderboardSetRelease(ApplaudModel):
    class Attributes(ApplaudModel):
        live: Optional[bool] = None

    class Relationships(ApplaudModel):
        class GameCenterDetail(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterDetails"] = "gameCenterDetails"

            data: Optional[Data] = None

        class GameCenterLeaderboardSet(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardSets"] = "gameCenterLeaderboardSets"

            data: Optional[Data] = None

        game_center_detail: Optional[GameCenterDetail] = None
        game_center_leaderboard_set: Optional[GameCenterLeaderboardSet] = None

    id: str
    type: Literal["gameCenterLeaderboardSetReleases"] = "gameCenterLeaderboardSetReleases"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterLeaderboardSet(ApplaudModel):
    class Attributes(ApplaudModel):
        reference_name: Optional[str] = None
        vendor_identifier: Optional[str] = None

    class Relationships(ApplaudModel):
        class GameCenterDetail(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterDetails"] = "gameCenterDetails"

            data: Optional[Data] = None

        class GameCenterGroup(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterGroups"] = "gameCenterGroups"

            data: Optional[Data] = None

        @deprecated
        class GroupLeaderboardSet(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardSets"] = "gameCenterLeaderboardSets"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class Localizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardSetLocalizations"] = "gameCenterLeaderboardSetLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class GameCenterLeaderboards(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Releases(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardSetReleases"] = "gameCenterLeaderboardSetReleases"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        game_center_detail: Optional[GameCenterDetail] = None
        game_center_group: Optional[GameCenterGroup] = None
        group_leaderboard_set: Optional[GroupLeaderboardSet] = Field(None, deprecated=True)
        localizations: Optional[Localizations] = None
        game_center_leaderboards: Optional[GameCenterLeaderboards] = None
        releases: Optional[Releases] = None

    id: str
    type: Literal["gameCenterLeaderboardSets"] = "gameCenterLeaderboardSets"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterLeaderboard(ApplaudModel):
    class Attributes(ApplaudModel):
        class SubmissionType(StringEnum):
            BEST_SCORE = 'BEST_SCORE'
            MOST_RECENT_SCORE = 'MOST_RECENT_SCORE'

        class ScoreSortType(StringEnum):
            ASC = 'ASC'
            DESC = 'DESC'

        class Visibility(StringEnum):
            SHOW_FOR_ALL = 'SHOW_FOR_ALL'
            HIDE_FOR_ALL = 'HIDE_FOR_ALL'

        default_formatter: Optional[GameCenterLeaderboardFormatter] = None
        reference_name: Optional[str] = None
        vendor_identifier: Optional[str] = None
        submission_type: Optional[SubmissionType] = None
        score_sort_type: Optional[ScoreSortType] = None
        score_range_start: Optional[str] = None
        score_range_end: Optional[str] = None
        recurrence_start_date: Optional[datetime.datetime] = None
        recurrence_duration: Optional[str] = None
        recurrence_rule: Optional[str] = None
        archived: Optional[bool] = None
        activity_properties: Optional[StringToStringMap] = None
        visibility: Optional[Visibility] = None

    class Relationships(ApplaudModel):
        class GameCenterDetail(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterDetails"] = "gameCenterDetails"

            data: Optional[Data] = None

        class GameCenterGroup(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterGroups"] = "gameCenterGroups"

            data: Optional[Data] = None

        @deprecated
        class GroupLeaderboard(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class GameCenterLeaderboardSets(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardSets"] = "gameCenterLeaderboardSets"

            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Localizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardLocalizations"] = "gameCenterLeaderboardLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Releases(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterLeaderboardReleases"] = "gameCenterLeaderboardReleases"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Activity(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterActivities"] = "gameCenterActivities"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class Challenge(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterChallenges"] = "gameCenterChallenges"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        game_center_detail: Optional[GameCenterDetail] = None
        game_center_group: Optional[GameCenterGroup] = None
        group_leaderboard: Optional[GroupLeaderboard] = Field(None, deprecated=True)
        game_center_leaderboard_sets: Optional[GameCenterLeaderboardSets] = None
        localizations: Optional[Localizations] = None
        releases: Optional[Releases] = None
        activity: Optional[Activity] = None
        challenge: Optional[Challenge] = None

    id: str
    type: Literal["gameCenterLeaderboards"] = "gameCenterLeaderboards"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterMatchmakingQueue(ApplaudModel):
    class Attributes(ApplaudModel):
        reference_name: Optional[str] = None
        classic_matchmaking_bundle_ids: Optional[list[str]] = None

    class Relationships(ApplaudModel):
        class RuleSet(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterMatchmakingRuleSets"] = "gameCenterMatchmakingRuleSets"

            data: Optional[Data] = None

        class ExperimentRuleSet(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterMatchmakingRuleSets"] = "gameCenterMatchmakingRuleSets"

            data: Optional[Data] = None

        rule_set: Optional[RuleSet] = None
        experiment_rule_set: Optional[ExperimentRuleSet] = None

    id: str
    type: Literal["gameCenterMatchmakingQueues"] = "gameCenterMatchmakingQueues"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterMatchmakingRuleSetTest(ApplaudModel):
    class Attributes(ApplaudModel):
        matchmaking_results: Optional[list[MatchmakingResult]] = None

    id: str
    type: Literal["gameCenterMatchmakingRuleSetTests"] = "gameCenterMatchmakingRuleSetTests"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class GameCenterMatchmakingRuleSet(ApplaudModel):
    class Attributes(ApplaudModel):
        reference_name: Optional[str] = None
        rule_language_version: Optional[int] = None
        min_players: Optional[int] = None
        max_players: Optional[int] = None

    class Relationships(ApplaudModel):
        class Teams(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterMatchmakingTeams"] = "gameCenterMatchmakingTeams"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Rules(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterMatchmakingRules"] = "gameCenterMatchmakingRules"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class MatchmakingQueues(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterMatchmakingQueues"] = "gameCenterMatchmakingQueues"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        teams: Optional[Teams] = None
        rules: Optional[Rules] = None
        matchmaking_queues: Optional[MatchmakingQueues] = None

    id: str
    type: Literal["gameCenterMatchmakingRuleSets"] = "gameCenterMatchmakingRuleSets"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class GameCenterMatchmakingRule(ApplaudModel):
    class Attributes(ApplaudModel):
        class Type(StringEnum):
            COMPATIBLE = 'COMPATIBLE'
            DISTANCE = 'DISTANCE'
            MATCH = 'MATCH'
            TEAM = 'TEAM'

        reference_name: Optional[str] = None
        description: Optional[str] = None
        type: Optional[Type] = None
        expression: Optional[str] = None
        weight: Optional[float] = None

    id: str
    type: Literal["gameCenterMatchmakingRules"] = "gameCenterMatchmakingRules"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class GameCenterMatchmakingTeam(ApplaudModel):
    class Attributes(ApplaudModel):
        reference_name: Optional[str] = None
        min_players: Optional[int] = None
        max_players: Optional[int] = None

    id: str
    type: Literal["gameCenterMatchmakingTeams"] = "gameCenterMatchmakingTeams"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class GameCenterMatchmakingTestPlayerProperty(ApplaudModel):
    id: str
    type: Literal["gameCenterMatchmakingTestPlayerProperties"] = "gameCenterMatchmakingTestPlayerProperties"
    links: Optional[ResourceLinks] = None

class GameCenterMatchmakingTestPlayerPropertyInlineCreate(ApplaudModel):
    class Attributes(ApplaudModel):
        player_id: str
        properties: Optional[list[Property]] = None

    attributes: Attributes
    type: Literal["gameCenterMatchmakingTestPlayerProperties"] = "gameCenterMatchmakingTestPlayerProperties"
    id: Optional[str] = None

class GameCenterMatchmakingTestRequestInlineCreate(ApplaudModel):
    class Attributes(ApplaudModel):
        class Locale(StringEnum):
            AR_SA = 'AR-SA'
            CA_ES = 'CA-ES'
            CS_CZ = 'CS-CZ'
            DA_DK = 'DA-DK'
            DE_DE = 'DE-DE'
            EL_GR = 'EL-GR'
            EN_AU = 'EN-AU'
            EN_GB = 'EN-GB'
            EN_US = 'EN-US'
            EN_KY = 'EN-KY'
            ES_ES = 'ES-ES'
            ES_MX = 'ES-MX'
            FI_FI = 'FI-FI'
            FR_CA = 'FR-CA'
            FR_FR = 'FR-FR'
            HI_IN = 'HI-IN'
            HR_HR = 'HR-HR'
            HU_HU = 'HU-HU'
            ID_ID = 'ID-ID'
            IT_IT = 'IT-IT'
            IW_IL = 'IW-IL'
            JA_JP = 'JA-JP'
            KO_KR = 'KO-KR'
            MS_MY = 'MS-MY'
            NL_NL = 'NL-NL'
            NO_NO = 'NO-NO'
            PL_PL = 'PL-PL'
            PT_BR = 'PT-BR'
            PT_PT = 'PT-PT'
            RO_RO = 'RO-RO'
            RU_RU = 'RU-RU'
            SK_SK = 'SK-SK'
            SV_SE = 'SV-SE'
            TH_TH = 'TH-TH'
            TR_TR = 'TR-TR'
            UK_UA = 'UK-UA'
            ZH_CN = 'ZH-CN'
            ZH_TW = 'ZH-TW'
            ZH_HK = 'ZH-HK'

        request_name: str
        app_version: str
        seconds_in_queue: int
        bundle_id: str
        platform: Platform
        locale: Optional[Locale] = None
        location: Optional[Location] = None
        min_players: Optional[int] = None
        max_players: Optional[int] = None
        player_count: Optional[int] = None

    class Relationships(ApplaudModel):
        class MatchmakingPlayerProperties(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["gameCenterMatchmakingTestPlayerProperties"] = "gameCenterMatchmakingTestPlayerProperties"

            data: Optional[list[Data]] = None

        matchmaking_player_properties: Optional[MatchmakingPlayerProperties] = None

    attributes: Attributes
    type: Literal["gameCenterMatchmakingTestRequests"] = "gameCenterMatchmakingTestRequests"
    id: Optional[str] = None
    relationships: Optional[Relationships] = None

class GameCenterPlayerAchievementSubmission(ApplaudModel):
    class Attributes(ApplaudModel):
        bundle_id: Optional[str] = None
        challenge_ids: Optional[list[str]] = None
        percentage_achieved: Optional[int] = None
        scoped_player_id: Optional[str] = None
        submitted_date: Optional[datetime.datetime] = None
        vendor_identifier: Optional[str] = None

    id: str
    type: Literal["gameCenterPlayerAchievementSubmissions"] = "gameCenterPlayerAchievementSubmissions"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class InAppPurchaseAppStoreReviewScreenshot(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        source_file_checksum: Optional[str] = None
        image_asset: Optional[ImageAsset] = None
        asset_token: Optional[str] = None
        asset_type: Optional[str] = None
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = None

    class Relationships(ApplaudModel):
        class InAppPurchaseV2(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchases"] = "inAppPurchases"

            data: Optional[Data] = None

        in_app_purchase_v2: Optional[InAppPurchaseV2] = None

    id: str
    type: Literal["inAppPurchaseAppStoreReviewScreenshots"] = "inAppPurchaseAppStoreReviewScreenshots"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class InAppPurchaseAvailability(ApplaudModel):
    class Attributes(ApplaudModel):
        available_in_new_territories: Optional[bool] = None

    class Relationships(ApplaudModel):
        class AvailableTerritories(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        available_territories: Optional[AvailableTerritories] = None

    id: str
    type: Literal["inAppPurchaseAvailabilities"] = "inAppPurchaseAvailabilities"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class InAppPurchaseContent(ApplaudModel):
    class Attributes(ApplaudModel):
        file_name: Optional[str] = None
        file_size: Optional[int] = None
        url: Optional[AnyUrl] = None
        last_modified_date: Optional[datetime.datetime] = None

    class Relationships(ApplaudModel):
        class InAppPurchaseV2(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchases"] = "inAppPurchases"

            data: Optional[Data] = None

        in_app_purchase_v2: Optional[InAppPurchaseV2] = None

    id: str
    type: Literal["inAppPurchaseContents"] = "inAppPurchaseContents"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class InAppPurchaseImage(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            AWAITING_UPLOAD = 'AWAITING_UPLOAD'
            UPLOAD_COMPLETE = 'UPLOAD_COMPLETE'
            FAILED = 'FAILED'
            PREPARE_FOR_SUBMISSION = 'PREPARE_FOR_SUBMISSION'
            WAITING_FOR_REVIEW = 'WAITING_FOR_REVIEW'
            APPROVED = 'APPROVED'
            REJECTED = 'REJECTED'

        file_size: Optional[int] = None
        file_name: Optional[str] = None
        source_file_checksum: Optional[str] = None
        asset_token: Optional[str] = None
        image_asset: Optional[ImageAsset] = None
        upload_operations: Optional[list[UploadOperation]] = None
        state: Optional[State] = None

    class Relationships(ApplaudModel):
        class InAppPurchase(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchases"] = "inAppPurchases"

            data: Optional[Data] = None

        in_app_purchase: Optional[InAppPurchase] = None

    id: str
    type: Literal["inAppPurchaseImages"] = "inAppPurchaseImages"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class InAppPurchaseLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            PREPARE_FOR_SUBMISSION = 'PREPARE_FOR_SUBMISSION'
            WAITING_FOR_REVIEW = 'WAITING_FOR_REVIEW'
            APPROVED = 'APPROVED'
            REJECTED = 'REJECTED'

        name: Optional[str] = None
        locale: Optional[str] = None
        description: Optional[str] = None
        state: Optional[State] = None

    class Relationships(ApplaudModel):
        class InAppPurchaseV2(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchases"] = "inAppPurchases"

            data: Optional[Data] = None

        in_app_purchase_v2: Optional[InAppPurchaseV2] = None

    id: str
    type: Literal["inAppPurchaseLocalizations"] = "inAppPurchaseLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class InAppPurchasePricePoint(ApplaudModel):
    class Attributes(ApplaudModel):
        customer_price: Optional[str] = None
        proceeds: Optional[str] = None

    class Relationships(ApplaudModel):
        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        class Equalizations(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        territory: Optional[Territory] = None
        equalizations: Optional[Equalizations] = None

    id: str
    type: Literal["inAppPurchasePricePoints"] = "inAppPurchasePricePoints"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class InAppPurchasePriceSchedule(ApplaudModel):
    class Relationships(ApplaudModel):
        class BaseTerritory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class ManualPrices(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchasePrices"] = "inAppPurchasePrices"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AutomaticPrices(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchasePrices"] = "inAppPurchasePrices"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        base_territory: Optional[BaseTerritory] = None
        manual_prices: Optional[ManualPrices] = None
        automatic_prices: Optional[AutomaticPrices] = None

    id: str
    type: Literal["inAppPurchasePriceSchedules"] = "inAppPurchasePriceSchedules"
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class InAppPurchasePrice(ApplaudModel):
    class Attributes(ApplaudModel):
        start_date: Optional[datetime.date] = None
        end_date: Optional[datetime.date] = None
        manual: Optional[bool] = None

    class Relationships(ApplaudModel):
        class InAppPurchasePricePoint(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchasePricePoints"] = "inAppPurchasePricePoints"

            data: Optional[Data] = None

        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        in_app_purchase_price_point: Optional[InAppPurchasePricePoint] = None
        territory: Optional[Territory] = None

    id: str
    type: Literal["inAppPurchasePrices"] = "inAppPurchasePrices"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class InAppPurchasePriceInlineCreate(ApplaudModel):
    class Attributes(ApplaudModel):
        start_date: Optional[datetime.date] = None
        end_date: Optional[datetime.date] = None

    class Relationships(ApplaudModel):
        class InAppPurchaseV2(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchases"] = "inAppPurchases"

            data: Optional[Data] = None

        class InAppPurchasePricePoint(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchasePricePoints"] = "inAppPurchasePricePoints"

            data: Optional[Data] = None

        in_app_purchase_v2: Optional[InAppPurchaseV2] = None
        in_app_purchase_price_point: Optional[InAppPurchasePricePoint] = None

    type: Literal["inAppPurchasePrices"] = "inAppPurchasePrices"
    id: Optional[str] = None
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None

class InAppPurchaseSubmission(ApplaudModel):
    class Relationships(ApplaudModel):
        class InAppPurchaseV2(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchases"] = "inAppPurchases"

            data: Optional[Data] = None

        in_app_purchase_v2: Optional[InAppPurchaseV2] = None

    id: str
    type: Literal["inAppPurchaseSubmissions"] = "inAppPurchaseSubmissions"
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

@deprecated
class InAppPurchase(ApplaudModel):
    class Attributes(ApplaudModel):
        reference_name: Optional[str] = None
        product_id: Optional[str] = None
        in_app_purchase_type: Optional[InAppPurchaseType] = None
        state: Optional[InAppPurchaseState] = None

    class Relationships(ApplaudModel):
        class Apps(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        apps: Optional[Apps] = None

    id: str
    type: Literal["inAppPurchases"] = "inAppPurchases"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class InAppPurchaseV2(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        product_id: Optional[str] = None
        in_app_purchase_type: Optional[InAppPurchaseType] = None
        state: Optional[InAppPurchaseState] = None
        review_note: Optional[str] = None
        family_sharable: Optional[bool] = None
        content_hosting: Optional[bool] = None

    class Relationships(ApplaudModel):
        class InAppPurchaseLocalizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchaseLocalizations"] = "inAppPurchaseLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class PricePoints(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchasePricePoints"] = "inAppPurchasePricePoints"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Content(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchaseContents"] = "inAppPurchaseContents"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class AppStoreReviewScreenshot(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchaseAppStoreReviewScreenshots"] = "inAppPurchaseAppStoreReviewScreenshots"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class PromotedPurchase(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["promotedPurchases"] = "promotedPurchases"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class IapPriceSchedule(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchasePriceSchedules"] = "inAppPurchasePriceSchedules"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class InAppPurchaseAvailability(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchaseAvailabilities"] = "inAppPurchaseAvailabilities"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class Images(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchaseImages"] = "inAppPurchaseImages"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        in_app_purchase_localizations: Optional[InAppPurchaseLocalizations] = None
        price_points: Optional[PricePoints] = None
        content: Optional[Content] = None
        app_store_review_screenshot: Optional[AppStoreReviewScreenshot] = None
        promoted_purchase: Optional[PromotedPurchase] = None
        iap_price_schedule: Optional[IapPriceSchedule] = None
        in_app_purchase_availability: Optional[InAppPurchaseAvailability] = None
        images: Optional[Images] = None

    id: str
    type: Literal["inAppPurchases"] = "inAppPurchases"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class MarketplaceSearchDetail(ApplaudModel):
    class Attributes(ApplaudModel):
        catalog_url: Optional[AnyUrl] = None

    id: str
    type: Literal["marketplaceSearchDetails"] = "marketplaceSearchDetails"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

@deprecated
class MarketplaceWebhook(ApplaudModel):
    class Attributes(ApplaudModel):
        endpoint_url: Optional[AnyUrl] = None

    id: str
    type: Literal["marketplaceWebhooks"] = "marketplaceWebhooks"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class MerchantId(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        identifier: Optional[str] = None

    class Relationships(ApplaudModel):
        class Certificates(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["certificates"] = "certificates"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        certificates: Optional[Certificates] = None

    id: str
    type: Literal["merchantIds"] = "merchantIds"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class Nomination(ApplaudModel):
    class Attributes(ApplaudModel):
        class Type(StringEnum):
            APP_LAUNCH = 'APP_LAUNCH'
            APP_ENHANCEMENTS = 'APP_ENHANCEMENTS'
            NEW_CONTENT = 'NEW_CONTENT'

        class State(StringEnum):
            DRAFT = 'DRAFT'
            SUBMITTED = 'SUBMITTED'
            ARCHIVED = 'ARCHIVED'

        name: Optional[str] = None
        type: Optional[Type] = None
        description: Optional[str] = None
        created_date: Optional[datetime.datetime] = None
        last_modified_date: Optional[datetime.datetime] = None
        submitted_date: Optional[datetime.datetime] = None
        state: Optional[State] = None
        publish_start_date: Optional[datetime.datetime] = None
        publish_end_date: Optional[datetime.datetime] = None
        device_families: Optional[list[DeviceFamily]] = None
        locales: Optional[list[str]] = None
        supplemental_materials_uris: Optional[list[str]] = None
        has_in_app_events: Optional[bool] = None
        launch_in_select_markets_first: Optional[bool] = None
        notes: Optional[str] = None
        pre_order_enabled: Optional[bool] = None

    class Relationships(ApplaudModel):
        class RelatedApps(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class CreatedByActor(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["actors"] = "actors"

            data: Optional[Data] = None

        class LastModifiedByActor(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["actors"] = "actors"

            data: Optional[Data] = None

        class SubmittedByActor(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["actors"] = "actors"

            data: Optional[Data] = None

        class InAppEvents(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appEvents"] = "appEvents"

            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class SupportedTerritories(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        related_apps: Optional[RelatedApps] = None
        created_by_actor: Optional[CreatedByActor] = None
        last_modified_by_actor: Optional[LastModifiedByActor] = None
        submitted_by_actor: Optional[SubmittedByActor] = None
        in_app_events: Optional[InAppEvents] = None
        supported_territories: Optional[SupportedTerritories] = None

    id: str
    type: Literal["nominations"] = "nominations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class PassTypeId(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        identifier: Optional[str] = None

    class Relationships(ApplaudModel):
        class Certificates(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["certificates"] = "certificates"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        certificates: Optional[Certificates] = None

    id: str
    type: Literal["passTypeIds"] = "passTypeIds"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class PerfPowerMetric(ApplaudModel):
    class Attributes(ApplaudModel):
        platform: Literal[PerfPowerMetricPlatform.IOS] = PerfPowerMetricPlatform.IOS
        metric_type: Optional[PerfPowerMetricType] = None
        device_type: Optional[str] = None

    id: str
    type: Literal["perfPowerMetrics"] = "perfPowerMetrics"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class PrereleaseVersion(ApplaudModel):
    class Attributes(ApplaudModel):
        version: Optional[str] = None
        platform: Optional[Platform] = None

    class Relationships(ApplaudModel):
        class Builds(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["builds"] = "builds"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        builds: Optional[Builds] = None
        app: Optional[App] = None

    id: str
    type: Literal["preReleaseVersions"] = "preReleaseVersions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class Profile(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        platform: Optional[BundleIdPlatform] = None
        profile_type: Optional[ProfileType] = None
        profile_state: Optional[ProfileState] = None
        profile_content: Optional[str] = None
        uuid: Optional[str] = None
        created_date: Optional[datetime.datetime] = None
        expiration_date: Optional[datetime.datetime] = None

    class Relationships(ApplaudModel):
        class BundleId(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["bundleIds"] = "bundleIds"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class Devices(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["devices"] = "devices"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Certificates(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["certificates"] = "certificates"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        bundle_id: Optional[BundleId] = None
        devices: Optional[Devices] = None
        certificates: Optional[Certificates] = None

    id: str
    type: Literal["profiles"] = "profiles"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class PromotedPurchase(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            APPROVED = 'APPROVED'
            IN_REVIEW = 'IN_REVIEW'
            PREPARE_FOR_SUBMISSION = 'PREPARE_FOR_SUBMISSION'
            REJECTED = 'REJECTED'

        visible_for_all_users: Optional[bool] = None
        enabled: Optional[bool] = None
        state: Optional[State] = None

    class Relationships(ApplaudModel):
        class InAppPurchaseV2(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["inAppPurchases"] = "inAppPurchases"

            data: Optional[Data] = None

        class Subscription(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptions"] = "subscriptions"

            data: Optional[Data] = None

        in_app_purchase_v2: Optional[InAppPurchaseV2] = None
        subscription: Optional[Subscription] = None

    id: str
    type: Literal["promotedPurchases"] = "promotedPurchases"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class ReviewSubmissionItem(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            READY_FOR_REVIEW = 'READY_FOR_REVIEW'
            ACCEPTED = 'ACCEPTED'
            APPROVED = 'APPROVED'
            REJECTED = 'REJECTED'
            REMOVED = 'REMOVED'

        state: Optional[State] = None

    class Relationships(ApplaudModel):
        class AppStoreVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersions"] = "appStoreVersions"

            data: Optional[Data] = None

        class AppCustomProductPageVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appCustomProductPageVersions"] = "appCustomProductPageVersions"

            data: Optional[Data] = None

        class AppStoreVersionExperiment(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionExperiments"] = "appStoreVersionExperiments"

            data: Optional[Data] = None

        class AppStoreVersionExperimentV2(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersionExperiments"] = "appStoreVersionExperiments"

            data: Optional[Data] = None

        class AppEvent(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appEvents"] = "appEvents"

            data: Optional[Data] = None

        class BackgroundAssetVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["backgroundAssetVersions"] = "backgroundAssetVersions"

            data: Optional[Data] = None

        app_store_version: Optional[AppStoreVersion] = None
        app_custom_product_page_version: Optional[AppCustomProductPageVersion] = None
        app_store_version_experiment: Optional[AppStoreVersionExperiment] = None
        app_store_version_experiment_v2: Optional[AppStoreVersionExperimentV2] = None
        app_event: Optional[AppEvent] = None
        background_asset_version: Optional[BackgroundAssetVersion] = None

    id: str
    type: Literal["reviewSubmissionItems"] = "reviewSubmissionItems"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class ReviewSubmission(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            READY_FOR_REVIEW = 'READY_FOR_REVIEW'
            WAITING_FOR_REVIEW = 'WAITING_FOR_REVIEW'
            IN_REVIEW = 'IN_REVIEW'
            UNRESOLVED_ISSUES = 'UNRESOLVED_ISSUES'
            CANCELING = 'CANCELING'
            COMPLETING = 'COMPLETING'
            COMPLETE = 'COMPLETE'

        platform: Optional[Platform] = None
        submitted_date: Optional[datetime.datetime] = None
        state: Optional[State] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            data: Optional[Data] = None

        class Items(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["reviewSubmissionItems"] = "reviewSubmissionItems"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppStoreVersionForReview(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersions"] = "appStoreVersions"

            data: Optional[Data] = None

        class SubmittedByActor(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["actors"] = "actors"

            data: Optional[Data] = None

        class LastUpdatedByActor(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["actors"] = "actors"

            data: Optional[Data] = None

        app: Optional[App] = None
        items: Optional[Items] = None
        app_store_version_for_review: Optional[AppStoreVersionForReview] = None
        submitted_by_actor: Optional[SubmittedByActor] = None
        last_updated_by_actor: Optional[LastUpdatedByActor] = None

    id: str
    type: Literal["reviewSubmissions"] = "reviewSubmissions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class RoutingAppCoverage(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        source_file_checksum: Optional[str] = None
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = None

    class Relationships(ApplaudModel):
        class AppStoreVersion(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["appStoreVersions"] = "appStoreVersions"

            data: Optional[Data] = None

        app_store_version: Optional[AppStoreVersion] = None

    id: str
    type: Literal["routingAppCoverages"] = "routingAppCoverages"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SandboxTesterV2(ApplaudModel):
    class Attributes(ApplaudModel):
        class SubscriptionRenewalRate(StringEnum):
            MONTHLY_RENEWAL_EVERY_ONE_HOUR = 'MONTHLY_RENEWAL_EVERY_ONE_HOUR'
            MONTHLY_RENEWAL_EVERY_THIRTY_MINUTES = 'MONTHLY_RENEWAL_EVERY_THIRTY_MINUTES'
            MONTHLY_RENEWAL_EVERY_FIFTEEN_MINUTES = 'MONTHLY_RENEWAL_EVERY_FIFTEEN_MINUTES'
            MONTHLY_RENEWAL_EVERY_FIVE_MINUTES = 'MONTHLY_RENEWAL_EVERY_FIVE_MINUTES'
            MONTHLY_RENEWAL_EVERY_THREE_MINUTES = 'MONTHLY_RENEWAL_EVERY_THREE_MINUTES'

        first_name: Optional[str] = None
        last_name: Optional[str] = None
        ac_account_name: Optional[str] = None
        territory: Optional[TerritoryCode] = None
        apple_pay_compatible: Optional[bool] = None
        interrupt_purchases: Optional[bool] = None
        subscription_renewal_rate: Optional[SubscriptionRenewalRate] = None

    id: str
    type: Literal["sandboxTesters"] = "sandboxTesters"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class SandboxTestersClearPurchaseHistoryRequestV2(ApplaudModel):
    id: str
    type: Literal["sandboxTestersClearPurchaseHistoryRequest"] = "sandboxTestersClearPurchaseHistoryRequest"
    links: Optional[ResourceLinks] = None

class ScmGitReference(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        canonical_name: Optional[str] = None
        is_deleted: Optional[bool] = None
        kind: Optional[CiGitRefKind] = None

    class Relationships(ApplaudModel):
        class Repository(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["scmRepositories"] = "scmRepositories"

            data: Optional[Data] = None

        repository: Optional[Repository] = None

    id: str
    type: Literal["scmGitReferences"] = "scmGitReferences"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class ScmProvider(ApplaudModel):
    class Attributes(ApplaudModel):
        scm_provider_type: Optional[ScmProviderType] = None
        url: Optional[AnyUrl] = None

    class Relationships(ApplaudModel):
        class Repositories(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        repositories: Optional[Repositories] = None

    id: str
    type: Literal["scmProviders"] = "scmProviders"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class ScmRepository(ApplaudModel):
    class Attributes(ApplaudModel):
        last_accessed_date: Optional[datetime.datetime] = None
        http_clone_url: Optional[AnyUrl] = None
        ssh_clone_url: Optional[AnyUrl] = None
        owner_name: Optional[str] = None
        repository_name: Optional[str] = None

    class Relationships(ApplaudModel):
        class ScmProvider(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["scmProviders"] = "scmProviders"

            data: Optional[Data] = None

        class DefaultBranch(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["scmGitReferences"] = "scmGitReferences"

            data: Optional[Data] = None

        class GitReferences(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class PullRequests(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        scm_provider: Optional[ScmProvider] = None
        default_branch: Optional[DefaultBranch] = None
        git_references: Optional[GitReferences] = None
        pull_requests: Optional[PullRequests] = None

    id: str
    type: Literal["scmRepositories"] = "scmRepositories"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionAppStoreReviewScreenshot(ApplaudModel):
    class Attributes(ApplaudModel):
        file_size: Optional[int] = None
        file_name: Optional[str] = None
        source_file_checksum: Optional[str] = None
        image_asset: Optional[ImageAsset] = None
        asset_token: Optional[str] = None
        asset_type: Optional[str] = None
        upload_operations: Optional[list[UploadOperation]] = None
        asset_delivery_state: Optional[AppMediaAssetState] = None

    class Relationships(ApplaudModel):
        class Subscription(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptions"] = "subscriptions"

            data: Optional[Data] = None

        subscription: Optional[Subscription] = None

    id: str
    type: Literal["subscriptionAppStoreReviewScreenshots"] = "subscriptionAppStoreReviewScreenshots"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionAvailability(ApplaudModel):
    class Attributes(ApplaudModel):
        available_in_new_territories: Optional[bool] = None

    class Relationships(ApplaudModel):
        class AvailableTerritories(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        available_territories: Optional[AvailableTerritories] = None

    id: str
    type: Literal["subscriptionAvailabilities"] = "subscriptionAvailabilities"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionGracePeriod(ApplaudModel):
    class Attributes(ApplaudModel):
        class RenewalType(StringEnum):
            ALL_RENEWALS = 'ALL_RENEWALS'
            PAID_TO_PAID_ONLY = 'PAID_TO_PAID_ONLY'

        opt_in: Optional[bool] = None
        sandbox_opt_in: Optional[bool] = None
        duration: Optional[SubscriptionGracePeriodDuration] = None
        renewal_type: Optional[RenewalType] = None

    id: str
    type: Literal["subscriptionGracePeriods"] = "subscriptionGracePeriods"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class SubscriptionGroupLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            PREPARE_FOR_SUBMISSION = 'PREPARE_FOR_SUBMISSION'
            WAITING_FOR_REVIEW = 'WAITING_FOR_REVIEW'
            APPROVED = 'APPROVED'
            REJECTED = 'REJECTED'

        name: Optional[str] = None
        custom_app_name: Optional[str] = None
        locale: Optional[str] = None
        state: Optional[State] = None

    class Relationships(ApplaudModel):
        class SubscriptionGroup(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionGroups"] = "subscriptionGroups"

            data: Optional[Data] = None

        subscription_group: Optional[SubscriptionGroup] = None

    id: str
    type: Literal["subscriptionGroupLocalizations"] = "subscriptionGroupLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionGroupSubmission(ApplaudModel):
    id: str
    type: Literal["subscriptionGroupSubmissions"] = "subscriptionGroupSubmissions"
    links: Optional[ResourceLinks] = None

class SubscriptionGroup(ApplaudModel):
    class Attributes(ApplaudModel):
        reference_name: Optional[str] = None

    class Relationships(ApplaudModel):
        class Subscriptions(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptions"] = "subscriptions"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class SubscriptionGroupLocalizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionGroupLocalizations"] = "subscriptionGroupLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        subscriptions: Optional[Subscriptions] = None
        subscription_group_localizations: Optional[SubscriptionGroupLocalizations] = None

    id: str
    type: Literal["subscriptionGroups"] = "subscriptionGroups"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionImage(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            AWAITING_UPLOAD = 'AWAITING_UPLOAD'
            UPLOAD_COMPLETE = 'UPLOAD_COMPLETE'
            FAILED = 'FAILED'
            PREPARE_FOR_SUBMISSION = 'PREPARE_FOR_SUBMISSION'
            WAITING_FOR_REVIEW = 'WAITING_FOR_REVIEW'
            APPROVED = 'APPROVED'
            REJECTED = 'REJECTED'

        file_size: Optional[int] = None
        file_name: Optional[str] = None
        source_file_checksum: Optional[str] = None
        asset_token: Optional[str] = None
        image_asset: Optional[ImageAsset] = None
        upload_operations: Optional[list[UploadOperation]] = None
        state: Optional[State] = None

    class Relationships(ApplaudModel):
        class Subscription(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptions"] = "subscriptions"

            data: Optional[Data] = None

        subscription: Optional[Subscription] = None

    id: str
    type: Literal["subscriptionImages"] = "subscriptionImages"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionIntroductoryOffer(ApplaudModel):
    class Attributes(ApplaudModel):
        start_date: Optional[datetime.date] = None
        end_date: Optional[datetime.date] = None
        duration: Optional[SubscriptionOfferDuration] = None
        offer_mode: Optional[SubscriptionOfferMode] = None
        number_of_periods: Optional[int] = None

    class Relationships(ApplaudModel):
        class Subscription(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptions"] = "subscriptions"

            data: Optional[Data] = None

        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        class SubscriptionPricePoint(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionPricePoints"] = "subscriptionPricePoints"

            data: Optional[Data] = None

        subscription: Optional[Subscription] = None
        territory: Optional[Territory] = None
        subscription_price_point: Optional[SubscriptionPricePoint] = None

    id: str
    type: Literal["subscriptionIntroductoryOffers"] = "subscriptionIntroductoryOffers"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionIntroductoryOfferInlineCreate(ApplaudModel):
    class Attributes(ApplaudModel):
        duration: SubscriptionOfferDuration
        number_of_periods: int
        offer_mode: SubscriptionOfferMode
        start_date: Optional[datetime.date] = None
        end_date: Optional[datetime.date] = None

    class Relationships(ApplaudModel):
        class Subscription(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptions"] = "subscriptions"

            data: Optional[Data] = None

        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        class SubscriptionPricePoint(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionPricePoints"] = "subscriptionPricePoints"

            data: Optional[Data] = None

        subscription: Optional[Subscription] = None
        territory: Optional[Territory] = None
        subscription_price_point: Optional[SubscriptionPricePoint] = None

    attributes: Attributes
    type: Literal["subscriptionIntroductoryOffers"] = "subscriptionIntroductoryOffers"
    id: Optional[str] = None
    relationships: Optional[Relationships] = None

class SubscriptionLocalization(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            PREPARE_FOR_SUBMISSION = 'PREPARE_FOR_SUBMISSION'
            WAITING_FOR_REVIEW = 'WAITING_FOR_REVIEW'
            APPROVED = 'APPROVED'
            REJECTED = 'REJECTED'

        name: Optional[str] = None
        locale: Optional[str] = None
        description: Optional[str] = None
        state: Optional[State] = None

    class Relationships(ApplaudModel):
        class Subscription(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptions"] = "subscriptions"

            data: Optional[Data] = None

        subscription: Optional[Subscription] = None

    id: str
    type: Literal["subscriptionLocalizations"] = "subscriptionLocalizations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionOfferCodeCustomCode(ApplaudModel):
    class Attributes(ApplaudModel):
        custom_code: Optional[str] = None
        number_of_codes: Optional[int] = None
        created_date: Optional[datetime.datetime] = None
        expiration_date: Optional[datetime.date] = None
        active: Optional[bool] = None

    class Relationships(ApplaudModel):
        class OfferCode(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionOfferCodes"] = "subscriptionOfferCodes"

            data: Optional[Data] = None

        offer_code: Optional[OfferCode] = None

    id: str
    type: Literal["subscriptionOfferCodeCustomCodes"] = "subscriptionOfferCodeCustomCodes"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionOfferCodeOneTimeUseCodeValue(ApplaudModel):
    id: str
    type: Literal["subscriptionOfferCodeOneTimeUseCodeValues"] = "subscriptionOfferCodeOneTimeUseCodeValues"
    links: Optional[ResourceLinks] = None

class SubscriptionOfferCodeOneTimeUseCode(ApplaudModel):
    class Attributes(ApplaudModel):
        number_of_codes: Optional[int] = None
        created_date: Optional[datetime.datetime] = None
        expiration_date: Optional[datetime.date] = None
        active: Optional[bool] = None

    class Relationships(ApplaudModel):
        class OfferCode(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionOfferCodes"] = "subscriptionOfferCodes"

            data: Optional[Data] = None

        class Values(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        offer_code: Optional[OfferCode] = None
        values: Optional[Values] = None

    id: str
    type: Literal["subscriptionOfferCodeOneTimeUseCodes"] = "subscriptionOfferCodeOneTimeUseCodes"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionOfferCodePrice(ApplaudModel):
    class Relationships(ApplaudModel):
        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        class SubscriptionPricePoint(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionPricePoints"] = "subscriptionPricePoints"

            data: Optional[Data] = None

        territory: Optional[Territory] = None
        subscription_price_point: Optional[SubscriptionPricePoint] = None

    id: str
    type: Literal["subscriptionOfferCodePrices"] = "subscriptionOfferCodePrices"
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionOfferCodePriceInlineCreate(ApplaudModel):
    class Relationships(ApplaudModel):
        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        class SubscriptionPricePoint(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionPricePoints"] = "subscriptionPricePoints"

            data: Optional[Data] = None

        territory: Optional[Territory] = None
        subscription_price_point: Optional[SubscriptionPricePoint] = None

    type: Literal["subscriptionOfferCodePrices"] = "subscriptionOfferCodePrices"
    id: Optional[str] = None
    relationships: Optional[Relationships] = None

class SubscriptionOfferCode(ApplaudModel):
    class Attributes(ApplaudModel):
        name: Optional[str] = None
        customer_eligibilities: Optional[list[SubscriptionCustomerEligibility]] = None
        offer_eligibility: Optional[SubscriptionOfferEligibility] = None
        duration: Optional[SubscriptionOfferDuration] = None
        offer_mode: Optional[SubscriptionOfferMode] = None
        number_of_periods: Optional[int] = None
        total_number_of_codes: Optional[int] = None
        active: Optional[bool] = None

    class Relationships(ApplaudModel):
        class Subscription(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptions"] = "subscriptions"

            data: Optional[Data] = None

        class OneTimeUseCodes(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionOfferCodeOneTimeUseCodes"] = "subscriptionOfferCodeOneTimeUseCodes"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class CustomCodes(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionOfferCodeCustomCodes"] = "subscriptionOfferCodeCustomCodes"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Prices(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionOfferCodePrices"] = "subscriptionOfferCodePrices"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        subscription: Optional[Subscription] = None
        one_time_use_codes: Optional[OneTimeUseCodes] = None
        custom_codes: Optional[CustomCodes] = None
        prices: Optional[Prices] = None

    id: str
    type: Literal["subscriptionOfferCodes"] = "subscriptionOfferCodes"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionPricePoint(ApplaudModel):
    class Attributes(ApplaudModel):
        customer_price: Optional[str] = None
        proceeds: Optional[str] = None
        proceeds_year2: Optional[str] = None

    class Relationships(ApplaudModel):
        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        class Equalizations(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        territory: Optional[Territory] = None
        equalizations: Optional[Equalizations] = None

    id: str
    type: Literal["subscriptionPricePoints"] = "subscriptionPricePoints"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionPricePointInlineCreate(ApplaudModel):
    type: Literal["subscriptionPricePoints"] = "subscriptionPricePoints"
    id: Optional[str] = None

class SubscriptionPrice(ApplaudModel):
    class Attributes(ApplaudModel):
        start_date: Optional[datetime.date] = None
        preserved: Optional[bool] = None

    class Relationships(ApplaudModel):
        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        class SubscriptionPricePoint(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionPricePoints"] = "subscriptionPricePoints"

            data: Optional[Data] = None

        territory: Optional[Territory] = None
        subscription_price_point: Optional[SubscriptionPricePoint] = None

    id: str
    type: Literal["subscriptionPrices"] = "subscriptionPrices"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionPriceInlineCreate(ApplaudModel):
    class Attributes(ApplaudModel):
        start_date: Optional[datetime.date] = None
        preserve_current_price: Optional[bool] = None

    class Relationships(ApplaudModel):
        class Subscription(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptions"] = "subscriptions"

            data: Optional[Data] = None

        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        class SubscriptionPricePoint(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionPricePoints"] = "subscriptionPricePoints"

            data: Optional[Data] = None

        subscription: Optional[Subscription] = None
        territory: Optional[Territory] = None
        subscription_price_point: Optional[SubscriptionPricePoint] = None

    type: Literal["subscriptionPrices"] = "subscriptionPrices"
    id: Optional[str] = None
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None

class SubscriptionPromotionalOfferPrice(ApplaudModel):
    class Relationships(ApplaudModel):
        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        class SubscriptionPricePoint(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionPricePoints"] = "subscriptionPricePoints"

            data: Optional[Data] = None

        territory: Optional[Territory] = None
        subscription_price_point: Optional[SubscriptionPricePoint] = None

    id: str
    type: Literal["subscriptionPromotionalOfferPrices"] = "subscriptionPromotionalOfferPrices"
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionPromotionalOfferPriceInlineCreate(ApplaudModel):
    class Relationships(ApplaudModel):
        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        class SubscriptionPricePoint(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionPricePoints"] = "subscriptionPricePoints"

            data: Optional[Data] = None

        territory: Optional[Territory] = None
        subscription_price_point: Optional[SubscriptionPricePoint] = None

    type: Literal["subscriptionPromotionalOfferPrices"] = "subscriptionPromotionalOfferPrices"
    id: Optional[str] = None
    relationships: Optional[Relationships] = None

class SubscriptionPromotionalOffer(ApplaudModel):
    class Attributes(ApplaudModel):
        duration: Optional[SubscriptionOfferDuration] = None
        name: Optional[str] = None
        number_of_periods: Optional[int] = None
        offer_code: Optional[str] = None
        offer_mode: Optional[SubscriptionOfferMode] = None

    class Relationships(ApplaudModel):
        class Subscription(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptions"] = "subscriptions"

            data: Optional[Data] = None

        class Prices(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionPromotionalOfferPrices"] = "subscriptionPromotionalOfferPrices"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        subscription: Optional[Subscription] = None
        prices: Optional[Prices] = None

    id: str
    type: Literal["subscriptionPromotionalOffers"] = "subscriptionPromotionalOffers"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class SubscriptionPromotionalOfferInlineCreate(ApplaudModel):
    class Attributes(ApplaudModel):
        duration: SubscriptionOfferDuration
        offer_code: str
        name: str
        number_of_periods: int
        offer_mode: SubscriptionOfferMode

    class Relationships(ApplaudModel):
        class Subscription(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptions"] = "subscriptions"

            data: Optional[Data] = None

        class Prices(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionPromotionalOfferPrices"] = "subscriptionPromotionalOfferPrices"

            data: Optional[list[Data]] = None

        subscription: Optional[Subscription] = None
        prices: Optional[Prices] = None

    attributes: Attributes
    type: Literal["subscriptionPromotionalOffers"] = "subscriptionPromotionalOffers"
    id: Optional[str] = None
    relationships: Optional[Relationships] = None

class SubscriptionSubmission(ApplaudModel):
    class Relationships(ApplaudModel):
        class Subscription(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptions"] = "subscriptions"

            data: Optional[Data] = None

        subscription: Optional[Subscription] = None

    id: str
    type: Literal["subscriptionSubmissions"] = "subscriptionSubmissions"
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class Subscription(ApplaudModel):
    class Attributes(ApplaudModel):
        class State(StringEnum):
            MISSING_METADATA = 'MISSING_METADATA'
            READY_TO_SUBMIT = 'READY_TO_SUBMIT'
            WAITING_FOR_REVIEW = 'WAITING_FOR_REVIEW'
            IN_REVIEW = 'IN_REVIEW'
            DEVELOPER_ACTION_NEEDED = 'DEVELOPER_ACTION_NEEDED'
            PENDING_BINARY_APPROVAL = 'PENDING_BINARY_APPROVAL'
            APPROVED = 'APPROVED'
            DEVELOPER_REMOVED_FROM_SALE = 'DEVELOPER_REMOVED_FROM_SALE'
            REMOVED_FROM_SALE = 'REMOVED_FROM_SALE'
            REJECTED = 'REJECTED'

        class SubscriptionPeriod(StringEnum):
            ONE_WEEK = 'ONE_WEEK'
            ONE_MONTH = 'ONE_MONTH'
            TWO_MONTHS = 'TWO_MONTHS'
            THREE_MONTHS = 'THREE_MONTHS'
            SIX_MONTHS = 'SIX_MONTHS'
            ONE_YEAR = 'ONE_YEAR'

        name: Optional[str] = None
        product_id: Optional[str] = None
        family_sharable: Optional[bool] = None
        state: Optional[State] = None
        subscription_period: Optional[SubscriptionPeriod] = None
        review_note: Optional[str] = None
        group_level: Optional[int] = None

    class Relationships(ApplaudModel):
        class SubscriptionLocalizations(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionLocalizations"] = "subscriptionLocalizations"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class AppStoreReviewScreenshot(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionAppStoreReviewScreenshots"] = "subscriptionAppStoreReviewScreenshots"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class Group(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionGroups"] = "subscriptionGroups"

            data: Optional[Data] = None

        class IntroductoryOffers(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionIntroductoryOffers"] = "subscriptionIntroductoryOffers"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class PromotionalOffers(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionPromotionalOffers"] = "subscriptionPromotionalOffers"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class OfferCodes(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionOfferCodes"] = "subscriptionOfferCodes"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Prices(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionPrices"] = "subscriptionPrices"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class PricePoints(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        class PromotedPurchase(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["promotedPurchases"] = "promotedPurchases"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class SubscriptionAvailability(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionAvailabilities"] = "subscriptionAvailabilities"

            links: Optional[RelationshipLinks] = None
            data: Optional[Data] = None

        class WinBackOffers(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["winBackOffers"] = "winBackOffers"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        class Images(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionImages"] = "subscriptionImages"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        subscription_localizations: Optional[SubscriptionLocalizations] = None
        app_store_review_screenshot: Optional[AppStoreReviewScreenshot] = None
        group: Optional[Group] = None
        introductory_offers: Optional[IntroductoryOffers] = None
        promotional_offers: Optional[PromotionalOffers] = None
        offer_codes: Optional[OfferCodes] = None
        prices: Optional[Prices] = None
        price_points: Optional[PricePoints] = None
        promoted_purchase: Optional[PromotedPurchase] = None
        subscription_availability: Optional[SubscriptionAvailability] = None
        win_back_offers: Optional[WinBackOffers] = None
        images: Optional[Images] = None

    id: str
    type: Literal["subscriptions"] = "subscriptions"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class Territory(ApplaudModel):
    class Attributes(ApplaudModel):
        currency: Optional[str] = None

    id: str
    type: Literal["territories"] = "territories"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class TerritoryInlineCreate(ApplaudModel):
    type: Literal["territories"] = "territories"
    id: Optional[str] = None

class TerritoryAgeRating(ApplaudModel):
    class Attributes(ApplaudModel):
        app_store_age_rating: Optional[AppStoreAgeRating] = None

    class Relationships(ApplaudModel):
        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        territory: Optional[Territory] = None

    id: str
    type: Literal["territoryAgeRatings"] = "territoryAgeRatings"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class TerritoryAvailability(ApplaudModel):
    class Attributes(ApplaudModel):
        available: Optional[bool] = None
        release_date: Optional[datetime.date] = None
        pre_order_enabled: Optional[bool] = None
        pre_order_publish_date: Optional[datetime.date] = None
        content_statuses: Optional[list[str]] = None

    class Relationships(ApplaudModel):
        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        territory: Optional[Territory] = None

    id: str
    type: Literal["territoryAvailabilities"] = "territoryAvailabilities"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class TerritoryAvailabilityInlineCreate(ApplaudModel):
    type: Literal["territoryAvailabilities"] = "territoryAvailabilities"
    id: Optional[str] = None

class UserInvitation(ApplaudModel):
    class Attributes(ApplaudModel):
        email: Optional[EmailStr] = None
        first_name: Optional[str] = None
        last_name: Optional[str] = None
        expiration_date: Optional[datetime.datetime] = None
        roles: Optional[list[UserRole]] = None
        all_apps_visible: Optional[bool] = None
        provisioning_allowed: Optional[bool] = None

    class Relationships(ApplaudModel):
        class VisibleApps(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        visible_apps: Optional[VisibleApps] = None

    id: str
    type: Literal["userInvitations"] = "userInvitations"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class User(ApplaudModel):
    class Attributes(ApplaudModel):
        username: Optional[str] = None
        first_name: Optional[str] = None
        last_name: Optional[str] = None
        roles: Optional[list[UserRole]] = None
        all_apps_visible: Optional[bool] = None
        provisioning_allowed: Optional[bool] = None

    class Relationships(ApplaudModel):
        class VisibleApps(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        visible_apps: Optional[VisibleApps] = None

    id: str
    type: Literal["users"] = "users"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class WebhookDelivery(ApplaudModel):
    class Attributes(ApplaudModel):
        class Request(ApplaudModel):
            url: Optional[AnyUrl] = None

        class Response(ApplaudModel):
            http_status_code: Optional[int] = None
            body: Optional[str] = None

        class DeliveryState(StringEnum):
            SUCCEEDED = 'SUCCEEDED'
            FAILED = 'FAILED'
            PENDING = 'PENDING'

        created_date: Optional[datetime.datetime] = None
        delivery_state: Optional[DeliveryState] = None
        error_message: Optional[str] = None
        redelivery: Optional[bool] = None
        sent_date: Optional[datetime.datetime] = None
        request: Optional[Request] = None
        response: Optional[Response] = None

    class Relationships(ApplaudModel):
        class Event(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["webhookEvents"] = "webhookEvents"

            data: Optional[Data] = None

        event: Optional[Event] = None

    id: str
    type: Literal["webhookDeliveries"] = "webhookDeliveries"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class WebhookEvent(ApplaudModel):
    class Attributes(ApplaudModel):
        event_type: Optional[WebhookEventType] = None
        payload: Optional[str] = None
        ping: Optional[bool] = None
        created_date: Optional[datetime.datetime] = None

    id: str
    type: Literal["webhookEvents"] = "webhookEvents"
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None

class WebhookPing(ApplaudModel):
    id: str
    type: Literal["webhookPings"] = "webhookPings"
    links: Optional[ResourceLinks] = None

class Webhook(ApplaudModel):
    class Attributes(ApplaudModel):
        enabled: Optional[bool] = None
        event_types: Optional[list[WebhookEventType]] = None
        name: Optional[str] = None
        url: Optional[AnyUrl] = None

    class Relationships(ApplaudModel):
        class App(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["apps"] = "apps"

            data: Optional[Data] = None

        class Deliveries(ApplaudModel):
            links: Optional[RelationshipLinks] = None

        app: Optional[App] = None
        deliveries: Optional[Deliveries] = None

    id: str
    type: Literal["webhooks"] = "webhooks"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class WinBackOfferPrice(ApplaudModel):
    class Relationships(ApplaudModel):
        class Territory(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["territories"] = "territories"

            data: Optional[Data] = None

        class SubscriptionPricePoint(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["subscriptionPricePoints"] = "subscriptionPricePoints"

            data: Optional[Data] = None

        territory: Optional[Territory] = None
        subscription_price_point: Optional[SubscriptionPricePoint] = None

    id: str
    type: Literal["winBackOfferPrices"] = "winBackOfferPrices"
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class WinBackOfferPriceInlineCreate(ApplaudModel):
    type: Literal["winBackOfferPrices"] = "winBackOfferPrices"
    id: Optional[str] = None

class WinBackOffer(ApplaudModel):
    class Attributes(ApplaudModel):
        class Priority(StringEnum):
            HIGH = 'HIGH'
            NORMAL = 'NORMAL'

        class PromotionIntent(StringEnum):
            NOT_PROMOTED = 'NOT_PROMOTED'
            USE_AUTO_GENERATED_ASSETS = 'USE_AUTO_GENERATED_ASSETS'

        reference_name: Optional[str] = None
        offer_id: Optional[str] = None
        duration: Optional[SubscriptionOfferDuration] = None
        offer_mode: Optional[SubscriptionOfferMode] = None
        period_count: Optional[int] = None
        customer_eligibility_paid_subscription_duration_in_months: Optional[int] = None
        customer_eligibility_time_since_last_subscribed_in_months: Optional[IntegerRange] = None
        customer_eligibility_wait_between_offers_in_months: Optional[int] = None
        start_date: Optional[datetime.date] = None
        end_date: Optional[datetime.date] = None
        priority: Optional[Priority] = None
        promotion_intent: Optional[PromotionIntent] = None

    class Relationships(ApplaudModel):
        class Prices(ApplaudModel):
            class Data(ApplaudModel):
                id: str
                type: Literal["winBackOfferPrices"] = "winBackOfferPrices"

            links: Optional[RelationshipLinks] = None
            meta: Optional[PagingInformation] = None
            data: Optional[list[Data]] = None

        prices: Optional[Prices] = None

    id: str
    type: Literal["winBackOffers"] = "winBackOffers"
    attributes: Optional[Attributes] = None
    relationships: Optional[Relationships] = None
    links: Optional[ResourceLinks] = None

class ErrorSourceParameter(ApplaudModel):
    parameter: str

class ErrorSourcePointer(ApplaudModel):
    pointer: str

class ErrorLinks(ApplaudModel):
    about: Optional[str] = None
    associated: Optional[str] = None

class PagedDocumentLinks(ApplaudModel):
    self: str
    first: Optional[str] = None
    next: Optional[str] = None

class DocumentLinks(ApplaudModel):
    self: str

class RelationshipLinks(ApplaudModel):
    self: Optional[str] = None
    related: Optional[str] = None

class AppMediaPreviewFrameImageState(ApplaudModel):
    class State(StringEnum):
        PROCESSING = 'PROCESSING'
        COMPLETE = 'COMPLETE'
        FAILED = 'FAILED'

    errors: Optional[list[AppMediaStateError]] = None
    warnings: Optional[list[AppMediaStateError]] = None
    state: Optional[State] = None

class AppMediaVideoState(ApplaudModel):
    class State(StringEnum):
        AWAITING_UPLOAD = 'AWAITING_UPLOAD'
        UPLOAD_COMPLETE = 'UPLOAD_COMPLETE'
        PROCESSING = 'PROCESSING'
        COMPLETE = 'COMPLETE'
        FAILED = 'FAILED'

    errors: Optional[list[AppMediaStateError]] = None
    warnings: Optional[list[AppMediaStateError]] = None
    state: Optional[State] = None

class BetaFeedbackScreenshotImage(ApplaudModel):
    url: Optional[str] = None
    width: Optional[int] = None
    height: Optional[int] = None
    expiration_date: Optional[datetime.datetime] = None

class Checksums(ApplaudModel):
    class File(ApplaudModel):
        hash: Optional[str] = None
        algorithm: Optional[ChecksumAlgorithm] = None

    class Composite(ApplaudModel):
        class Algorithm(StringEnum):
            MD5 = 'MD5'

        hash: Optional[str] = None
        algorithm: Literal[Algorithm.MD5] = Algorithm.MD5

    file: Optional[File] = None
    composite: Optional[Composite] = None

class CiManualBranchStartCondition(ApplaudModel):
    source: Optional[CiBranchPatterns] = None

class CiManualPullRequestStartCondition(ApplaudModel):
    source: Optional[CiBranchPatterns] = None
    destination: Optional[CiBranchPatterns] = None

class CiManualTagStartCondition(ApplaudModel):
    source: Optional[CiTagPatterns] = None

class DeliveryFileUploadOperation(ApplaudModel):
    method: Optional[str] = None
    url: Optional[str] = None
    length: Optional[int] = None
    offset: Optional[int] = None
    request_headers: Optional[list[HttpHeader]] = None
    expiration: Optional[datetime.datetime] = None
    part_number: Optional[int] = None
    entity_tag: Optional[str] = None

class DeviceFamilyOsVersionFilter(ApplaudModel):
    device_family: Optional[DeviceFamily] = None
    minimum_os_inclusive: Optional[str] = None
    maximum_os_inclusive: Optional[str] = None

class DiagnosticInsight(ApplaudModel):
    class ReferenceVersion(ApplaudModel):
        version: Optional[str] = None
        value: Optional[float] = None

    insight_type: Optional[DiagnosticInsightType] = None
    direction: Optional[DiagnosticInsightDirection] = None
    reference_versions: Optional[list[ReferenceVersion]] = None

class DiagnosticLogCallStackNode(ApplaudModel):
    sample_count: Optional[int] = None
    is_blame_frame: Optional[bool] = None
    symbol_name: Optional[str] = None
    insights_category: Optional[str] = None
    offset_into_symbol: Optional[str] = None
    binary_name: Optional[str] = None
    file_name: Optional[str] = None
    binary_uuid: Optional[str] = None
    line_number: Optional[str] = None
    address: Optional[str] = None
    offset_into_binary_text_segment: Optional[str] = None
    raw_frame: Optional[str] = None
    sub_frames: Optional[list[DiagnosticLogCallStackNode]] = None

class GameCenterMatchmakingTeamAssignment(ApplaudModel):
    player_id: Optional[str] = None
    team: Optional[str] = None

class IntegerRange(ApplaudModel):
    minimum: Optional[int] = None
    maximum: Optional[int] = None

class Location(ApplaudModel):
    latitude: Optional[float] = None
    longitude: Optional[float] = None

class MetricsInsight(ApplaudModel):
    class Population(ApplaudModel):
        delta_percentage: Optional[float] = None
        percentile: Optional[str] = None
        summary_string: Optional[str] = None
        reference_average_value: Optional[float] = None
        latest_version_value: Optional[float] = None
        device: Optional[str] = None

    metric_category: Optional[MetricCategory] = None
    latest_version: Optional[str] = None
    metric: Optional[str] = None
    summary_string: Optional[str] = None
    reference_versions: Optional[str] = None
    max_latest_version_value: Optional[float] = None
    sub_system_label: Optional[str] = None
    high_impact: Optional[bool] = None
    populations: Optional[list[Population]] = None

class PreviewFrameImage(ApplaudModel):
    image: Optional[ImageAsset] = None
    state: Optional[AppMediaPreviewFrameImageState] = None

class Property(ApplaudModel):
    key: Optional[str] = None
    value: Optional[str] = None

class StateDetail(ApplaudModel):
    code: Optional[str] = None
    description: Optional[str] = None

class diagnosticLogs(ApplaudModel):
    class ProductData(ApplaudModel):
        class DiagnosticInsight(ApplaudModel):
            insights_url: Optional[str] = None
            insights_category: Optional[str] = None
            insights_string: Optional[str] = None

        class DiagnosticLog(ApplaudModel):
            class CallStackTree(ApplaudModel):
                class CallStack(ApplaudModel):
                    call_stack_root_frames: Optional[list[DiagnosticLogCallStackNode]] = None

                call_stack_per_thread: Optional[bool] = None
                call_stacks: Optional[list[CallStack]] = None

            class DiagnosticMetaData(ApplaudModel):
                bundle_id: Optional[str] = None
                event: Optional[str] = None
                os_version: Optional[str] = None
                app_version: Optional[str] = None
                writes_caused: Optional[str] = None
                device_type: Optional[str] = None
                platform_architecture: Optional[str] = None
                event_detail: Optional[str] = None
                build_version: Optional[str] = None

            call_stack_tree: Optional[list[CallStackTree]] = None
            diagnostic_meta_data: Optional[DiagnosticMetaData] = None

        signature_id: Optional[str] = None
        diagnostic_insights: Optional[list[DiagnosticInsight]] = None
        diagnostic_logs: Optional[list[DiagnosticLog]] = None

    product_data: Optional[list[ProductData]] = None
    version: Optional[str] = None

class xcodeMetrics(ApplaudModel):
    class Insights(ApplaudModel):
        trending_up: Optional[list[MetricsInsight]] = None
        regressions: Optional[list[MetricsInsight]] = None

    class ProductData(ApplaudModel):
        class MetricCategory(ApplaudModel):
            class Metric(ApplaudModel):
                class GoalKey(ApplaudModel):
                    goal_key: Optional[str] = None
                    lower_bound: Optional[int] = None
                    upper_bound: Optional[int] = None

                class Unit(ApplaudModel):
                    identifier: Optional[str] = None
                    display_name: Optional[str] = None

                class Dataset(ApplaudModel):
                    class FilterCriteria(ApplaudModel):
                        percentile: Optional[str] = None
                        device: Optional[str] = None
                        device_marketing_name: Optional[str] = None

                    class Point(ApplaudModel):
                        class PercentageBreakdown(ApplaudModel):
                            value: Optional[float] = None
                            sub_system_label: Optional[str] = None

                        version: Optional[str] = None
                        value: Optional[float] = None
                        error_margin: Optional[float] = None
                        percentage_breakdown: Optional[PercentageBreakdown] = None
                        goal: Optional[str] = None

                    class RecommendedMetricGoal(ApplaudModel):
                        value: Optional[float] = None
                        detail: Optional[str] = None

                    filter_criteria: Optional[FilterCriteria] = None
                    points: Optional[list[Point]] = None
                    recommended_metric_goal: Optional[RecommendedMetricGoal] = None

                identifier: Optional[str] = None
                goal_keys: Optional[list[GoalKey]] = None
                unit: Optional[Unit] = None
                datasets: Optional[list[Dataset]] = None

            identifier: Optional[MetricCategory] = None
            metrics: Optional[list[Metric]] = None

        platform: Optional[str] = None
        metric_categories: Optional[list[MetricCategory]] = None

    version: Optional[str] = None
    insights: Optional[Insights] = None
    product_data: Optional[list[ProductData]] = None


